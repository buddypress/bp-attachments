{"mappings":"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","sources":["src/blocks/image-attachment/block.json","src/blocks/common/components/attachment-placeholder.js","src/blocks/image-attachment/js/edit.js","src/blocks/image-attachment/js/index.js"],"sourcesContent":["{\n\t\"$schema\": \"https://schemas.wp.org/trunk/block.json\",\n\t\"apiVersion\": 2,\n\t\"version\": \"1.0.0\",\n\t\"name\": \"bp/image-attachment\",\n\t\"title\": \"Community Image\",\n\t\"category\": \"media\",\n\t\"icon\": \"image\",\n\t\"description\": \"Insert an image from your personal media library.\",\n\t\"keywords\": [ \"BuddyPress\", \"community\", \"image\", \"img\", \"picture\", \"photo\", \"media\" ],\n\t\"textdomain\": \"bp-attachments\",\n\t\"attributes\": {\n\t\t\"align\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"url\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"src\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t},\n\t\"supports\": {\n\t\t\"alignWide\": false,\n\t\t\"anchor\": false,\n\t\t\"html\": false\n\t},\n\t\"editorScript\": \"file:./bp-attachments/assets/blocks/image-attachment/js/index.js\",\n\t\"style\": \"file:./bp-attachments/assets/blocks/image-attachment/css/index.css\"\n}\n","/**\n * WordPress dependencies.\n */\nconst {\n\tcomponents: {\n\t\tDropZone,\n\t\tFormFileUpload,\n\t\tPlaceholder,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * BP Attachments blocks placeholder to upload files.\n *\n * @since 1.0.0\n *\n * @param {string} type The allowed media type.\n * @param {string} icon The dashicon name.\n * @param {string} label The label to use.\n */\nconst AttachmentPlaceholder = ( { type, icon, label, onUploadedMedium, children } ) => {\n\tconst {\n\t\tbpAttachments: {\n\t\t\tallowedExtByMediaList,\n\t\t},\n\t} = useSelect( ( select ) => {\n\t\treturn select( 'core/editor' ).getEditorSettings();\n\t}, [] );\n\tconst allowedTypes = allowedExtByMediaList[ type + '_playlist' ] ? allowedExtByMediaList[ type + '_playlist' ] : allowedExtByMediaList.album;\n\n\tconst uploadMedia = ( files ) => {\n\t\tlet media;\n\n\t\tif ( files.currentTarget && files.currentTarget.files ) {\n\t\t\tmedia = [ ...files.currentTarget.files ];\n\t\t} else {\n\t\t\tmedia = files;\n\t\t}\n\n\t\t// Using only one medium.\n\t\tconst medium = media[0];\n\t\tonUploadedMedium( medium );\n\t}\n\n\treturn (\n\t\t<Placeholder\n\t\t\ticon={ !! icon ? icon : 'admin-media' }\n\t\t\tlabel={ !! label ? label : __( 'Community Media', 'bp-attachments' ) }\n\t\t\tisColumnLayout={ true }\n\t\t\tclassName=\"bp-attachments-media-placeholder\"\n\t\t>\n\t\t\t<DropZone\n\t\t\t\tonFilesDrop={ ( files ) => uploadMedia( files ) }\n\t\t\t\tclassName=\"uploader-inline\"\n\t\t\t/>\n\t\t\t<FormFileUpload\n\t\t\t\tonChange={ ( files ) => uploadMedia( files ) }\n\t\t\t\tmultiple={ false }\n\t\t\t\taccept={ allowedTypes }\n\t\t\t\tclassName=\"components-button block-editor-media-placeholder__button block-editor-media-placeholder__upload-button is-primary\"\n\t\t\t>\n\t\t\t\t{ __( 'Select a file', 'bp-attachments' ) }\n\t\t\t</FormFileUpload>\n\t\t\t{ children }\n\t\t</Placeholder>\n\t);\n};\n\nexport default AttachmentPlaceholder;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tapiFetch,\n\tblockEditor: {\n\t\tBlockAlignmentControl,\n\t\tBlockControls,\n\t\tuseBlockProps,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t},\n\tcomponents: {\n\t\tNotice,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport AttachmentPlaceholder from '../../common/components/attachment-placeholder';\n\nconst editImage = ( { attributes, setAttributes } ) => {\n\tconst { align, src } = attributes;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: !! align && undefined !== align ? 'wp-block-bp-image-attachment align' + align : 'wp-block-bp-image-attachment',\n\t} );\n\tconst [ errorMessage, setErrorMessage ] = useState( '' );\n\tconst { userId, postId } = useSelect( ( select ) => {\n\t\tconst currentUser = select( 'core' ).getCurrentUser();\n\n\t\treturn {\n\t\t\tuserId: currentUser.id,\n\t\t\tpostId: select( 'core/editor' ).getCurrentPostId(),\n\t\t};\n\t}, [] );\n\n\tconst onUploadedImage = ( file ) => {\n\t\tconst formData = new FormData();\n\t\tformData.append( 'file', file );\n\t\tformData.append( 'action', 'bp_attachments_media_upload' );\n\t\tformData.append( 'object', 'members' );\n\t\tformData.append( 'object_item', userId );\n\t\tformData.append( 'visibility', 'public' );\n\n\t\tif ( !! postId ) {\n\t\t\tformData.append( 'attached_to_object_type', 'post' );\n\t\t\tformData.append( 'attached_to_object_id', postId );\n\t\t}\n\n\t\t// Reset error message.\n\t\tsetErrorMessage( '' );\n\n\t\tapiFetch( {\n\t\t\tpath: 'buddypress/v1/attachments',\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData,\n\t\t} ).then( ( response ) => {\n\t\t\tif ( response.links && response.links.src ) {\n\t\t\t\tsetAttributes( {\n\t\t\t\t\turl: response.links.view,\n\t\t\t\t\tsrc: response.links.src,\n\t\t\t\t} );\n\t\t\t}\n\t\t} ).catch( ( error ) => {\n\t\t\tif ( error.message ) {\n\t\t\t\tconst errorMessage = (\n\t\t\t\t\t<Notice status=\"error\" isDismissible={ false }>\n\t\t\t\t\t\t<p>{ error.message }</p>\n\t\t\t\t\t</Notice>\n\t\t\t\t);\n\n\t\t\t\tsetErrorMessage( errorMessage );\n\t\t\t}\n\t\t} );\n\t}\n\n\tif ( ! src ) {\n\t\treturn (\n\t\t\t<figure { ...blockProps }>\n\t\t\t\t<AttachmentPlaceholder\n\t\t\t\t\ttype=\"image\"\n\t\t\t\t\ticon=\"format-image\"\n\t\t\t\t\tlabel={ __( 'Community Image', 'bp-attachments' ) }\n\t\t\t\t\tonUploadedMedium={ onUploadedImage }\n\t\t\t\t>\n\t\t\t\t\t{ errorMessage }\n\t\t\t\t</AttachmentPlaceholder>\n\t\t\t</figure>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<BlockAlignmentControl\n\t\t\t\t\tcontrols={ [ 'none', 'left', 'center', 'right' ] }\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ ( alignment ) => setAttributes( { align: alignment } ) }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<figure { ...blockProps }>\n\t\t\t\t<img src={ src } />\n\t\t\t</figure>\n\t\t</Fragment>\n\t)\n};\n\nexport default editImage;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tblocks: {\n\t\tregisterBlockType,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport metadata from '../block.json';\nimport editImage from './edit';\n\nregisterBlockType( metadata, {\n\ticon: {\n\t\tbackground: '#fff',\n\t\tforeground: '#d84800',\n\t\tsrc: 'format-image',\n\t},\n\tedit: editImage,\n} );\n"],"names":["module","JSON","parse","components","DropZone","FormFileUpload","Placeholder","data","useDispatch","useSelect","element","createElement","i18n","__","wp","$caf7cfe3bd8cad6b$export$2e2bcd8739ae039","_ref","type","icon","label","onUploadedMedium","children","bpAttachments","allowedExtByMediaList","select","getEditorSettings","allowedTypes","album","uploadMedia","files","media","currentTarget","medium","$caf7cfe3bd8cad6b$var$createElement","$caf7cfe3bd8cad6b$var$Placeholder","isColumnLayout","className","$caf7cfe3bd8cad6b$var$DropZone","onFilesDrop","$caf7cfe3bd8cad6b$var$FormFileUpload","onChange","multiple","accept","apiFetch","blockEditor","BlockAlignmentControl","BlockControls","useBlockProps","Notice","Fragment","useState","$d70e294af7f90b98$export$2e2bcd8739ae039","attributes","setAttributes","align","src","blockProps","undefined","errorMessage","setErrorMessage","userId","postId","getCurrentUser","id","getCurrentPostId","$d70e294af7f90b98$var$createElement","$d70e294af7f90b98$var$Fragment","$d70e294af7f90b98$var$BlockControls","group","$d70e294af7f90b98$var$BlockAlignmentControl","controls","value","alignment","file","formData","FormData","append","path","method","body","then","response","links","url","view","catch","error","message","$d70e294af7f90b98$var$Notice","status","isDismissible","blocks","registerBlockType","metadata","background","foreground","edit","editImage"],"version":3,"file":"index.js.map"}