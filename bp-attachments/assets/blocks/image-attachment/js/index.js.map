{"mappings":"mEAAAA,EAAiBC,KAAKC,MAAM,smBCG5B,MACCC,YAAYC,SACXA,EADWC,eAEXA,EAFWC,YAGXA,GAEDC,MAAMC,YACLA,EADKC,UAELA,GAEDC,SAASC,cACRA,GAEDC,MAAMC,GACLA,IAEEC,G,IAwDJC,EA7C8BC,IAA+C,IAA7CC,KAAEA,EAAFC,KAAQA,EAARC,MAAcA,EAAdC,iBAAqBA,GAArBJ,EAC/B,MACCK,eAAeC,sBACdA,IAEEb,GAAac,GACTA,EAAQ,eAAgBC,qBAC7B,IACGC,EAAeH,EAAuBL,EAAO,aAAgBK,EAAuBL,EAAO,aAAgBK,EAAsBI,MAEjIC,EAAgBC,IACrB,IAAIC,EAGHA,EADID,EAAME,eAAiBF,EAAME,cAAcF,MACvC,IAAKA,EAAME,cAAcF,OAEzBA,EAIT,MAAMG,EAASF,EAAM,GACrBT,EAAkBW,EAAlB,EAGD,OACCC,EAACC,EADF,CAEEf,KAAUA,GAAc,cACxBC,MAAWA,GAAgBN,EAAI,kBAAmB,mBAElDmB,EAACE,EAJF,CAKEC,YAAgBP,GAAWD,EAAaC,GACxCQ,UAAU,oBAEXJ,EAACK,EAJD,CAKCC,SAAaV,GAAWD,EAAaC,GACrCW,UAAW,EACXC,OAASf,EACTW,UAAU,qHAERvB,EAAI,gBAAiB,mBAf1B,ECnDD,MAAM4B,SACLA,EACAC,aAAaC,cACZA,GAEDpC,MAAME,UACLA,GAEDC,SAASC,cACRA,GAEDC,MAAMC,GACLA,IAEEC,G,IA4CJ8B,EArCkB5B,IAAqC,IAAnC6B,WAAEA,EAAFC,cAAcA,GAAd9B,EACA2B,IAAnB,MACMI,EAActC,GAAac,GACzBA,EAAQ,QAASyB,kBACtB,IAuBH,OACCC,EAAClC,EADF,CAEEE,KAAK,QACLC,KAAK,eACLC,MAAQN,EAAI,kBAAmB,kBAC/BO,iBA1BwB8B,IACzB,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAQ,OAAQH,GACzBC,EAASE,OAAQ,SAAU,+BAC3BF,EAASE,OAAQ,SAAU,WAC3BF,EAASE,OAAQ,cAAeN,EAAYO,IAC5CH,EAASE,OAAQ,SAAU,UAE3BZ,EAAU,CACTc,KAAM,4BACNC,OAAQ,OACRC,KAAMN,IACHO,MAAQC,IACXC,QAAQC,IAAKF,EAAbC,IACGE,OAASC,IACZH,QAAQC,IAAKE,EAAbH,IACGI,SAAS,KACZJ,QAAQC,IAAK,UAAbD,GACA,GAGF,EChDD,MACCK,QAAQC,kBACPA,GAEDxB,aAAaC,cACZA,GAEDjC,SAASC,cACRA,GAEDC,MAAMC,GACLA,IAEEC,GAQJoD,EAAmBC,KAAU,CAC5BC,MAAOvD,EAAI,kBAAmB,kBAC9BwD,YAAaxD,EAAI,gFAAiF,kBAClGK,KAAM,CACLoD,WAAY,OACZC,WAAY,UACZC,IAAK,gBAENC,SAAU,QACVC,SAAU,CACT,aACA7D,EAAI,YAAa,kBACjBA,EAAI,QAAS,kBACbA,EAAI,MAAO,kBACXA,EAAI,UAAW,kBACfA,EAAI,QAAS,kBACbA,EAAI,QAAS,mBAEdgC,WAAY,CACX8B,KAAM,CACL1D,KAAM,WAGR2D,SAAU,CACTC,OAAS,EACTC,WAAa,EACbC,QAAU,EACV3C,WAAa,EACb4C,MAAQ,GAETC,KAAMC,G","sources":["src/blocks/image-attachment/block.json","src/blocks/common/components/attachment-placeholder.js","src/blocks/image-attachment/js/edit.js","src/blocks/image-attachment/js/index.js"],"sourcesContent":["{\n\t\"$schema\": \"https://schemas.wp.org/trunk/block.json\",\n\t\"apiVersion\": 2,\n\t\"name\": \"bp/image-attachment\",\n\t\"title\": \"Community Image\",\n\t\"category\": \"media\",\n\t\"icon\": \"image\",\n\t\"description\": \"Insert an image from your personal media library.\",\n\t\"keywords\": [ \"BuddyPress\", \"community\", \"image\", \"img\", \"picture\", \"photo\", \"media\" ],\n\t\"textdomain\": \"bp-attachments\",\n\t\"attributes\": {\n\t\t\"link\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t},\n\t\"supports\": {\n\t\t\"align\": false,\n\t\t\"alignWide\": false,\n\t\t\"anchor\": false,\n\t\t\"className\": false,\n\t\t\"html\": false\n\t},\n\t\"editorScript\": \"file:./bp-attachments/js/blocks/image-attachment/index.js\",\n\t\"style\": \"file:./bp-attachments/assets/blocks/image-attachment/index.css\"\n}\n","/**\n * WordPress dependencies.\n */\nconst {\n\tcomponents: {\n\t\tDropZone,\n\t\tFormFileUpload,\n\t\tPlaceholder,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * BP Attachments blocks placeholder to upload files.\n *\n * @since 1.0.0\n *\n * @param {string} type The allowed media type.\n * @param {string} icon The dashicon name.\n * @param {string} label The label to use.\n */\nconst AttachmentPlaceholder = ( { type, icon, label, onUploadedMedium } ) => {\n\tconst {\n\t\tbpAttachments: {\n\t\t\tallowedExtByMediaList,\n\t\t},\n\t} = useSelect( ( select ) => {\n\t\treturn select( 'core/editor' ).getEditorSettings();\n\t}, [] );\n\tconst allowedTypes = allowedExtByMediaList[ type + '_playlist' ] ? allowedExtByMediaList[ type + '_playlist' ] : allowedExtByMediaList.album;\n\n\tconst uploadMedia = ( files ) => {\n\t\tlet media;\n\n\t\tif ( files.currentTarget && files.currentTarget.files ) {\n\t\t\tmedia = [ ...files.currentTarget.files ];\n\t\t} else {\n\t\t\tmedia = files;\n\t\t}\n\n\t\t// Using only one medium.\n\t\tconst medium = media[0];\n\t\tonUploadedMedium( medium );\n\t}\n\n\treturn (\n\t\t<Placeholder\n\t\t\ticon={ !! icon ? icon : 'admin-media' }\n\t\t\tlabel={ !! label ? label : __( 'Community Media', 'bp-attachments' ) }\n\t\t>\n\t\t\t<DropZone\n\t\t\t\tonFilesDrop={ ( files ) => uploadMedia( files ) }\n\t\t\t\tclassName=\"uploader-inline\"\n\t\t\t/>\n\t\t\t<FormFileUpload\n\t\t\t\tonChange={ ( files ) => uploadMedia( files ) }\n\t\t\t\tmultiple={ false }\n\t\t\t\taccept={ allowedTypes }\n\t\t\t\tclassName=\"components-button block-editor-media-placeholder__button block-editor-media-placeholder__upload-button is-primary\"\n\t\t\t>\n\t\t\t\t{ __( 'Select a file', 'bp-attachments' ) }\n\t\t\t</FormFileUpload>\n\t\t</Placeholder>\n\t);\n};\n\nexport default AttachmentPlaceholder;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tapiFetch,\n\tblockEditor: {\n\t\tuseBlockProps,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport AttachmentPlaceholder from '../../common/components/attachment-placeholder';\n\nconst editImage = ( { attributes, setAttributes } ) => {\n\tconst blockProps = useBlockProps();\n\tconst currentUser = useSelect( ( select ) => {\n\t\treturn select( 'core' ).getCurrentUser();\n\t}, [] );\n\n\tconst onUploadedImage = ( file ) => {\n\t\tconst formData = new FormData();\n\t\tformData.append( 'file', file );\n\t\tformData.append( 'action', 'bp_attachments_media_upload' );\n\t\tformData.append( 'object', 'members' );\n\t\tformData.append( 'object_item', currentUser.id );\n\t\tformData.append( 'status', 'public' );\n\n\t\tapiFetch( {\n\t\t\tpath: 'buddypress/v1/attachments',\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData,\n\t\t} ).then( ( response ) => {\n\t\t\tconsole.log( response );\n\t\t} ).catch( ( error ) => {\n\t\t\tconsole.log( error );\n\t\t} ).finally( () => {\n\t\t\tconsole.log( 'The end' );\n\t\t} );\n\t}\n\n\treturn (\n\t\t<AttachmentPlaceholder\n\t\t\ttype=\"image\"\n\t\t\ticon=\"format-image\"\n\t\t\tlabel={ __( 'Community Image', 'bp-attachments' ) }\n\t\t\tonUploadedMedium={ onUploadedImage }\n\t\t/>\n\t);\n};\n\nexport default editImage;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tblocks: {\n\t\tregisterBlockType,\n\t},\n\tblockEditor: {\n\t\tuseBlockProps,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport metadata from '../block.json';\nimport editImage from './edit';\n\nregisterBlockType( metadata, {\n\ttitle: __( 'Community Image', 'bp-attachments' ),\n\tdescription: __( 'Insert an image into your personal media library and use it for this content.', 'bp-attachments' ),\n\ticon: {\n\t\tbackground: '#fff',\n\t\tforeground: '#d84800',\n\t\tsrc: 'format-image',\n\t},\n\tcategory: 'media',\n\tkeywords: [\n\t\t'BuddyPress',\n\t\t__( 'community', 'bp-attachments' ),\n\t\t__( 'image', 'bp-attachments' ),\n\t\t__( 'img', 'bp-attachments' ),\n\t\t__( 'picture', 'bp-attachments' ),\n\t\t__( 'photo', 'bp-attachments' ),\n\t\t__( 'media', 'bp-attachments' ),\n\t],\n\tattributes: {\n\t\tlink: {\n\t\t\ttype: 'string',\n\t\t}\n\t},\n\tsupports: {\n\t\t'align': false,\n\t\t'alignWide': false,\n\t\t'anchor': false,\n\t\t'className': false,\n\t\t'html': false,\n\t},\n\tedit: editImage,\n} );\n"],"names":["module","JSON","parse","components","DropZone","FormFileUpload","Placeholder","data","useDispatch","useSelect","element","createElement","i18n","__","wp","$caf7cfe3bd8cad6b$export$2e2bcd8739ae039","_ref","type","icon","label","onUploadedMedium","bpAttachments","allowedExtByMediaList","select","getEditorSettings","allowedTypes","album","uploadMedia","files","media","currentTarget","medium","$caf7cfe3bd8cad6b$var$createElement","$caf7cfe3bd8cad6b$var$Placeholder","$caf7cfe3bd8cad6b$var$DropZone","onFilesDrop","className","$caf7cfe3bd8cad6b$var$FormFileUpload","onChange","multiple","accept","apiFetch","blockEditor","useBlockProps","$d70e294af7f90b98$export$2e2bcd8739ae039","attributes","setAttributes","currentUser","getCurrentUser","$d70e294af7f90b98$var$createElement","file","formData","FormData","append","id","path","method","body","then","response","console","log","catch","error","finally","blocks","registerBlockType","metadata","title","description","background","foreground","src","category","keywords","link","supports","align","alignWide","anchor","html","edit","editImage"],"version":3,"file":"index.js.map"}