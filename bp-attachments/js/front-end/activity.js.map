{"mappings":"YAGA,MAAMA,SAAEA,GAAaC,OCArB,MACCC,MAAMC,GACLA,IAEEC,IAKEC,OAAEA,GAAWJ,O,IAmCnBK,EAtB6BC,IAC5B,MAAMC,EAAQ,CACbL,EAAI,QAAS,kBACbA,EAAI,KAAM,kBACVA,EAAI,KAAM,kBACVA,EAAI,KAAM,kBACVA,EAAI,KAAM,mBAGX,GAAe,IAAVI,EACJ,MAAO,KAAOC,EAAM,GAGrB,MAAMC,EAAIC,SAAUC,KAAKC,MAAOD,KAAKE,IAAKN,GAAUI,KAAKE,IAAK,OAAU,IAExE,OAAW,IAANJ,EACI,GAAEF,KAASC,EAAMC,KAGlB,IAAKF,EAAU,MAAQE,GAAMK,QAAS,MAASN,EAAOC,IAA9D,ECzCD,MAAMM,SACLC,GACGZ,GAuJJa,OAAOC,GAAKD,OAAOC,IAAM,GACzBD,OAAOC,GAAGC,YAAcF,OAAOC,GAAGC,aAAe,GAEjD,MAAMC,EAAWH,OAAOI,+BAAiC,GACzDJ,OAAOC,GAAGC,YAAYG,SAAW,IAnJjC,MAkCEC,kBAAmBC,GF1CrB,IAAsBC,EE4CpB,OF5CoBA,EE2CU,mBFnCxBzB,EAAU0B,SAASC,cAAe,SAAWF,GAAOG,UAP3C,CACfC,SAAQ,kBACRC,YAAW,0BACXC,OAAM,2BACNC,SAAa,UEuCIR,E,CAUlBS,eACC,IAAIC,EAEJ,GAAQR,SAASC,cAAe,mCAC/BO,EAAYR,SAASC,cAAe,uCAC9B,CACNO,EAAYR,SAASS,cAAe,SACpCD,EAAUE,KAAO,OACjBF,EAAUG,GAAK,iCACfH,EAAUI,KAAO,kCACjBJ,EAAUK,MAAQ,iBAClBL,EAAUM,OAASC,KAAKC,aAGxBD,KAAKE,UAAUC,OAAQV,GAGvB,MAAMW,EAAqBnB,SAASS,cAAe,OACnDU,EAAmBR,GAAK,yCAGxBI,KAAKE,UAAUC,OAAQC,E,CAGxB,OAAOX,C,CAWRY,OAAQC,EAAeb,GACtB,MACCc,OACCC,YAAYC,QACXA,KAGCH,EAEJb,EAAUiB,iBAAkB,UAAYC,IACvC,MAAMC,EAASD,EAAME,OAAOC,MAAM,GAElC,GAAQF,EAAS,CAChB,MAAMG,EAAW,IAAIC,SACrBD,EAASZ,OAAQ,OAAQS,GACzBG,EAASZ,OAAQ,SAAU,+BAC3BY,EAASZ,OAAQ,SAAU,WAC3BY,EAASZ,OAAQ,cAAeM,GAChCM,EAASZ,OAAQ,aAAc,UAC/BY,EAASZ,OAAQ,cAAeS,EAAOK,MAEvCC,MAAOlB,KAAKmB,SAAU,CACrBC,OAAQ,OACRC,KAAMN,EACNO,QAAS,CACR,aAAetB,KAAKuB,SAElBC,MACDC,GAAcA,EAASC,SACxBF,MACCG,IACIA,EAAKV,OACTU,EAAKV,KAAOpD,EAAa8D,EAAKV,OAI/BhC,SAASC,cAAe,2CAA4CC,UAAYa,KAAKlB,kBAAmB6C,EAAM,IAE9GC,OAASC,IACVC,QAAQ1D,IAAKyD,EAAO,G,KAKvBpC,EAAUsC,O,CAQVC,QACA,MAAMvC,EAAYO,KAAKR,eAEvBQ,KAAKiC,gBAAgBC,GACpB,yBACE5B,GAAmBN,KAAKK,OAAQC,EAAeb,I,CApInD0C,aAAaC,KAAEA,EAAIC,KAAEA,EAAId,MAAEA,EAAKe,gBAAEA,IACjC,MACC7D,IACC8D,SACC1D,UACC2D,UAAUC,QACTA,OAKDjE,OAEJwB,KAAKiC,gBAAkBQ,EACvBzC,KAAKE,UAAYjB,SAASC,cAAe,uBACzCc,KAAKmB,SAAWkB,EAAOD,EACvBpC,KAAKuB,MAAQA,EACbvB,KAAKC,aAAeqC,C,GA4HsC3D,GAE5DJ,GAAU,IAAMC,OAAOC,GAAGC,YAAYG,SAASmD,S","sources":["src/media-library/utils/set-template.js","src/media-library/utils/functions.js","src/front-end/activity.js"],"sourcesContent":["/**\n * External dependencies\n */\nconst { template } = lodash;\n\nfunction setTemplate( tmpl ) {\n\tconst options = {\n\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\tvariable:    'data'\n\t};\n\n\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n}\n\nexport default setTemplate;\n","/**\n * WordPress dependencies\n */\nconst {\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * External dependencies\n */\nconst { filter } = lodash;\n\nexport const getDirectoryAncestors = ( tree, parentId ) => {\n\tlet parents = filter( tree, { id: parentId } );\n\n\tparents.forEach( ( parent ) => {\n\t\tconst grandParents = getDirectoryAncestors( tree, parent.parent );\n\t\tparents = [ ...parents, ...grandParents ];\n\t} );\n\n\treturn parents;\n}\n\nexport const bytesToSize = ( bytes ) => {\n\tconst sizes = [\n\t\t__( 'Bytes', 'bp-attachments' ),\n\t\t__( 'KB', 'bp-attachments' ),\n\t\t__( 'MB', 'bp-attachments' ),\n\t\t__( 'GB', 'bp-attachments' ),\n\t\t__( 'TB', 'bp-attachments' ),\n\t];\n\n\tif ( bytes === 0 ) {\n\t\treturn '0 ' + sizes[0];\n\t}\n\n\tconst i = parseInt( Math.floor( Math.log( bytes ) / Math.log( 1024 ) ), 10 );\n\n\tif ( i === 0 ) {\n\t\treturn `${bytes} ${sizes[i]}`;\n\t}\n\n\treturn `${ ( bytes / ( 1024 ** i ) ).toFixed( 1 ) } ${ sizes[ i ] }`;\n}\n\nexport default bytesToSize;\n","/**\n * WordPress dependencies\n */\nconst {\n\tdomReady,\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport setTemplate from '../media-library/utils/set-template';\nimport bytesToSize from '../media-library/utils/functions';\n\nclass bpAttachmentsActivity {\n\t/**\n\t * Setup the Activity Buttons.\n\t *\n\t * @since 1.0.0\n\t */\n\tconstructor( { path, root, nonce, allowedExtTypes } ) {\n\t\tconst {\n\t\t\tbp: {\n\t\t\t\tNouveau: {\n\t\t\t\t\tActivity: {\n\t\t\t\t\t\tpostForm: {\n\t\t\t\t\t\t\tbuttons,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} = window;\n\n\t\tthis.ActivityButtons = buttons;\n\t\tthis.container = document.querySelector( '#whats-new-textarea' );\n\t\tthis.endpoint = root + path;\n\t\tthis.nonce = nonce;\n\t\tthis.allowedTypes = allowedExtTypes;\n\t}\n\n\t/**\n\t * Renders the Medium preview.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param {Object} props The medium properties.\n\t * @returns {string} HTML output.\n\t */\n\t renderItemPreview( props ) {\n\t\tconst Template = setTemplate( 'bp-media-preview' );\n\t\treturn Template( props );\n\t}\n\n\t/**\n\t * Returns the file Input to use to upload attachments media.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @returns {HTMLInputElement} The file Input element.\n\t */\n\tgetFileInput() {\n\t\tlet fileInput;\n\n\t\tif ( !! document.querySelector( '#bp-attachments-activity-medium' ) ) {\n\t\t\tfileInput = document.querySelector( '#bp-attachments-activity-medium' );\n\t\t} else {\n\t\t\tfileInput = document.createElement( 'input' );\n\t\t\tfileInput.type = 'file';\n\t\t\tfileInput.id = 'bp-attachments-activity-medium';\n\t\t\tfileInput.name = '_bp_attachments_activity_medium';\n\t\t\tfileInput.style = 'display: none;';\n\t\t\tfileInput.accept = this.allowedTypes;\n\n\t\t\t// Add the File input to the DOM.\n\t\t\tthis.container.append( fileInput );\n\n\t\t\t// Add the preview placeholder.\n\t\t\tconst previewPlaceholder = document.createElement( 'div' );\n\t\t\tpreviewPlaceholder.id = 'bp-attachments-activity-medium-preview';\n\n\t\t\t// Add the placeholder to the DOM.\n\t\t\tthis.container.append( previewPlaceholder );\n\t\t}\n\n\t\treturn fileInput;\n\t}\n\n\t/**\n\t * Open the file browser and process the upload.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param {Object} backboneEvent\n\t * @param {HTMLInputElement} fileInput\n\t */\n\tupload( backboneEvent, fileInput ) {\n\t\tconst {\n\t\t\tmodel: {\n\t\t\t\tattributes: {\n\t\t\t\t\tuser_id,\n\t\t\t\t}\n\t\t\t}\n\t\t} = backboneEvent;\n\n\t\tfileInput.addEventListener( 'change', ( event ) => {\n\t\t\tconst medium = event.target.files[0];\n\n\t\t\tif ( !! medium ) {\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append( 'file', medium );\n\t\t\t\tformData.append( 'action', 'bp_attachments_media_upload' );\n\t\t\t\tformData.append( 'object', 'members' );\n\t\t\t\tformData.append( 'object_item', user_id );\n\t\t\t\tformData.append( 'visibility', 'public' );\n\t\t\t\tformData.append( 'total_bytes', medium.size );\n\n\t\t\t\tfetch( this.endpoint, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: formData,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'X-WP-Nonce' : this.nonce,\n\t\t\t\t\t}\n\t\t\t\t} ).then(\n\t\t\t\t\t( response ) => response.json()\n\t\t\t\t).then(\n\t\t\t\t\t( data ) => {\n\t\t\t\t\t\tif ( data.size ) {\n\t\t\t\t\t\t\tdata.size = bytesToSize( data.size );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Render the media preview.\n\t\t\t\t\t\tdocument.querySelector( '#bp-attachments-activity-medium-preview' ).innerHTML = this.renderItemPreview( data );\n\t\t\t\t\t}\n\t\t\t\t).catch( ( error ) => {\n\t\t\t\t\tconsole.log( error );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\tfileInput.click();\n\t}\n\n\t/**\n\t * Init the Activity Attachments Button.\n\t *\n\t * @since 1.0.0\n\t */\n\t start() {\n\t\tconst fileInput = this.getFileInput();\n\n\t\tthis.ActivityButtons.on(\n\t\t\t'display:bpAttachments',\n\t\t\t( backboneEvent ) => this.upload( backboneEvent, fileInput )\n\t\t);\n\t }\n}\n\nwindow.bp = window.bp || {};\nwindow.bp.Attachments = window.bp.Attachments || {};\n\nconst settings = window.bpAttachmentsActivitySettings || {};\nwindow.bp.Attachments.Activity = new bpAttachmentsActivity( settings );\n\ndomReady( () => window.bp.Attachments.Activity.start() );\n"],"names":["template","lodash","i18n","__","wp","filter","$be1cf92520ac449f$export$2e2bcd8739ae039","bytes","sizes","i","parseInt","Math","floor","log","toFixed","domReady","$9d5136835f9d0051$var$domReady","window","bp","Attachments","$9d5136835f9d0051$var$settings","bpAttachmentsActivitySettings","Activity","renderItemPreview","props","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","getFileInput","fileInput","createElement","type","id","name","style","accept","this","allowedTypes","container","append","previewPlaceholder","upload","backboneEvent","model","attributes","user_id","addEventListener","event","medium","target","files","formData","FormData","size","fetch","endpoint","method","body","headers","nonce","then","response","json","data","catch","error","console","click","start","ActivityButtons","on","constructor","path","root","allowedExtTypes","Nouveau","postForm","buttons"],"version":3,"file":"activity.js.map"}