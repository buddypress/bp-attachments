{"mappings":"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","sources":["src/media-library/utils/set-template.js","src/media-library/utils/cropper.js","src/front-end/directory.js"],"sourcesContent":["/**\n * External dependencies\n */\nconst { template } = lodash;\n\nfunction setTemplate( tmpl ) {\n\tconst options = {\n\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\tvariable:    'data'\n\t};\n\n\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n}\n\nexport default setTemplate;\n","/**\n * Crops an Image for the Community Media directory.\n *\n * Credits: https://pqina.nl/blog/cropping-images-to-an-aspect-ratio-with-javascript/\n *\n * @since 1.0.0\n *\n * @param {string} url The source image URL.\n * @param {number} aspectRatio The aspect ratio to apply.\n * @param {number} maxWidth The maximum width to check.\n * @param {number} aspectRatio The maximum height to check.\n * @return {Promise<HTMLCanvasElement>} A Promise that resolves with the resulting image as a canvas element.\n */\nfunction crop( url, aspectRatio, maxWidth, maxHeight ) {\n\treturn new Promise(\n\t\t( resolve ) => {\n\t\t\tconst inputImage = new Image();\n\n\t\t\tinputImage.onload = () => {\n\t\t\t\tconst inputWidth = inputImage.naturalWidth;\n\t\t\t\tconst inputHeight = inputImage.naturalHeight;\n\t\t\t\tconst inputImageAspectRatio = inputWidth / inputHeight;\n\n\t\t\t\tif ( inputImage.naturalHeight <= maxHeight || inputImage.naturalWidth <= maxWidth ) {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsrc: inputImage.src,\n\t\t\t\t\t\t\tclassName: inputImage.naturalHeight <= maxHeight ? 'bp-full-width' : 'bp-full-height',\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tlet outputWidth = inputWidth;\n\t\t\t\t\tlet outputHeight = inputHeight;\n\n\t\t\t\t\tif ( inputImageAspectRatio > aspectRatio ) {\n\t\t\t\t\t\toutputWidth = inputHeight * aspectRatio;\n\t\t\t\t\t} else if ( inputImageAspectRatio < aspectRatio ) {\n\t\t\t\t\t\toutputHeight = inputWidth / aspectRatio;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst outputX = ( outputWidth - inputWidth ) * 0.5;\n\t\t\t\t\tconst outputY = ( outputHeight - inputHeight ) * 0.5;\n\t\t\t\t\tconst outputImage = document.createElement( 'canvas' );\n\n\t\t\t\t\toutputImage.width = outputWidth;\n\t\t\t\t\toutputImage.height = outputHeight;\n\n\t\t\t\t\tconst ctx = outputImage.getContext( '2d' );\n\t\t\t\t\tctx.drawImage(inputImage, outputX, outputY);\n\n\t\t\t\t\tresolve(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsrc: outputImage.toDataURL( 'image/png' ),\n\t\t\t\t\t\t\tclassName: 'bp-cropped-image',\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tinputImage.src = url;\n\t\t}\n\t);\n}\n\nexport default crop;\n","/**\n * WordPress dependencies\n */\nconst {\n\tdomReady,\n\turl: {\n\t\taddQueryArgs,\n\t\tgetPath,\n\t\tgetQueryArgs,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport setTemplate from '../media-library/utils/set-template';\nimport crop from '../media-library/utils/cropper';\n\nclass bpAttachmentsDirectory {\n\t/**\n\t * Setup the Directory.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param {Object} directorySettings The Attachments directory settings.\n\t * @param {string} directorySettings.path The BP REST API path.\n\t * @param {string} directorySettings.root The REST API root path.\n\t * @param {string} directorySettings.nonce The REST API nonce value.\n\t * @param {string} directorySettings.placeholder The URL of the WordPress default mime type image.\n\t * @param {Object} directorySettings.items The result of the preloaeded BP PREST API request.\n\t */\n\tconstructor( { path, root, nonce, placeholder, items } ) {\n\t\tconst { body } = items;\n\t\tthis.items = body;\n\t\tthis.queryArgs = { ...getQueryArgs( path ), page: 1, per_page: 20 };\n\t\tthis.endpoint = getPath( root.replace( '/wp-json', '' ) + path );\n\t\tthis.root = root;\n\t\tthis.nonce = nonce;\n\t\tthis.scope = 'any';\n\t\tthis.isFetching = false;\n\t\tthis.totalItems = 0;\n\t\tthis.totalPages = 0;\n\t\tthis.template = 'bp-media-item';\n\t\tthis.filePlaceholder = placeholder;\n\t\tthis.container = document.querySelector( '#bp-media-directory' );\n\n\t\tif ( 'headers' in items ) {\n\t\t\tObject.keys( items.headers ).forEach( ( header ) => {\n\t\t\t\tif ( 'X-WP-Total' === header ) {\n\t\t\t\t\tthis.totalItems = parseInt( items.headers[ header ], 10 );\n\t\t\t\t} else if ( 'X-WP-TotalPages' === header ) {\n\t\t\t\t\tthis.totalPages = parseInt( items.headers[ header ], 10 );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Renders the HTML of a medium.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param {Object} props The medium properties.\n\t * @param {string} template The template to use.\n\t * @returns {string} HTML output.\n\t */\n\trenderItem( props, template ) {\n\t\tif ( props._embedded && props._embedded.owner ) {\n\t\t\tprops.owner = props._embedded.owner.at( 0 );\n\t\t}\n\n\t\tif ( ! template ) {\n\t\t\ttemplate = this.template;\n\t\t}\n\n\t\tconst Template = setTemplate( template );\n\t\treturn Template( props );\n\t}\n\n\t/**\n\t * Renders Media.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param {Array} items The list of Attachment objects to render.\n\t */\n\trenderItems( items ) {\n\t\tif ( ! items.length && 'any' !== this.queryArgs.type ) {\n\t\t\tthis.container.innerHTML = this.renderItem( {}, 'bp-media-empty-results' );\n\t\t} else {\n\t\t\titems.forEach( ( item ) => {\n\t\t\t\tthis.container.innerHTML += this.renderItem( item );\n\t\t\t} );\n\n\t\t\tdocument.querySelectorAll( '.bp-media-item' ).forEach( ( renderedItem ) => {\n\t\t\t\t// Only show existing media.\n\t\t\t\tif ( !! renderedItem.innerHTML.trim() ) {\n\t\t\t\t\tconst maxWidth = renderedItem.clientWidth;\n\t\t\t\t\tconst maxHeight = maxWidth;\n\n\t\t\t\t\tconst bpImage = renderedItem.querySelector( '.wp-block-bp-image-attachment img' );\n\n\t\t\t\t\tif ( bpImage && bpImage.src ) {\n\t\t\t\t\t\tcrop( bpImage.src, 1, maxWidth, maxHeight ).then(\n\t\t\t\t\t\t\t( cropped ) => {\n\t\t\t\t\t\t\t\tbpImage.src = cropped.src;\n\t\t\t\t\t\t\t\tbpImage.classList.add( cropped.className );\n\n\t\t\t\t\t\t\t\tif ( 'bp-full-height' === cropped.className ) {\n\t\t\t\t\t\t\t\t\tbpImage.style.maxHeight = maxHeight + 'px';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\trenderedItem.style.height = maxWidth + 'px';\n\t\t\t\t} else {\n\t\t\t\t\trenderedItem.style.display = 'none';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.loadMore();\n\t\t}\n\t}\n\n\t/**\n\t * Renders a skeleton loader when changing scope and filters.\n\t *\n\t * @since 1.0.0\n\t */\n\tdoSkeletonLoading() {\n\t\tconst skeleton = {\n\t\t\tid: 0,\n\t\t\tplaceholder: this.filePlaceholder,\n\t\t};\n\t\tconst template = 'bp-media-skeleton';\n\t\tlet numSkeletons = parseInt( this.queryArgs.per_page, 10 );\n\t\tconst perPage = numSkeletons;\n\t\tconst currentPage = parseInt( this.queryArgs.page, 10 );\n\n\t\t// Reset the container, it it's the first page.\n\t\tif ( 1 === this.queryArgs.page ) {\n\t\t\tthis.container.innerHTML = '';\n\t\t} else {\n\t\t\tconst maxNumDisplayed = currentPage * perPage;\n\t\t\tif ( maxNumDisplayed > this.totalItems ) {\n\t\t\t\tnumSkeletons = this.totalItems - this.items.length;\n\t\t\t}\n\t\t}\n\n\t\tfor ( let i = 0; i < numSkeletons; i++ ) {\n\t\t\tthis.container.innerHTML += this.renderItem( skeleton, template );\n\t\t}\n\t}\n\n\tloadMore() {\n\t\t// Observe the last entry to perform an infinite scroll.\n\t\tlet observedElement = document.querySelector( '.bp-attachments-media-list > div:not(.bp-skeleton):last-child' );\n\t\tlet observer = new IntersectionObserver(\n\t\t\t( entries ) => {\n\t\t\t\tentries.forEach( ( entry ) => {\n\t\t\t\t\tif ( entry.isIntersecting && ! this.isFetching && parseInt( this.queryArgs.page, 10 ) < this.totalPages ) {\n\t\t\t\t\t\tthis.queryArgs.page += 1;\n\n\t\t\t\t\t\t// Load next page.\n\t\t\t\t\t\tthis.query();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}, {\n\t\t\t\troot: null,\n\t\t\t\trootMargin: '0px',\n\t\t\t\tthreshold: 1.0,\n\t\t\t}\n\t\t);\n\n\t\tobserver.observe( observedElement );\n\t}\n\n\t/**\n\t * Fetch community media according to query arguments.\n\t *\n\t * @since 1.0.0\n\t */\n\tquery() {\n\t\tthis.doSkeletonLoading();\n\n\t\t// Prevent multiple fetching.\n\t\tthis.isFetching = true;\n\t\tconst currentPage = parseInt( this.queryArgs.page, 10 );\n\t\tconst queryArgs = { ...this.queryArgs };\n\n\t\tif ( 1 === queryArgs.page ) {\n\t\t\tdelete queryArgs.page;\n\t\t}\n\n\t\tsetTimeout( () => {\n\t\t\tfetch( addQueryArgs( this.root + this.endpoint, queryArgs ), {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'X-WP-Nonce' : this.nonce,\n\t\t\t\t}\n\t\t\t} ).then(\n\t\t\t\t( response ) => {\n\t\t\t\t\tif ( 200 !== response.status ) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.totalItems = parseInt( response.headers.get( 'X-WP-Total' ), 10 );\n\t\t\t\t\tthis.totalPages = parseInt( response.headers.get( 'X-WP-TotalPages' ), 10 );\n\n\t\t\t\t\t// Release the JSON data.\n\t\t\t\t\treturn response.json();\n\t\t\t\t}\n\t\t\t).then(\n\t\t\t\t( data ) => {\n\t\t\t\t\tif ( 1 === currentPage ) {\n\t\t\t\t\t\tthis.items = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.items = [ ...this.items, data ];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.renderItems( data );\n\n\t\t\t\t\t// Make fetching available again.\n\t\t\t\t\tthis.isFetching = false;\n\t\t\t\t}\n\t\t\t).catch(\n\t\t\t\t() => {\n\t\t\t\t\t// Update query results.\n\t\t\t\t\tthis.items = [];\n\t\t\t\t\tthis.totalItems = 0;\n\t\t\t\t\tthis.totalPages = 1;\n\t\t\t\t}\n\t\t\t).finally(\n\t\t\t\t() => {\n\t\t\t\t\tthis.container.querySelectorAll( '.bp-media-item.skeleton' ).forEach( ( skull ) => skull.remove() );\n\t\t\t\t}\n\t\t\t);\n\t\t}, 500 );\n\t}\n\n\t/**\n\t * Add listeners to catch interface changes made by the user.\n\t *\n\t * @since 1.0.0\n\t */\n\tsetupListeners() {\n\t\tdocument.addEventListener( 'click', ( e ) => {\n\t\t\tconst mainNavItem = e.target.closest( 'li[data-bp-scope]' );\n\n\t\t\tif ( null !== mainNavItem && this.scope !== mainNavItem.dataset.bpScope ) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tthis.scope = mainNavItem.dataset.bpScope;\n\t\t\t\tthis.queryArgs.type = mainNavItem.dataset.bpScope;\n\n\t\t\t\tmainNavItem.closest( '.component-navigation' ).childNodes.forEach( ( child ) => {\n\t\t\t\t\tif ( !! child.classList ) {\n\t\t\t\t\t\tif ( mainNavItem.dataset.bpScope === child.dataset.bpScope ) {\n\t\t\t\t\t\t\tchild.classList.add( 'selected' )\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchild.classList.remove( 'selected' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// Reset the page argument before querying.\n\t\t\t\tthis.queryArgs.page = 1;\n\t\t\t\tthis.query();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Init the Directory.\n\t *\n\t * @since 1.0.0\n\t */\n\t start() {\n\t\tthis.setupListeners();\n\n\t\tif ( ! this.items || ! this.items.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.container.querySelector( '#bp-attachments-no-media' ).remove();\n\t\tthis.renderItems( this.items );\n\t }\n}\n\nwindow.bp = window.bp || {};\nwindow.bp.Attachments = window.bp.Attachments || {};\n\nconst directorySettings = window.bpAttachmentsDirectorySettings || {};\nwindow.bp.Attachments.Directory = new bpAttachmentsDirectory( directorySettings );\n\ndomReady( () => window.bp.Attachments.Directory.start() );\n"],"names":["template","lodash","$055bab529a78720e$export$2e2bcd8739ae039","url","aspectRatio","maxWidth","maxHeight","Promise","resolve","inputImage","Image","onload","inputWidth","naturalWidth","inputHeight","naturalHeight","inputImageAspectRatio","src","className","outputWidth","outputHeight","outputX","outputY","outputImage","document","createElement","width","height","getContext","drawImage","toDataURL","domReady","$89823c8e39abf570$var$domReady","addQueryArgs","$89823c8e39abf570$var$addQueryArgs","getPath","$89823c8e39abf570$var$getPath","getQueryArgs","$89823c8e39abf570$var$getQueryArgs","wp","window","bp","Attachments","$89823c8e39abf570$var$directorySettings","bpAttachmentsDirectorySettings","Directory","renderItem","props","_embedded","owner","at","this","tmpl","querySelector","innerHTML","evaluate","interpolate","escape","variable","renderItems","items","length","queryArgs","type","forEach","item","container","querySelectorAll","renderedItem","trim","clientWidth","bpImage","then","cropped","classList","add","style","display","loadMore","doSkeletonLoading","skeleton","id","placeholder","filePlaceholder","numSkeletons","parseInt","per_page","perPage","currentPage","page","totalItems","i","observedElement","IntersectionObserver","entries","entry","isIntersecting","isFetching","totalPages","query","root","rootMargin","threshold","observe","setTimeout","fetch","endpoint","method","headers","nonce","response","status","get","json","data","catch","finally","skull","remove","setupListeners","addEventListener","e","mainNavItem","target","closest","scope","dataset","bpScope","preventDefault","childNodes","child","start","constructor","path","body","replace","Object","keys","header"],"version":3,"file":"directory.js.map"}