{"mappings":"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","sources":["src/media-library/store/constants.js","src/media-library/utils/functions.js","src/media-library/store/selectors.js","src/media-library/store/action-types.js","src/media-library/store/actions.js","src/media-library/store/resolvers.js","src/media-library/store/reducers.js","src/media-library/store/controls.js","src/media-library/store/index.js","src/media-library/elements/header.js","src/media-library/elements/uploader.js","src/media-library/elements/directory-creator.js","src/media-library/elements/toolbar.js","src/media-library/utils/set-template.js","src/media-library/elements/edit-item.js","src/media-library/elements/item.js","src/media-library/elements/notices.js","src/media-library/elements/main.js","src/media-library/index.js"],"sourcesContent":["/**\n * Identifier key for this store reducer.\n *\n * @type {string}\n */\n export const STORE_KEY = 'bp/attachments';\n","/**\n * WordPress dependencies\n */\nconst {\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * External dependencies\n */\nconst { filter } = lodash;\n\nexport const getDirectoryAncestors = ( tree, parentId ) => {\n\tlet parents = filter( tree, { id: parentId } );\n\n\tparents.forEach( ( parent ) => {\n\t\tconst grandParents = getDirectoryAncestors( tree, parent.parent );\n\t\tparents = [ ...parents, ...grandParents ];\n\t} );\n\n\treturn parents;\n}\n\nexport const bytesToSize = ( bytes ) => {\n\tconst sizes = [\n\t\t__( 'Bytes', 'bp-attachments' ),\n\t\t__( 'KB', 'bp-attachments' ),\n\t\t__( 'MB', 'bp-attachments' ),\n\t\t__( 'GB', 'bp-attachments' ),\n\t\t__( 'TB', 'bp-attachments' ),\n\t];\n\n\tif ( bytes === 0 ) {\n\t\treturn '0 ' + sizes[0];\n\t}\n\n\tconst i = parseInt( Math.floor( Math.log( bytes ) / Math.log( 1024 ) ), 10 );\n\n\tif ( i === 0 ) {\n\t\treturn `${bytes} ${sizes[i]}`;\n\t}\n\n\treturn `${ ( bytes / ( 1024 ** i ) ).toFixed( 1 ) } ${ sizes[ i ] }`;\n}\n","/**\n * External dependencies.\n */\nconst {\n\ttrim,\n\tgroupBy,\n\tfilter,\n\tindexOf,\n\tfind,\n\tdefaultTo,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Returns the Community Media Library settings.\n *\n * @param {Object} state\n * @returns {Object} The Community Media Library settings.\n */\nexport const getSettings = ( state ) => {\n\tconst { settings } = state;\n\treturn settings;\n}\n\n/**\n * Returns the requests context.\n *\n * @param {Object} state\n * @returns {string} The requests context (`edit` or `view`).\n */\nexport const getRequestsContext = ( state ) => {\n\tconst {\n\t\tsettings: {\n\t\t\tisAdminScreen,\n\t\t}\n\t} = state;\n\n\treturn true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const isGridDisplayMode = ( state ) => {\n\tconst { isGrid } = state;\n\treturn isGrid;\n}\n\n/**\n * Returns the logged in user Object.\n *\n * @param {Object} state The current state.\n * @return {Object} The logged in user Object.\n */\nexport const getLoggedInUser = ( state ) => {\n\tconst { user } = state;\n\treturn user;\n};\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const getFormState = ( state ) => {\n\tconst { formState } = state;\n\treturn formState;\n}\n\n/**\n * Returns whether an upload is being processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads is being processed. False otherwise.\n */\nexport const isUploading = ( state ) => {\n\tconst { uploading } = state;\n\treturn uploading;\n};\n\n/**\n * Returns whether an upload has been processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads has been processed. False otherwise.\n */\n export const uploadEnded = ( state ) => {\n\tconst { ended } = state;\n\treturn ended;\n};\n\n/**\n * Returns the list of uploaded file Objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of uploaded file Objects.\n */\nexport const getUploads = ( state ) => {\n\tconst { uploads } = state;\n\treturn uploads;\n};\n\n/**\n * Returns the list of errors.\n *\n * @param {Object} state The current state.\n * @return {array} The list of errors.\n */\nexport const getErrors = ( state ) => {\n\tconst { errors } = state;\n\treturn errors;\n};\n\n/**\n * Returns the list community media objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of community media objects.\n */\nexport const getMedia = ( state ) => {\n\tconst { files } = state;\n\treturn files;\n};\n\n/**\n * Returns the current directory.\n *\n * @param {Object} state The current state.\n * @return {string} The current directory.\n */\nexport const getCurrentDirectory = ( state ) => {\n\tconst { currentDirectory } = state;\n\treturn currentDirectory || '';\n};\n\n/**\n * Returns the current directory object.\n *\n * @param {Object} state The current state.\n * @return {Object} The current directory object.\n */\n export const getCurrentDirectoryObject = ( state ) => {\n\tconst { currentDirectory, tree } = state;\n\tconst defaultValue = { readonly: true };\n\n\tif ( '' !== currentDirectory ) {\n\t\treturn defaultTo(\n\t\t\tfind( tree, { id: currentDirectory } ),\n\t\t\tdefaultValue\n\t\t);\n\t}\n\n\treturn defaultValue;\n};\n\n/**\n * Returns the directories Tree.\n *\n * @param {Object} state The current state.\n * @return {array} The directories Tree.\n */\n export const getTree = ( state ) => {\n\tconst { tree, currentDirectory } = state;\n\tconst groupedTree = groupBy( tree, 'parent' );\n\tconst currentChildrenIds = filter( tree, { 'parent': currentDirectory || 0 } ).map( ( child ) => child.id );\n\n\t// Makes sure to only list current directory children.\n\tif ( currentChildrenIds && currentChildrenIds.length ) {\n\t\tcurrentChildrenIds.forEach( ( childId ) => {\n\t\t\tif ( groupedTree[ childId ] ) {\n\t\t\t\tdelete groupedTree[ childId ];\n\t\t\t}\n\t\t} );\n\t}\n\n\t// Makes sure to avoid listing children of directories that are not an ancestor of the currentDirectory one.\n\tif ( currentDirectory ) {\n\t\tconst currentAncestors = getDirectoryAncestors(\n\t\t\ttree,\n\t\t\tcurrentDirectory\n\t\t).map( ( ancestor ) => ancestor.id );\n\n\t\tObject.keys( groupedTree ).forEach( ( treeIndex ) => {\n\t\t\tif ( 0 !== parseInt( treeIndex, 10 ) && -1 === indexOf( currentAncestors, treeIndex ) ) {\n\t\t\t\tdelete groupedTree[ treeIndex ];\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst fillWithChildren = ( items ) => {\n\t\treturn items.map( ( item ) => {\n\t\t\tconst children = groupedTree[ item.id ];\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tchildren: children && children.length ?\n\t\t\t\t\tfillWithChildren( children ) :\n\t\t\t\t\t[],\n\t\t\t};\n\t\t} );\n\t};\n\n\treturn fillWithChildren( groupedTree[0] || [] );\n};\n\n/**\n * Returns the directory flat list.\n *\n * @param {Object} state The current state.\n * @return {array} The directory flat list.\n */\n export const getFlatTree = ( state ) => {\n\tconst { tree } = state;\n\treturn tree || [];\n};\n\n/**\n * Returns whether a media/directory item is selectable.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if a media/directory item is selectable. False otherwise.\n */\nexport const isSelectable = ( state ) => {\n\tconst { isSelectable } = state;\n\treturn isSelectable;\n};\n\n/**\n * Returns the selected media.\n *\n * @param {Object} state The current state.\n * @return {array} The list of selected media.\n */\nexport const selectedMedia = ( state ) => {\n\tconst { files } = state;\n\n\treturn filter( files, [ 'selected', true ] );\n}\n\n/**\n * Returns the current relative path.\n *\n * @param {Object} state The current state.\n * @return {string} The current relative path.\n */\nexport const getRelativePath = ( state ) => {\n\tconst { relativePath } = state;\n\treturn relativePath;\n};\n\n/**\n * Returns the destination data for media.\n *\n * @param {Object} state The current state.\n * @return {Object} The destination data for media.\n */\nexport const getDestinationData = ( state ) => {\n\tconst { relativePath } = state;\n\n\tif ( ! relativePath ) {\n\t\treturn {\n\t\t\tobject: 'members',\n\t\t}\n\t}\n\n\tconst destinationData = trim( relativePath, '/' ).split( '/' );\n\n\treturn {\n\t\tvisibility: destinationData[0] ? destinationData[0] : 'public',\n\t\tobject: destinationData[1] ? destinationData[1] : 'members',\n\t\titem: destinationData[2] ? destinationData[2] : '',\n\t}\n};\n","export const TYPES = {\n\tSET_SETTINGS: 'SET_SETTINGS',\n\tGET_LOGGED_IN_USER: 'GET_LOGGED_IN_USER',\n\tGET_MEDIA: 'GET_MEDIA',\n\tADD_MEDIUM: 'ADD_MEDIUM',\n\tFILL_TREE: 'FILL_TREE',\n\tPURGE_TREE: 'PURGE_TREE',\n\tREMOVE_MEDIUM: 'REMOVE_MEDIUM',\n\tFETCH_FROM_API: 'FETCH_FROM_API',\n\tCREATE_FROM_API: 'CREATE_FROM_API',\n\tUPDATE_FROM_API: 'UPDATE_FROM_API',\n\tDELETE_FROM_API: 'DELETE_FROM_API',\n\tUPLOAD_START: 'UPLOAD_START',\n\tUPLOAD_END: 'UPLOAD_END',\n\tRESET_UPLOADS: 'RESET_UPLOADS',\n\tADD_ERROR: 'ADD_ERROR',\n\tREMOVE_ERROR: 'REMOVE_ERROR',\n\tTOGGLE_SELECTABLE: 'TOGGLE_SELECTABLE',\n\tTOGGLE_MEDIA_SELECTION: 'TOGGLE_MEDIA_SELECTION',\n\tSWITCH_DISPLAY_MODE: 'SWITCH_DISPLAY_MODE',\n\tUPDATE_FORM_STATE: 'UPDATE_FORM_STATE',\n};\n","/**\n * External dependencies.\n */\n const {\n\tuniqueId,\n\thasIn,\n\ttrim,\n\ttrimEnd,\n\tfilter,\n} = lodash;\n\n/**\n * WordPress dependencies.\n */\nconst {\n\tdata: {\n\t\tdispatch,\n\t\tselect,\n\t},\n\turl: {\n\t\taddQueryArgs,\n\t}\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { TYPES as types } from './action-types';\nimport { STORE_KEY } from './constants';\n\n/**\n * Returns an action to set the BP attachments Media Library settings.\n *\n * @param {Object} settings The settings to use.\n * @return {Object} Object for action.\n */\nexport function setSettings( settings ) {\n\treturn {\n\t\ttype: types.SET_SETTINGS,\n\t\tsettings,\n\t};\n}\n\n/**\n * Returns an action object used to fetch media from the API.\n *\n * @param {string} path Endpoint path.\n * @param {boolean} parse Should we parse the request.\n * @return {Object} Object for action.\n */\nexport function fetchFromAPI( path, parse ) {\n\treturn {\n\t\ttype: types.FETCH_FROM_API,\n\t\tpath,\n\t\tparse,\n\t};\n}\n\n/**\n * Returns an action object used to create media via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function createFromAPI( path, data ) {\n\treturn {\n\t\ttype: types.CREATE_FROM_API,\n\t\tpath,\n\t\tdata,\n\t};\n}\n\n/**\n * Returns an action object used to update media via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be updated.\n * @return {Object} Object for action.\n */\n export function updateFromAPI( path, data ) {\n\treturn {\n\t\ttype: types.UPDATE_FROM_API,\n\t\tpath,\n\t\tdata,\n\t};\n}\n\n/**\n * Returns an action object used to delete a media via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function deleteFromAPI( path, relativePath ) {\n\treturn {\n\t\ttype: types.DELETE_FROM_API,\n\t\tpath,\n\t\trelativePath,\n\t};\n}\n\n/**\n * Returns an action object used to switch between Grid & List mode.\n *\n * @param {Boolean} isGrid\n * @returns {Object} Object for action.\n */\nexport function switchDisplayMode( isGrid ) {\n\treturn {\n\t\ttype: types.SWITCH_DISPLAY_MODE,\n\t\tisGrid,\n\t};\n}\n\n/**\n * Returns an action object used to get the logged in user.\n *\n * @param {Object} user Logged In User object.\n * @return {Object} Object for action.\n */\nexport function getLoggedInUser( user ) {\n\treturn {\n\t\ttype: types.GET_LOGGED_IN_USER,\n\t\tuser,\n\t};\n}\n\n/**\n * Returns an action object used to get media.\n *\n * @param {Array} files The list of files.\n * @param {String} relativePath The relative path.\n * @param {Object} currentDirectory The current directory.\n * @return {Object} Object for action.\n */\nexport function getMedia( files, relativePath, currentDirectory ) {\n\treturn {\n\t\ttype: types.GET_MEDIA,\n\t\tfiles,\n\t\trelativePath,\n\t\tcurrentDirectory,\n\t};\n};\n\n/**\n * Returns an action object used to update the Upload/Directory Form state.\n *\n * @param {Object} params\n * @returns {Object} Object for action.\n */\nexport function updateFormState( params ) {\n\treturn {\n\t\ttype: types.UPDATE_FORM_STATE,\n\t\tparams,\n\t};\n}\n\n/**\n * Prepare a directory to be added to the Tree.\n *\n * @param {Object} directory The medium object.\n * @param {string} parent The parent ID.\n * @returns {Object} The item Tree.\n */\nconst setItemTree = ( directory, parent ) => {\n\tconst itemTree = {\n\t\tid: directory.id,\n\t\tslug: directory.name,\n\t\tname: directory.title,\n\t\tparent: parent,\n\t\tobject: directory.object ? directory.object : 'members',\n\t\treadonly: directory.readonly ? directory.readonly : false,\n\t\tvisibility: directory.visibility ? directory.visibility : 'public',\n\t\ttype: directory.media_type ? directory.media_type : 'folder',\n\t}\n\n\treturn itemTree;\n}\n\n/**\n * Init the directories Tree.\n *\n * @param {array} items The list of media.\n */\nexport function initTree( items ) {\n\tconst tree = select( STORE_KEY ).getTree();\n\tconst directories = filter( items, { 'mime_type': 'inode/directory' } );\n\tif ( ! tree.length ) {\n\t\tdirectories.forEach( ( item ) => {\n\t\t\tconst itemTree = setItemTree( item, 0 );\n\t\t\tdispatch( STORE_KEY ).addItemTree( itemTree );\n\t\t} );\n\t}\n}\n\n/**\n * Returns an action object used to add a directory item to the Items tree.\n *\n * @param {Object} item A media item.\n * @return {Object} Object for action.\n */\nexport function addItemTree( item ) {\n\treturn {\n\t\ttype: types.FILL_TREE,\n\t\titem,\n\t};\n};\n\n/**\n * Returns an action object used to remove a directory item from the Items tree.\n *\n * @param {string} itemId A media item ID.\n * @return {Object} Object for action.\n */\n export function removeItemTree( itemId ) {\n\treturn {\n\t\ttype: types.PURGE_TREE,\n\t\titemId,\n\t};\n};\n\n/**\n * Returns an action object used to switch between Selectable & Regular mode.\n *\n * @param {boolean} isSelectable True to switch to Selectable mode. False otherwise.\n * @returns {Object} Object for action.\n */\nexport function toggleSelectable( isSelectable ) {\n\treturn {\n\t\ttype: types.TOGGLE_SELECTABLE,\n\t\tisSelectable,\n\t};\n};\n\n/**\n * Returns an action object used to switch between Selectable & Regular mode.\n *\n * @param {array} ids The list of media ID.\n * @param {boolean} isSelected True if the media is selected. False otherwise.\n * @returns {Object} Object for action.\n */\nexport function toggleMediaSelection( ids, isSelected ) {\n\treturn {\n\t\ttype: types.TOGGLE_MEDIA_SELECTION,\n\t\tids,\n\t\tisSelected,\n\t};\n};\n\n/**\n * Returns an action object used to add a new file to the Media list.\n *\n * @param {object} file The uploaded medium.\n * @returns {Object} Object for action.\n */\nexport function addMedium( file ) {\n\treturn {\n\t\ttype: types.ADD_MEDIUM,\n\t\tfile,\n\t};\n};\n\n/**\n * Returns an action object used to add a new error.\n *\n * @param {object} error The uploaded file which errored.\n * @returns {Object} Object for action.\n */\nexport function addMediumError( error ) {\n\treturn {\n\t\ttype: types.ADD_ERROR,\n\t\terror,\n\t};\n};\n\n/**\n * Creates a Medium uploading a file.\n *\n * @param {Object} file The file object to upload.\n * @returns {Object} Object for action.\n */\nexport function * createMedium( file ) {\n\tlet uploading = true, upload;\n\tconst store = select( STORE_KEY );\n\tconst { object, item, visibility } = store.getDestinationData();\n\tconst relativePath = store.getRelativePath();\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\tformData.append( 'action', 'bp_attachments_media_upload' );\n\tformData.append( 'object', object );\n\tformData.append( 'object_item', item );\n\n\tif ( visibility ) {\n\t\tformData.append( 'visibility', visibility );\n\t}\n\n\tif ( trim( relativePath, '/' ) !== visibility + '/' + object + '/' + item ) {\n\t\tlet uploadRelativePath = relativePath;\n\n\t\t// Private uploads are stored out of the site's uploads dir.\n\t\tif ( 'private' === visibility ) {\n\t\t\tuploadRelativePath = relativePath.replace( '/private', '' );\n\t\t}\n\n\t\tformData.append( 'parent_dir', uploadRelativePath );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tupload = yield createFromAPI( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\n\t\treturn addMedium( upload );\n\t} catch ( error ) {\n\t\tupload = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t\tuploaded: false,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\n\t\treturn addMediumError( upload );\n\t}\n}\n\n/**\n * Creates a new directory, photo album, audio or video playluist.\n *\n * @todo to avoid too much code duplication, createDirectory & createMedium should probably be\n *       gathered into one function.\n *\n * @param {Object} directory The data to use create the directory\n * @returns {Object} Object for action.\n */\nexport function * createDirectory( directory ) {\n\tlet uploading = true, upload;\n\n\t// A directory is handled as a file having the inode/directory mime type.\n\tlet file = {\n\t\tname: directory.directoryName,\n\t\ttype: directory.directoryType,\n\t};\n\n\tconst store = select( STORE_KEY );\n\tconst { object, item, visibility } = store.getDestinationData();\n\tconst relativePath = store.getRelativePath();\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'directory_name', file.name );\n\tformData.append( 'directory_type', file.type );\n\tformData.append( 'action', 'bp_attachments_make_directory' );\n\tformData.append( 'object', object );\n\tformData.append( 'object_item', item );\n\n\tif ( visibility ) {\n\t\tformData.append( 'visibility', visibility );\n\t}\n\n\tif ( trim( relativePath, '/' ) !== visibility + '/' + object + '/' + item ) {\n\t\tlet createDirRelativePath = relativePath;\n\n\t\t// Private uploads are stored out of the site's uploads dir.\n\t\tif ( 'private' === visibility ) {\n\t\t\tcreateDirRelativePath = relativePath.replace( '/private', '' );\n\t\t}\n\n\t\tformData.append( 'parent_dir', createDirRelativePath );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tupload = yield createFromAPI( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\t\tupload.uploaded = true;\n\n\t\tconst currentDir = store.getCurrentDirectoryObject();\n\t\tconst itemTree = setItemTree( upload, currentDir.id );\n\n\t\t// Add the directory to the tree.\n\t\tyield addItemTree( itemTree );\n\n\t\treturn addMedium( upload );\n\t} catch ( error ) {\n\t\tupload = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t\tuploaded: false,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\n\t\treturn addMediumError( upload );\n\t}\n}\n\n/**\n * Updates a Medium.\n *\n * @param {Object} medium The medium object to update.\n * @returns {Object} Object for action.\n */\nexport function * updateMedium( medium ) {\n\tlet update;\n\tconst store = select( STORE_KEY );\n\tconst relativePath = store.getRelativePath();\n\n\ttry {\n\t\tupdate = yield updateFromAPI(\n\t\t\t'/buddypress/v1/attachments/' + medium.id + '/',\n\t\t\t{\n\t\t\t\t'relative_path':  relativePath,\n\t\t\t\ttitle: medium.title,\n\t\t\t\tdescription: medium.description,\n\t\t\t}\n\t\t);\n\n\t\treturn addMedium( update );\n\t} catch ( error ) {\n\t\tupdate = {\n\t\t\tid: uniqueId(),\n\t\t\tname: medium.name,\n\t\t\terror: error.message,\n\t\t\tupdated: false,\n\t\t};\n\n\t\treturn addMediumError( update );\n\t}\n}\n\n/**\n * Parses the request response and edit Media store.\n *\n * @param {Object} response The request response.\n * @param {String} relativePath The relative path of the medium.\n * @param {String} parent The parent directory.\n * @returns {void}\n */\nexport const parseResponseMedia = async ( response, relativePath, parent = '' ) => {\n\tconst items = await response.json().then( ( data ) => {\n\t\tdata.forEach( ( item ) => {\n\t\t\titem.parent = parent;\n\n\t\t\tif ( 'inode/directory' === item.mime_type ) {\n\t\t\t\tconst itemTree = setItemTree( item, parent );\n\t\t\t\tdispatch( STORE_KEY ).addItemTree( itemTree );\n\t\t\t}\n\t\t} );\n\n\t\treturn data;\n\t} );\n\n\t// Init the Tree when needed.\n\tif ( ! relativePath && ! parent ) {\n\t\tinitTree( items );\n\t}\n\n\tdispatch( STORE_KEY ).getMedia( items, relativePath, parent );\n}\n\n/**\n * Requests media according to specific arguments.\n *\n * @param {Object} args The Media request arguments.\n * @returns {void}\n */\nexport function * requestMedia( args = {} ) {\n\tconst path = '/buddypress/v1/attachments';\n\tlet relativePathHeader = '';\n\tlet parent = '';\n\n\tif ( ! args.context ) {\n\t\targs.context = select( STORE_KEY ).getRequestsContext();\n\t}\n\n\tif ( args.directory && args.path ) {\n\t\targs.directory = trimEnd( args.path, '/' ) + '/' + args.directory;\n\t}\n\n\tif ( args.parent ) {\n\t\tparent = args.parent;\n\t\tdelete args.parent;\n\t}\n\n\tdelete args.path;\n\n\tconst response = yield fetchFromAPI( addQueryArgs( path, args ), false );\n\n\tif ( hasIn( response, [ 'headers', 'get' ] ) ) {\n\t\t// If the request is fetched using the fetch api, the header can be\n\t\t// retrieved using the 'get' method.\n\t\trelativePathHeader = response.headers.get( 'X-BP-Attachments-Relative-Path' );\n\t} else {\n\t\t// If the request was preloaded server-side and is returned by the\n\t\t// preloading middleware, the header will be a simple property.\n\t\trelativePathHeader = get( response, [ 'headers', 'X-BP-Attachments-Relative-Path' ], '' );\n\t}\n\n\treturn parseResponseMedia( response, relativePathHeader, parent );\n}\n\n/**\n * Returns an action object used to remove a medium from the state.\n *\n * @param {integer} id The medium ID.\n * @returns {Object} Object for action.\n */\nexport function removeMedium( id ) {\n\treturn {\n\t\ttype: 'REMOVE_MEDIUM',\n\t\tid,\n\t}\n};\n\n/**\n * Deletes a Medium removing the file from the server's filesystem.\n *\n * @param {Object} file The file object to upload.\n * @returns {Object} Object for action.\n */\nexport function * deleteMedium( file ) {\n\tconst store = select( STORE_KEY );\n\tconst relativePath = store.getRelativePath();\n\tlet deleted;\n\n\ttry {\n\t\tdeleted = yield deleteFromAPI( '/buddypress/v1/attachments/' + file.id + '/', relativePath );\n\n\t\tif ( 'inode/directory' === deleted.previous.mime_type ) {\n\t\t\tyield removeItemTree( deleted.previous.id );\n\t\t}\n\n\t\treturn removeMedium( deleted.previous.id );\n\t} catch ( error ) {\n\t\tfile.error = error.message;\n\n\t\treturn addMediumError( file );\n\t}\n}\n\n/**\n * Returns an action object used to remove an error.\n *\n * @param {integer} errorID The error ID.\n * @returns {Object} Object for action.\n */\nexport function removeMediumError( errorID ) {\n\treturn {\n\t\ttype: types.REMOVE_ERROR,\n\t\terrorID,\n\t};\n}\n","/**\n * External dependencies.\n */\nconst {\n\tfilter,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport {\n\tfetchFromAPI,\n\tinitTree,\n\tgetLoggedInUser as getLoggedInUserAction,\n\tgetMedia as getMediaAction,\n} from './actions';\n\n/**\n * Returns the requests context.\n *\n * @access private\n * @returns {string} The requests context (view or edit).\n */\nconst _requestContext = () => {\n\tconst { isAdminScreen } = window.bpAttachmentsMediaLibrarySettings || {};\n\treturn isAdminScreen && true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Resolver for retrieving current user.\n */\nexport function* getLoggedInUser() {\n\tconst path = '/buddypress/v1/members/me?context=edit';\n\tconst user = yield fetchFromAPI( path, true );\n\tyield getLoggedInUserAction( user );\n};\n\n/**\n * Resolver for retrieving the media root directories.\n */\nexport function* getMedia() {\n\tconst path = '/buddypress/v1/attachments?context=' + _requestContext();\n\tconst files = yield fetchFromAPI( path, true );\n\n\t// Init the Directories tree.\n\tinitTree( files );\n\n\tyield getMediaAction( files, '' );\n}\n","/**\n * External dependencies.\n */\n const {\n\treject,\n} = lodash;\n\n/**\n * Internal dependencies\n */\nimport { TYPES as types } from './action-types';\n\n/**\n * Default state.\n */\nconst DEFAULT_STATE = {\n\tuser: {},\n\ttree: [],\n\tcurrentDirectory: '',\n\tfiles: [],\n\trelativePath: '',\n\tuploads: [],\n\terrors: [],\n\tuploading: false,\n\tended: false,\n\tisSelectable: false,\n\tisGrid: true,\n\tsettings: {},\n\tformState: {},\n};\n\n/**\n * Reducer for the BP Attachments Library.\n *\n * @param   {Object}  state   The current state in the store.\n * @param   {Object}  action  Action object.\n *\n * @return  {Object}          New or existing state.\n */\n const reducer = ( state = DEFAULT_STATE, action ) => {\n\tswitch ( action.type ) {\n\t\tcase types.SET_SETTINGS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsettings: action.settings,\n\t\t\t};\n\n\t\tcase types.GET_LOGGED_IN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user,\n\t\t\t};\n\n\t\tcase types.GET_MEDIA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: action.files,\n\t\t\t\trelativePath: action.relativePath,\n\t\t\t\tcurrentDirectory: action.currentDirectory,\n\t\t\t};\n\n\t\tcase types.FILL_TREE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: [\n\t\t\t\t\t...reject( state.tree, [ 'id', action.item.id ] ),\n\t\t\t\t\taction.item,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.PURGE_TREE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: reject( state.tree, [ 'id', action.itemId ] ),\n\t\t\t};\n\n\t\tcase types.UPDATE_FORM_STATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tformState: action.params,\n\t\t\t};\n\n\t\tcase types.ADD_MEDIUM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.file.id ] ),\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.UPLOAD_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploads: [\n\t\t\t\t\t...state.uploads,\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.ADD_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: [\n\t\t\t\t\t...state.errors,\n\t\t\t\t\taction.error,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.REMOVE_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: reject( state.errors, [ 'id', action.errorID ] ),\n\t\t\t};\n\n\t\tcase types.UPLOAD_END:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploads: reject( state.uploads, ( u ) => { return u.name === action.file.name; } ),\n\t\t\t\tended: true,\n\t\t\t};\n\n\t\tcase types.RESET_UPLOADS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: false,\n\t\t\t\tuploads: [],\n\t\t\t\terrors:[],\n\t\t\t\tended: false,\n\t\t\t};\n\n\t\tcase types.TOGGLE_SELECTABLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSelectable: action.isSelectable,\n\t\t\t};\n\n\t\tcase types.TOGGLE_MEDIA_SELECTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: state.files.map( file => {\n\t\t\t\t\tif ( ( 'all' === action.ids[0] && ! action.isSelected ) || ( -1 !== action.ids.indexOf( file.id ) ) ) {\n\t\t\t\t\t\tfile.selected = action.isSelected;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn file;\n\t\t\t\t} ),\n\t\t\t};\n\n\t\tcase types.SWITCH_DISPLAY_MODE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisGrid: action.isGrid,\n\t\t\t};\n\n\t\tcase types.REMOVE_MEDIUM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.id ] )\n\t\t\t\t],\n\t\t\t};\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tapiFetch,\n} = wp;\n\n/**\n * Default export for registering the controls with the store.\n *\n * @return {Object} An object with the controls to register with the store on\n *                  the controls property of the registration object.\n */\nexport const controls = {\n\tFETCH_FROM_API( { path, parse } ) {\n\t\treturn apiFetch( { path, parse } );\n\t},\n\tCREATE_FROM_API( { path, data } ) {\n\t\treturn apiFetch(\n\t\t\t{\n\t\t\t\tpath: path,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: data\n\t\t\t}\n\t\t);\n\t},\n\tUPDATE_FROM_API( { path, data } ) {\n\t\treturn apiFetch(\n\t\t\t{\n\t\t\t\tpath: path,\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tdata: data\n\t\t\t}\n\t\t);\n\t},\n\tDELETE_FROM_API( { path, relativePath } ) {\n\t\treturn apiFetch(\n\t\t\t{\n\t\t\t\tpath: path,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\tdata: {\n\t\t\t\t\trelative_path: relativePath\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n","/**\n * WordPress dependencies.\n */\n const {\n\tdata: {\n\t\tregisterStore,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { STORE_KEY } from './constants';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport reducer from './reducers';\nimport { controls } from './controls';\n\nregisterStore( STORE_KEY, {\n\treducer,\n\tactions,\n\tselectors,\n\tcontrols,\n\tresolvers,\n} );\n\nexport const BP_ATTACHMENTS_STORE_KEY = STORE_KEY;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tPopover,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Header element.\n */\nconst MediaLibraryHeader = ( { settings } ) => {\n\tconst { updateFormState } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst currentDirectoryObject = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getCurrentDirectoryObject();\n\t}, [] );\n\tconst [ isOpen, setOpen ] = useState( false );\n\tconst toggleClass = true === isOpen ? 'split-button is-open' : 'split-button';\n\tconst dashiconClass = true === isOpen ? 'dashicons dashicons-arrow-up-alt2' : 'dashicons dashicons-arrow-down-alt2';\n\tconst canUpload = true !== currentDirectoryObject.readonly;\n\tconst { allowedExtByMediaList } = settings;\n\n\tconst showUploadForm = ( e ) => {\n\t\te.preventDefault();\n\n\t\treturn updateFormState(\n\t\t\t{\n\t\t\t\tparentDirectory: currentDirectoryObject.id,\n\t\t\t\taction: 'upload',\n\t\t\t}\n\t\t);\n\t};\n\n\tconst showCreateDirForm = ( e, type ) => {\n\t\te.preventDefault();\n\n\t\treturn updateFormState(\n\t\t\t{\n\t\t\t\tparentDirectory: currentDirectoryObject.id,\n\t\t\t\taction: 'createDirectory',\n\t\t\t\tdirectoryType: type,\n\t\t\t}\n\t\t);\n\t};\n\n\tlet dirOptions = [];\n\tconst directoryTypes = [ 'album', 'audio_playlist', 'video_playlist' ];\n\n\tif ( ! currentDirectoryObject.type || -1 === directoryTypes.indexOf( currentDirectoryObject.type ) ) {\n\t\tdirOptions = [\n\t\t\t{\n\t\t\t\tid: 'folder',\n\t\t\t\ttext: __( 'Add new directory', 'bp-attachments' ),\n\t\t\t}\n\t\t];\n\n\t\tif ( allowedExtByMediaList && 'private' !== currentDirectoryObject.visibility ) {\n\t\t\tObject.keys( allowedExtByMediaList ).forEach( ( directoryType ) => {\n\t\t\t\tif ( 'album' === directoryType ) {\n\t\t\t\t\tdirOptions.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'album',\n\t\t\t\t\t\t\ttext: __( 'Add new photo album', 'bp-attachments' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else if ( 'audio_playlist' === directoryType ) {\n\t\t\t\t\tdirOptions.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'audio_playlist',\n\t\t\t\t\t\t\ttext: __( 'Add new audio playlist', 'bp-attachments' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else if ( 'video_playlist' === directoryType ) {\n\t\t\t\t\tdirOptions.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'video_playlist',\n\t\t\t\t\t\t\ttext: __( 'Add new video playlist', 'bp-attachments' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\tconst dirList = dirOptions.map( ( dirOption ) => {\n\t\treturn (\n\t\t\t<li key={ 'type-' + dirOption.id }>\n\t\t\t\t<a href=\"#new-bp-media-directory\" className=\"button-link directory-button split-button-option\" onClick={ ( e ) => showCreateDirForm( e, dirOption.id ) }>\n\t\t\t\t\t{ dirOption.text }\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t} );\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"wp-heading-inline\">\n\t\t\t\t{ __( 'Community Media Library', 'bp-attachments' ) }\n\t\t\t</h1>\n\t\t\t{ !! canUpload && (\n\t\t\t\t<div className={ toggleClass }>\n\t\t\t\t\t<div className=\"split-button-head\">\n\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button split-button-primary\" aria-live=\"polite\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t{ __( 'Add new', 'bp-attachments' ) }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<button type=\"button\" className=\"split-button-toggle\" aria-haspopup=\"true\" aria-expanded={ isOpen } onClick={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t<i className={ dashiconClass }></i>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'More actions', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t\t{ isOpen && (\n\t\t\t\t\t\t\t\t<Popover noArrow={ false } onFocusOutside={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t\t\t<ul className=\"split-button-body\">\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button-link media-button split-button-option\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ __( 'Upload media', 'bp-attachments' ) }\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t{ dirList }\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<hr className=\"wp-header-end\"></hr>\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaLibraryHeader;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tDropZone,\n\t\tFormFileUpload,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { bytesToSize } from '../utils/functions';\n\n/**\n * File Uploader element.\n */\nconst MediaLibraryUploader = ( { settings } ) => {\n\tconst { maxUploadFileSize, allowedExtTypes, allowedExtByMediaList } = settings;\n\tconst { updateFormState, createMedium } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst { formState, currentDirectoryObject } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY )\n\t\treturn {\n\t\t\tformState: store.getFormState(),\n\t\t\tcurrentDirectoryObject: store.getCurrentDirectoryObject(),\n\t\t}\n\t}, [] );\n\n\tconst resetFormState = () => {\n\t\tformState.action = '';\n\t\treturn updateFormState( formState );\n\t}\n\n\tconst closeForm = ( e ) => {\n\t\te.preventDefault();\n\t\tresetFormState();\n\t};\n\n\tconst uploadMedia = ( files ) => {\n\t\tlet media;\n\n\t\tif ( files.currentTarget && files.currentTarget.files ) {\n\t\t\tmedia = [ ...files.currentTarget.files ];\n\t\t} else {\n\t\t\tmedia = files;\n\t\t}\n\n\t\tmedia.forEach( ( medium ) => {\n\t\t\tcreateMedium( medium );\n\t\t} );\n\n\t\tresetFormState();\n\t};\n\n\tif ( ! formState.action || 'upload' !== formState.action ) {\n\t\treturn null;\n\t}\n\n\tlet allowedExts = allowedExtTypes;\n\tconst directoryTypes = [ 'album', 'audio_playlist', 'video_playlist' ];\n\n\tif ( currentDirectoryObject.type && -1 !== directoryTypes.indexOf( currentDirectoryObject.type ) ) {\n\t\tallowedExts = allowedExtByMediaList[ currentDirectoryObject.type ];\n\t}\n\n\treturn (\n\t\t<div className=\"uploader-container enabled\">\n\t\t\t<DropZone\n\t\t\t\tlabel={ __( 'Drop your files here.', 'bp-attachments' ) }\n\t\t\t\tonFilesDrop={ ( files ) => uploadMedia( files ) }\n\t\t\t\tclassName=\"uploader-inline\"\n\t\t\t/>\n\t\t\t<button className=\"close dashicons dashicons-no\" onClick={ ( e ) => closeForm( e ) }>\n\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Close the upload panel', 'bp-attachments' ) }</span>\n\t\t\t</button>\n\t\t\t<div className=\"dropzone-label\">\n\t\t\t\t<h2 className=\"upload-instructions drop-instructions\">{ __( 'Drop files to upload', 'bp-attachments' ) }</h2>\n\t\t\t\t<p className=\"upload-instructions drop-instructions\">{ __( 'or', 'bp-attachments' ) }</p>\n\t\t\t\t<FormFileUpload\n\t\t\t\t\tonChange={ ( files ) => uploadMedia( files ) }\n\t\t\t\t\tmultiple={ true }\n\t\t\t\t\taccept={ allowedExts }\n\t\t\t\t\tclassName=\"browser button button-hero\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Select Files', 'bp-attachments' ) }\n\t\t\t\t</FormFileUpload>\n\t\t\t</div>\n\t\t\t<div className=\"upload-restrictions\">\n\t\t\t\t<p>{ sprintf( __( 'Maximum upload file size: %s.', 'bp-attachments' ), bytesToSize( maxUploadFileSize ) ) }</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryUploader;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tButton,\n\t\tTextControl,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Directory Creator element.\n */\nconst MediaLibraryDirectoryCreator = () => {\n\tconst [ directoryName, setDirectoryName ] = useState( '' );\n\tconst { updateFormState, createDirectory } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst formState = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getFormState();\n\t}, [] );\n\n\tconst resetFormState = () => {\n\t\tformState.action = '';\n\t\tformState.directoryType = '';\n\t\treturn updateFormState( formState );\n\t}\n\n\tconst closeForm = ( e ) => {\n\t\te.preventDefault();\n\t\tresetFormState();\n\t};\n\n\tconst makeDirectory = ( e ) => {\n\t\te.preventDefault();\n\n\t\tconst directory = {\n\t\t\tdirectoryName: directoryName,\n\t\t\tdirectoryType: formState.directoryType,\n\t\t};\n\n\t\tcreateDirectory( directory );\n\t\tsetDirectoryName( '' );\n\t\tresetFormState();\n\t};\n\n\tif ( ! formState.action || 'createDirectory' !== formState.action ) {\n\t\treturn null;\n\t}\n\n\tlet title = __( 'Create a new directory', 'bp-attachments' );\n\tlet nameLabel = __( 'Type a name for your directory', 'bp-attachments'  );\n\tlet buttonLabel = __( 'Save directory', 'bp-attachments' );\n\n\tif ( 'album' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new photo album', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your photo album', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save photo album', 'bp-attachments' );\n\t} else if ( 'audio_playlist' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new audio playlist', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your audio playlist', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save audio playlist', 'bp-attachments' );\n\t} else if ( 'video_playlist' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new video playlist', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your video playlist', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save video playlist', 'bp-attachments' );\n\t}\n\n\treturn (\n\t\t<form id=\"bp-media-directory-form\" className=\"directory-creator-container enabled\">\n\t\t\t<button className=\"close dashicons dashicons-no\" onClick={ ( e ) => closeForm( e ) }>\n\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Close the Create directory form', 'bp-attachments' ) }</span>\n\t\t\t</button>\n\t\t\t<h2>{ title }</h2>\n\t\t\t<TextControl\n\t\t\t\tlabel={ nameLabel }\n\t\t\t\tvalue={ directoryName }\n\t\t\t\tonChange={ ( directoryName ) => setDirectoryName( directoryName ) }\n\t\t\t/>\n\t\t\t<Button variant=\"primary\" onClick={ ( e ) => makeDirectory( e ) }>\n\t\t\t\t{ buttonLabel }\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\n\nexport default MediaLibraryDirectoryCreator;\n","/**\n * External dependencies.\n */\nconst {\n\tfind,\n\treverse,\n} = lodash;\n\n/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tButton,\n\t\tTreeSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\thooks: {\n\t\tapplyFilters,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Toolbar element.\n */\nconst MediaLibraryToolbar = ( { gridDisplay, tree } ) => {\n\tconst {\n\t\tswitchDisplayMode,\n\t\trequestMedia,\n\t\ttoggleSelectable,\n\t\ttoggleMediaSelection,\n\t\tdeleteMedium,\n\t} = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\n\tconst {\n\t\tuser,\n\t\tcurrentDirectory,\n\t\tcurrentDirectoryObject,\n\t\tflatTree,\n\t\tisSelectable,\n\t\tselectedMedia,\n\t} = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY )\n\t\treturn {\n\t\t\tuser: store.getLoggedInUser(),\n\t\t\tcurrentDirectory: store.getCurrentDirectory(),\n\t\t\tcurrentDirectoryObject: store.getCurrentDirectoryObject(),\n\t\t\tflatTree: store.getFlatTree(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t\tselectedMedia: store.selectedMedia(),\n\t\t}\n\t}, [] );\n\tconst [ page, setPage ] = useState( currentDirectory );\n\tconst canSelect = true !== currentDirectoryObject.readonly;\n\tconst hasSelectedMedia = isSelectable && selectedMedia.length !== 0;\n\n\tif ( currentDirectory !== page ) {\n\t\tsetPage( currentDirectory );\n\t}\n\n\tconst switchMode = ( e, isGrid ) => {\n\t\te.preventDefault();\n\t\tswitchDisplayMode( isGrid );\n\t};\n\n\tconst changeDirectory = ( directory ) => {\n\t\tsetPage( directory );\n\n\t\tconst directoryItem = find( flatTree, { id: directory } );\n\t\tlet args = {};\n\n\t\tif ( directoryItem ) {\n\t\t\targs.directory = directoryItem.slug;\n\t\t\targs.parent = directoryItem.id;\n\n\t\t\tif ( directoryItem.parent && directoryItem.object ) {\n\t\t\t\tlet chunks = reverse( getDirectoryAncestors(\n\t\t\t\t\tflatTree,\n\t\t\t\t\tdirectoryItem.parent\n\t\t\t\t).map( ( parent ) => parent.slug ) );\n\n\t\t\t\tif ( 'members' === directoryItem.object ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * In a future release, when Groups will be supported. The root directories will be:\n\t\t\t\t\t * - My Groups Media,\n\t\t\t\t\t * - My Media.\n\t\t\t\t\t *\n\t\t\t\t\t * The \"My Media\" ID is 'member'. We need to remove this from chunks as files are stored in\n\t\t\t\t\t * `/uploads/buddypress/public/members/{userID}` or `../buddypress-private/members/{userID}`.\n\t\t\t\t\t */\n\t\t\t\t\tconst memberIndex = chunks.indexOf( 'member' );\n\t\t\t\t\tif ( -1 !== memberIndex ) {\n\t\t\t\t\t\tchunks.splice( memberIndex, 1 );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( chunks.length ) {\n\t\t\t\t\t\tchunks.splice( 1, 0, directoryItem.object, user.id );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Use this filter to customize the pathArray for other components (eg: groups).\n\t\t\t\t\tchunks = applyFilters(\n\t\t\t\t\t\t'buddypress.Attachments.toolbarTreeSelect.pathArray',\n\t\t\t\t\t\tchunks,\n\t\t\t\t\t\tdirectoryItem,\n\t\t\t\t\t\tuser.id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\targs.path = '/' + chunks.join( '/' );\n\t\t\t}\n\n\t\t\tif ( directoryItem.object ) {\n\t\t\t\targs.object = directoryItem.object;\n\t\t\t}\n\t\t}\n\n\t\treturn requestMedia( args );\n\t};\n\n\tconst onToggleSectable = ( event ) => {\n\t\tevent.preventDefault();\n\t\tconst toggle = ! isSelectable;\n\n\t\tif ( ! toggle ) {\n\t\t\ttoggleMediaSelection( ['all'], toggle );\n\t\t}\n\n\t\treturn toggleSelectable( toggle );\n\t};\n\n\tconst onDeleteSelected = ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tselectedMedia.forEach( medium => {\n\t\t\tdeleteMedium( medium );\n\t\t} );\n\n\t\treturn toggleSelectable( false );\n\t}\n\n\treturn (\n\t\t<div className=\"media-toolbar wp-filter\">\n\t\t\t<div className=\"media-toolbar-secondary\">\n\t\t\t\t{ ! isSelectable && (\n\t\t\t\t\t<div className=\"view-switch media-grid-view-switch\">\n\t\t\t\t\t\t<a href=\"#view-list\" onClick={ ( e ) => switchMode( e, false ) } className={ gridDisplay ? 'view-list' : 'view-list current' }>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display list', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"#view-grid\" onClick={ ( e ) => switchMode( e, true ) } className={ gridDisplay ? 'view-grid current' : 'view-grid' }>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display grid', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ canSelect && (\n\t\t\t\t\t<Button variant=\"secondary\" className=\"media-button select-mode-toggle-button\" onClick={ ( e ) => onToggleSectable( e ) }>\n\t\t\t\t\t\t{ ! isSelectable ? __( 'Select', 'bp-attachments' ) : __( 'Cancel Selection', 'bp-attachments' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\t{ canSelect && hasSelectedMedia && (\n\t\t\t\t\t<Button variant=\"primary\" className=\"media-button delete-selected-button\" onClick={ ( e ) => onDeleteSelected( e ) }>\n\t\t\t\t\t\t{ __( 'Delete selection', 'bp-attachments' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t{ !! tree.length && (\n\t\t\t\t<div className=\"media-toolbar-primary\">\n\t\t\t\t\t<TreeSelect\n\t\t\t\t\t\tnoOptionLabel={ __( 'Home', 'bp-attachments' ) }\n\t\t\t\t\t\tonChange={ ( directory ) => changeDirectory( directory ) }\n\t\t\t\t\t\tselectedId={ page }\n\t\t\t\t\t\ttree={ tree }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryToolbar;\n","/**\n * External dependencies\n */\nconst { template } = lodash;\n\nfunction setTemplate( tmpl ) {\n\tconst options = {\n\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\tvariable:    'data'\n\t};\n\n\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n}\n\nexport default setTemplate;\n","/**\n * WordPress dependencies\n */\n const {\n\tcomponents: {\n\t\tButton,\n\t\tExternalLink,\n\t\tTextareaControl,\n\t\tTextControl,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\nconst EditMediaItem = ( { medium, errorCallback } ) => {\n\tconst {\n\t\tid,\n\t\tname,\n\t\ttitle,\n\t\tdescription,\n\t\ticon,\n\t\tmedia_type,\n\t\tmime_type,\n\t\tlinks: {\n\t\t\tview,\n\t\t\tdownload,\n\t\t\tsrc\n\t\t},\n\t} = medium;\n\tconst [ editedMedium, editMedium ] = useState( {\n\t\ttitle: title,\n\t\tdescription: description,\n\t} );\n\tconst { updateMedium } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst isDisabled = title === editedMedium.title && description === editedMedium.description;\n\tconst hasNoPreview = -1 === [ 'image', 'video', 'audio' ].indexOf( media_type );\n\n\tconst saveMediumProps = ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tupdateMedium( {\n\t\t\tid: id,\n\t\t\tname: name,\n\t\t\ttitle: editedMedium.title,\n\t\t\tdescription: editedMedium.description,\n\t\t} ).then( ( response ) => {\n\t\t\tif ( response.error ) {\n\t\t\t\terrorCallback( false );\n\t\t\t} else if ( response.file ) {\n\t\t\t\teditMedium( {\n\t\t\t\t\t...editedMedium,\n\t\t\t\t\ttitle: response.file.title,\n\t\t\t\t\tdescription: response.file.description,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst resetMediumProps = ( event ) => {\n\t\tevent.preventDefault();\n\n\t\teditMedium( {\n\t\t\t...editedMedium,\n\t\t\ttitle: title,\n\t\t\tdescription: description,\n\t\t} );\n\t}\n\n\treturn (\n\t\t<div className=\"bp-attachment-edit-item\">\n\t\t\t<div className=\"bp-attachment-edit-item__preview\">\n\t\t\t\t<h3 className=\"bp-attachment-edit-item__preview_title\">{ editedMedium.title }</h3>\n\t\t\t\t<div className=\"bp-attachment-edit-item__preview_vignette\">\n\t\t\t\t\t<ul className=\"bp-attachment-edit-item__preview_links\">\n\t\t\t\t\t\t<li><ExternalLink href={ view }>{ __( 'Open media page', 'bp-attachments' ) }</ExternalLink></li>\n\t\t\t\t\t\t<li><a href={ download }>{ __( 'Download media', 'bp-attachments' ) }</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<p>{ editedMedium.description }</p>\n\t\t\t\t\t{ hasNoPreview && (\n\t\t\t\t\t\t<img src={ icon } className=\"bp-attachment-medium-icon\" />\n\t\t\t\t\t) }\n\t\t\t\t\t{ 'image' === media_type && src && (\n\t\t\t\t\t\t<img src={ src } className=\"bp-attachment-medium-vignette\" />\n\t\t\t\t\t) }\n\t\t\t\t\t{ 'audio' === media_type && src && (\n\t\t\t\t\t\t<audio controls=\"controls\" preload=\"metadata\">\n\t\t\t\t\t\t\t<source src={ src } type={ mime_type } />\n\t\t\t\t\t\t</audio>\n\t\t\t\t\t) }\n\t\t\t\t\t{ 'video' === media_type && src && (\n\t\t\t\t\t\t<video controls=\"controls\" muted={ true } preload=\"metadata\">\n\t\t\t\t\t\t\t<source src={ src } type={ mime_type } />\n\t\t\t\t\t\t</video>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"bp-attachment-edit-item__form\">\n\t\t\t\t<h3>{ sprintf( __( 'Edit %s', 'bp-attachments' ), name ) }</h3>\n\t\t\t\t<p className=\"description\">{ __( 'Use the below fields to edit media properties.', 'bp-attachments' ) }</p>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Title', 'bp-attachments' ) }\n\t\t\t\t\tvalue={ editedMedium.title }\n\t\t\t\t\tonChange={ ( value ) => editMedium( { ...editedMedium, title: value } ) }\n\t\t\t\t\thelp={ __( 'Change the title of your medium to something more descriptive then its file name.', 'bp-attachments' ) }\n\t\t\t\t/>\n\t\t\t\t<TextareaControl\n\t\t\t\t\tlabel={ __( 'Description', 'bp-attachments' ) }\n\t\t\t\t\tvalue={ editedMedium.description }\n\t\t\t\t\tonChange={ ( text ) => editMedium( { ...editedMedium, description: text } ) }\n\t\t\t\t\thelp={ __( 'Add or edit the description of your medium to tell your story about it.', 'bp-attachments' ) }\n\t\t\t\t/>\n\t\t\t\t<div className=\"bp-attachment-edit-item__form-actions\">\n\t\t\t\t\t<Button variant=\"primary\" disabled={ isDisabled } onClick={ ( e ) => saveMediumProps( e ) }>\n\t\t\t\t\t\t{ __( 'Save your edits', 'bp-attachment' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"tertiary\" disabled={ isDisabled } onClick={ ( e ) => resetMediumProps( e ) }>\n\t\t\t\t\t\t{ __( 'Cancel', 'bp-attachment' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default EditMediaItem;\n","/**\n * WordPress dependencies\n */\n const {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\tcomponents: {\n\t\tModal,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport setTemplate from '../utils/set-template';\nimport EditMediaItem from './edit-item';\n\nconst MediaItem = ( props ) => {\n\tconst Template = setTemplate( 'bp-attachments-media-item' );\n\tconst { medium, selected } = props;\n\tconst { toggleMediaSelection, requestMedia } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst [ isOpen, toggleModal ] = useState( false );\n\tconst [ isSelected, selectMedia ] = useState( selected );\n\tconst { getRelativePath, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\tgetRelativePath: store.getRelativePath(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t};\n\t}, [] );\n\n\tif ( ! isSelectable && ! selected && isSelected ) {\n\t\tselectMedia( false );\n\t}\n\n\tconst classes = isSelected ? 'media-item selected' : 'media-item';\n\tconst onMediaClick = () => {\n\t\tconst { mimeType, name, isSelectable, id, object } = props;\n\n\t\tif ( isSelectable ) {\n\t\t\tselectMedia( ! isSelected );\n\t\t\treturn toggleMediaSelection( [ id ], ! isSelected );\n\t\t}\n\n\t\tif ( 'inode/directory' === mimeType ) {\n\t\t\treturn requestMedia( { directory: name, path: getRelativePath, object: object, parent: id } );\n\t\t}\n\n\t\ttoggleModal( true );\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div\n\t\t\t\tclassName={ classes }\n\t\t\t\tdangerouslySetInnerHTML={ { __html: Template( props ) } }\n\t\t\t\trole=\"checkbox\"\n\t\t\t\tonClick={ () => onMediaClick() }\n\t\t\t/>\n\t\t\t{ isOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ __( 'Media details', 'bp-attachments' ) }\n\t\t\t\t\tonRequestClose={ () => toggleModal( false ) }\n\t\t\t\t>\n\t\t\t\t\t<EditMediaItem medium={ medium } errorCallback={ toggleModal }/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaItem;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tAnimate,\n\t\tDashicon,\n\t\tNotice,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Notices element.\n */\nconst MediaLibraryNotices = () => {\n\tconst { uploads, errors } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\tuploads: store.getUploads(),\n\t\t\terrors: store.getErrors(),\n\t\t};\n\t}, [] );\n\tconst { removeMediumError } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst onRemoveError = ( errorID ) => {\n\t\treturn removeMediumError( errorID );\n\t};\n\n\tlet errorNotices = [];\n\n\tif ( errors && errors.length ) {\n\t\terrorNotices = errors.map( ( error ) => {\n\t\t\treturn (\n\t\t\t\t<Notice\n\t\t\t\t\tkey={ 'error-' + error.id }\n\t\t\t\t\tstatus=\"error\"\n\t\t\t\t\tonRemove={ () => onRemoveError( error.id ) }\n\t\t\t\t\tisDismissible={ true }\n\t\t\t\t>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Dashicon icon=\"warning\" />\n\t\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t\t/* translators: 1: file name. 2: error message. */\n\t\t\t\t\t\t\t__( '« %1$s » wasn‘t added to the media library. %2$s', 'bp-attachments' ),\n\t\t\t\t\t\t\terror.name,\n\t\t\t\t\t\t\terror.error\n\t\t\t\t\t\t) }\n\t\t\t\t\t</p>\n\t\t\t\t</Notice>\n\t\t\t);\n\t\t} );\n\t}\n\n\tlet loadingNotice = null;\n\tconst numberUploads = uploads && uploads.length ? uploads.length : 0;\n\n\tif ( !! numberUploads ) {\n\t\t// Looks like WP CLI can't find _n() usage.\n\t\tlet uploadingMedia = __( 'Uploading the media, please wait.', 'bp-attachments' );\n\t\tif ( numberUploads > 1 ) {\n\t\t\t/* translators: %d: number of media being uploaded. */\n\t\t\tuploadingMedia = sprintf( __( 'Uploading %d media, please wait.', 'bp-attachments' ), numberUploads );\n\t\t}\n\n\t\tloadingNotice = (\n\t\t\t<div className=\"chargement-de-documents\">\n\t\t\t\t<Animate\n\t\t\t\t\ttype=\"loading\"\n\t\t\t\t>\n\t\t\t\t\t{ ( { className } ) => (\n\t\t\t\t\t\t<Notice\n\t\t\t\t\t\t\tstatus=\"warning\"\n\t\t\t\t\t\t\tisDismissible={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className={ className }>\n\t\t\t\t\t\t\t\t<Dashicon icon=\"update\" />\n\t\t\t\t\t\t\t\t{ uploadingMedia }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Notice>\n\t\t\t\t\t) }\n\t\t\t\t</Animate>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"bp-attachments-notices\">\n\t\t\t{ loadingNotice }\n\t\t\t{ errorNotices }\n\t\t</div>\n\t);\n}\n\nexport default MediaLibraryNotices;\n","/**\n * WordPress dependencies\n */\nconst {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport MediaItem from './item';\nimport MediaLibraryNotices from './notices';\n\n/**\n * Main element.\n */\nconst MediaLibraryMain = ( { gridDisplay, tree } ) => {\n\tconst { items, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\titems: store.getMedia(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t};\n\t}, [] );\n\n\tlet mediaItems = null;\n\tif ( items.length ) {\n\t\tmediaItems = items.map( ( item ) => {\n\t\t\treturn (\n\t\t\t\t<MediaItem\n\t\t\t\t\tkey={ 'media-item-' + item.id }\n\t\t\t\t\tid={ item.id }\n\t\t\t\t\tname={ item.name }\n\t\t\t\t\ttitle={ item.title }\n\t\t\t\t\tmediaType={ item.media_type }\n\t\t\t\t\tmimeType={ item.mime_type }\n\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\tvignette={ item.vignette }\n\t\t\t\t\torientation={ item.orientation }\n\t\t\t\t\tisSelected={ item.selected || false }\n\t\t\t\t\tobject={ item.object || 'members' }\n\t\t\t\t\tisSelectable={ isSelectable }\n\t\t\t\t\ttree={ tree }\n\t\t\t\t\tmedium={ item }\n\t\t\t\t/>\n\t\t\t);\n\t\t} );\n\t}\n\n\treturn (\n\t\t<main className=\"bp-user-media\">\n\t\t\t<MediaLibraryNotices />\n\t\t\t<div className={ isSelectable ? 'media-items mode-select' : 'media-items' }>\n\t\t\t\t{ mediaItems }\n\t\t\t\t{ ! items.length && (\n\t\t\t\t\t<p className=\"no-media\">{ __( 'No community media items found.', 'bp-attachments' ) }</p>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default MediaLibraryMain;\n","/**\n * WordPress dependencies\n */\nconst {\n\tdomReady,\n\telement: {\n\t\tcreateElement,\n\t\trender,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from './store';\nimport MediaLibraryHeader from './elements/header';\nimport MediaLibraryUploader from './elements/uploader';\nimport MediaLibraryDirectoryCreator from './elements/directory-creator';\nimport MediaLibraryToolbar from './elements/toolbar';\nimport MediaLibraryMain from './elements/main';\n\nconst MediaLibrary = ( { settings } ) => {\n\tconst { isGrid, globalSettings, tree } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\t\treturn {\n\t\t\tisGrid: store.isGridDisplayMode(),\n\t\t\tglobalSettings: store.getSettings(),\n\t\t\ttree: store.getTree(),\n\t\t};\n\t}, [] );\n\n\tif ( ! Object.keys( globalSettings ).length ) {\n\t\tconst { setSettings } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\t\tsetSettings( settings );\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MediaLibraryHeader settings={ globalSettings } />\n\t\t\t<MediaLibraryUploader settings={ globalSettings } />\n\t\t\t<MediaLibraryDirectoryCreator />\n\t\t\t<MediaLibraryToolbar gridDisplay={ isGrid } tree={ tree } />\n\t\t\t<MediaLibraryMain gridDisplay={ isGrid } tree={ tree } />\n\t\t</Fragment>\n\t);\n};\n\ndomReady( function() {\n\tconst settings = window.bpAttachmentsMediaLibrarySettings || {};\n\trender( <MediaLibrary settings={ settings }/>, document.querySelector( '#bp-media-library' ) );\n} );\n"],"names":["STORE_KEY","i18n","__","wp","filter","lodash","getDirectoryAncestors","tree","parentId","parents","id","forEach","parent","grandParents","bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","toFixed","trim","groupBy","indexOf","find","defaultTo","getSettings","state","settings","getRequestsContext","isAdminScreen","isGridDisplayMode","isGrid","getLoggedInUser","user","getFormState","formState","isUploading","uploading","uploadEnded","ended","getUploads","uploads","getErrors","errors","getMedia","files","getCurrentDirectory","currentDirectory","getCurrentDirectoryObject","defaultValue","readonly","getTree","groupedTree","currentChildrenIds","map","child","length","childId","currentAncestors","ancestor","Object","keys","treeIndex","fillWithChildren","items","item","children","getFlatTree","isSelectable","selectedMedia","getRelativePath","relativePath","getDestinationData","object","destinationData","split","visibility","TYPES","SET_SETTINGS","GET_LOGGED_IN_USER","GET_MEDIA","ADD_MEDIUM","FILL_TREE","PURGE_TREE","REMOVE_MEDIUM","FETCH_FROM_API","CREATE_FROM_API","UPDATE_FROM_API","DELETE_FROM_API","UPLOAD_START","UPLOAD_END","RESET_UPLOADS","ADD_ERROR","REMOVE_ERROR","TOGGLE_SELECTABLE","TOGGLE_MEDIA_SELECTION","SWITCH_DISPLAY_MODE","UPDATE_FORM_STATE","uniqueId","hasIn","trimEnd","data","dispatch","select","url","addQueryArgs","setSettings","type","types","fetchFromAPI","path","parse","createFromAPI","updateFromAPI","deleteFromAPI","switchDisplayMode","updateFormState","params","setItemTree","directory","slug","name","title","media_type","initTree","directories","mime_type","itemTree","addItemTree","removeItemTree","itemId","toggleSelectable","toggleMediaSelection","ids","isSelected","addMedium","file","addMediumError","error","createMedium","upload","store","formData","FormData","append","uploadRelativePath","replace","message","uploaded","createDirectory","directoryName","directoryType","createDirRelativePath","currentDir","updateMedium","medium","update","relative_path","description","updated","parseResponseMedia","async","response","arguments","undefined","json","then","requestMedia","args","relativePathHeader","context","headers","get","removeMedium","deleteMedium","deleted","previous","removeMediumError","errorID","getLoggedInUserAction","window","bpAttachmentsMediaLibrarySettings","_requestContext","getMediaAction","reject","DEFAULT_STATE","$101f7048d1a3a5c4$export$2e2bcd8739ae039","action","u","selected","apiFetch","controls","_ref","_ref2","method","body","_ref3","_ref4","registerStore","reducer","actions","selectors","resolvers","BP_ATTACHMENTS_STORE_KEY","components","Popover","useDispatch","useSelect","element","createElement","Fragment","useState","$fcd8ebc78e2f45bd$export$2e2bcd8739ae039","currentDirectoryObject","isOpen","setOpen","toggleClass","dashiconClass","canUpload","allowedExtByMediaList","showUploadForm","e","preventDefault","parentDirectory","dirOptions","text","push","dirList","dirOption","$fcd8ebc78e2f45bd$var$createElement","key","href","className","onClick","showCreateDirForm","$fcd8ebc78e2f45bd$var$Fragment","$fcd8ebc78e2f45bd$var$Popover","noArrow","onFocusOutside","DropZone","FormFileUpload","sprintf","$9677e9ae62a97894$export$2e2bcd8739ae039","maxUploadFileSize","allowedExtTypes","resetFormState","uploadMedia","media","currentTarget","allowedExts","$9677e9ae62a97894$var$createElement","$9677e9ae62a97894$var$DropZone","label","onFilesDrop","closeForm","$9677e9ae62a97894$var$FormFileUpload","onChange","multiple","accept","Button","TextControl","$bdff20d4da09a7d7$export$2e2bcd8739ae039","setDirectoryName","nameLabel","buttonLabel","$bdff20d4da09a7d7$var$createElement","$bdff20d4da09a7d7$var$TextControl","value","$bdff20d4da09a7d7$var$Button","variant","makeDirectory","reverse","TreeSelect","hooks","applyFilters","$b3153ca487c736b9$export$2e2bcd8739ae039","gridDisplay","flatTree","page","setPage","canSelect","hasSelectedMedia","switchMode","$b3153ca487c736b9$var$createElement","$b3153ca487c736b9$var$Button","event","toggle","onToggleSectable","$b3153ca487c736b9$var$TreeSelect","noOptionLabel","directoryItem","chunks","memberIndex","splice","join","changeDirectory","selectedId","template","ExternalLink","TextareaControl","$8bf00b4ce561239f$export$2e2bcd8739ae039","errorCallback","icon","links","view","download","src","editedMedium","editMedium","isDisabled","hasNoPreview","$8bf00b4ce561239f$var$createElement","$8bf00b4ce561239f$var$ExternalLink","preload","muted","$8bf00b4ce561239f$var$TextControl","help","$8bf00b4ce561239f$var$TextareaControl","$8bf00b4ce561239f$var$Button","disabled","Modal","$25915412e7fc4248$export$2e2bcd8739ae039","props","Template","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","toggleModal","selectMedia","$25915412e7fc4248$var$createElement","$25915412e7fc4248$var$Fragment","dangerouslySetInnerHTML","__html","role","mimeType","onMediaClick","$25915412e7fc4248$var$Modal","onRequestClose","Animate","Dashicon","Notice","$bae870346126130f$export$2e2bcd8739ae039","errorNotices","$bae870346126130f$var$createElement","$bae870346126130f$var$Notice","status","onRemove","onRemoveError","isDismissible","$bae870346126130f$var$Dashicon","loadingNotice","numberUploads","uploadingMedia","$bae870346126130f$var$Animate","$1e56901890e67653$export$2e2bcd8739ae039","mediaItems","$1e56901890e67653$var$createElement","mediaType","vignette","orientation","domReady","render","MediaLibrary","globalSettings","$85929bbc1a3f4ac8$var$createElement","$85929bbc1a3f4ac8$var$Fragment","$85929bbc1a3f4ac8$var$MediaLibrary"],"version":3,"file":"index.js.map"}