{"mappings":"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","sources":["src/media-library/store/constants.js","src/media-library/utils/functions.js","src/media-library/store/selectors.js","src/media-library/store/action-types.js","src/media-library/store/actions.js","src/media-library/store/resolvers.js","src/media-library/store/reducers.js","src/media-library/store/controls.js","src/media-library/store/index.js","src/media-library/elements/header.js","src/media-library/elements/uploader.js","src/media-library/elements/directory-creator.js","src/media-library/elements/toolbar.js","src/media-library/utils/set-template.js","src/media-library/elements/item.js","src/media-library/elements/notices.js","src/media-library/elements/main.js","src/media-library/index.js"],"sourcesContent":["/**\n * Identifier key for this store reducer.\n *\n * @type {string}\n */\n export const STORE_KEY = 'bp/attachments';\n","/**\n * WordPress dependencies\n */\nconst {\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * External dependencies\n */\nconst { filter } = lodash;\n\nexport const getDirectoryAncestors = ( tree, parentId ) => {\n\tlet parents = filter( tree, { id: parentId } );\n\n\tparents.forEach( ( parent ) => {\n\t\tconst grandParents = getDirectoryAncestors( tree, parent.parent );\n\t\tparents = [ ...parents, ...grandParents ];\n\t} );\n\n\treturn parents;\n}\n\nexport const bytesToSize = ( bytes ) => {\n\tconst sizes = [\n\t\t__( 'Bytes', 'bp-attachments' ),\n\t\t__( 'KB', 'bp-attachments' ),\n\t\t__( 'MB', 'bp-attachments' ),\n\t\t__( 'GB', 'bp-attachments' ),\n\t\t__( 'TB', 'bp-attachments' ),\n\t];\n\n\tif ( bytes === 0 ) {\n\t\treturn '0 ' + sizes[0];\n\t}\n\n\tconst i = parseInt( Math.floor( Math.log( bytes ) / Math.log( 1024 ) ), 10 );\n\n\tif ( i === 0 ) {\n\t\treturn `${bytes} ${sizes[i]}`;\n\t}\n\n\treturn `${ ( bytes / ( 1024 ** i ) ).toFixed( 1 ) } ${ sizes[ i ] }`;\n}\n","/**\n * External dependencies.\n */\nconst {\n\ttrim,\n\tgroupBy,\n\tfilter,\n\tindexOf,\n\tfind,\n\tdefaultTo,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Returns the Community Media Library settings.\n *\n * @param {Object} state\n * @returns {Object} The Community Media Library settings.\n */\nexport const getSettings = ( state ) => {\n\tconst { settings } = state;\n\treturn settings;\n}\n\n/**\n * Returns the requests context.\n *\n * @param {Object} state\n * @returns {string} The requests context (`edit` or `view`).\n */\nexport const getRequestsContext = ( state ) => {\n\tconst {\n\t\tsettings: {\n\t\t\tisAdminScreen,\n\t\t}\n\t} = state;\n\n\treturn true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const isGridDisplayMode = ( state ) => {\n\tconst { isGrid } = state;\n\treturn isGrid;\n}\n\n/**\n * Returns the logged in user Object.\n *\n * @param {Object} state The current state.\n * @return {Object} The logged in user Object.\n */\nexport const getLoggedInUser = ( state ) => {\n\tconst { user } = state;\n\treturn user;\n};\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const getFormState = ( state ) => {\n\tconst { formState } = state;\n\treturn formState;\n}\n\n/**\n * Returns whether an upload is being processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads is being processed. False otherwise.\n */\nexport const isUploading = ( state ) => {\n\tconst { uploading } = state;\n\treturn uploading;\n};\n\n/**\n * Returns whether an upload has been processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads has been processed. False otherwise.\n */\n export const uploadEnded = ( state ) => {\n\tconst { ended } = state;\n\treturn ended;\n};\n\n/**\n * Returns the list of uploaded file Objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of uploaded file Objects.\n */\nexport const getUploads = ( state ) => {\n\tconst { uploads } = state;\n\treturn uploads;\n};\n\n/**\n * Returns the list of errors.\n *\n * @param {Object} state The current state.\n * @return {array} The list of errors.\n */\nexport const getErrors = ( state ) => {\n\tconst { errors } = state;\n\treturn errors;\n};\n\n/**\n * Returns the list community media objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of community media objects.\n */\nexport const getMedia = ( state ) => {\n\tconst { files } = state;\n\treturn files;\n};\n\n/**\n * Returns the current directory.\n *\n * @param {Object} state The current state.\n * @return {string} The current directory.\n */\nexport const getCurrentDirectory = ( state ) => {\n\tconst { currentDirectory } = state;\n\treturn currentDirectory || '';\n};\n\n/**\n * Returns the current directory object.\n *\n * @param {Object} state The current state.\n * @return {Object} The current directory object.\n */\n export const getCurrentDirectoryObject = ( state ) => {\n\tconst { currentDirectory, tree } = state;\n\tconst defaultValue = { readonly: true };\n\n\tif ( '' !== currentDirectory ) {\n\t\treturn defaultTo(\n\t\t\tfind( tree, { id: currentDirectory } ),\n\t\t\tdefaultValue\n\t\t);\n\t}\n\n\treturn defaultValue;\n};\n\n/**\n * Returns the directories Tree.\n *\n * @param {Object} state The current state.\n * @return {array} The directories Tree.\n */\n export const getTree = ( state ) => {\n\tconst { tree, currentDirectory } = state;\n\tconst groupedTree = groupBy( tree, 'parent' );\n\tconst currentChildrenIds = filter( tree, { 'parent': currentDirectory || 0 } ).map( ( child ) => child.id );\n\n\t// Makes sure to only list current directory children.\n\tif ( currentChildrenIds && currentChildrenIds.length ) {\n\t\tcurrentChildrenIds.forEach( ( childId ) => {\n\t\t\tif ( groupedTree[ childId ] ) {\n\t\t\t\tdelete groupedTree[ childId ];\n\t\t\t}\n\t\t} );\n\t}\n\n\t// Makes sure to avoid listing children of directories that are not an ancestor of the currentDirectory one.\n\tif ( currentDirectory ) {\n\t\tconst currentAncestors = getDirectoryAncestors(\n\t\t\ttree,\n\t\t\tcurrentDirectory\n\t\t).map( ( ancestor ) => ancestor.id );\n\n\t\tObject.keys( groupedTree ).forEach( ( treeIndex ) => {\n\t\t\tif ( 0 !== parseInt( treeIndex, 10 ) && -1 === indexOf( currentAncestors, treeIndex ) ) {\n\t\t\t\tdelete groupedTree[ treeIndex ];\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst fillWithChildren = ( items ) => {\n\t\treturn items.map( ( item ) => {\n\t\t\tconst children = groupedTree[ item.id ];\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tchildren: children && children.length ?\n\t\t\t\t\tfillWithChildren( children ) :\n\t\t\t\t\t[],\n\t\t\t};\n\t\t} );\n\t};\n\n\treturn fillWithChildren( groupedTree[0] || [] );\n};\n\n/**\n * Returns the directory flat list.\n *\n * @param {Object} state The current state.\n * @return {array} The directory flat list.\n */\n export const getFlatTree = ( state ) => {\n\tconst { tree } = state;\n\treturn tree || [];\n};\n\n/**\n * Returns whether a media/directory item is selectable.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if a media/directory item is selectable. False otherwise.\n */\nexport const isSelectable = ( state ) => {\n\tconst { isSelectable } = state;\n\treturn isSelectable;\n};\n\n/**\n * Returns the selected media.\n *\n * @param {Object} state The current state.\n * @return {array} The list of selected media.\n */\nexport const selectedMedia = ( state ) => {\n\tconst { files } = state;\n\n\treturn filter( files, [ 'selected', true ] );\n}\n\n/**\n * Returns the current relative path.\n *\n * @param {Object} state The current state.\n * @return {string} The current relative path.\n */\nexport const getRelativePath = ( state ) => {\n\tconst { relativePath } = state;\n\treturn relativePath;\n};\n\n/**\n * Returns the destination data for media.\n *\n * @param {Object} state The current state.\n * @return {Object} The destination data for media.\n */\nexport const getDestinationData = ( state ) => {\n\tconst { relativePath } = state;\n\n\tif ( ! relativePath ) {\n\t\treturn {\n\t\t\tobject: 'members',\n\t\t}\n\t}\n\n\tconst destinationData = trim( relativePath, '/' ).split( '/' );\n\n\treturn {\n\t\tstatus: destinationData[0] ? destinationData[0] : 'public',\n\t\tobject: destinationData[1] ? destinationData[1] : 'members',\n\t\titem: destinationData[2] ? destinationData[2] : '',\n\t}\n};\n","export const TYPES = {\n\tSET_SETTINGS: 'SET_SETTINGS',\n\tGET_LOGGED_IN_USER: 'GET_LOGGED_IN_USER',\n\tGET_MEDIA: 'GET_MEDIA',\n\tADD_MEDIUM: 'ADD_MEDIUM',\n\tFILL_TREE: 'FILL_TREE',\n\tPURGE_TREE: 'PURGE_TREE',\n\tREMOVE_MEDIUM: 'REMOVE_MEDIUM',\n\tFETCH_FROM_API: 'FETCH_FROM_API',\n\tCREATE_FROM_API: 'CREATE_FROM_API',\n\tDELETE_FROM_API: 'DELETE_FROM_API',\n\tUPLOAD_START: 'UPLOAD_START',\n\tUPLOAD_END: 'UPLOAD_END',\n\tRESET_UPLOADS: 'RESET_UPLOADS',\n\tADD_ERROR: 'ADD_ERROR',\n\tREMOVE_ERROR: 'REMOVE_ERROR',\n\tTOGGLE_SELECTABLE: 'TOGGLE_SELECTABLE',\n\tTOGGLE_MEDIA_SELECTION: 'TOGGLE_MEDIA_SELECTION',\n\tSWITCH_DISPLAY_MODE: 'SWITCH_DISPLAY_MODE',\n\tUPDATE_FORM_STATE: 'UPDATE_FORM_STATE',\n};\n","/**\n * External dependencies.\n */\n const {\n\tuniqueId,\n\thasIn,\n\ttrim,\n\ttrimEnd,\n\tfilter,\n} = lodash;\n\n/**\n * WordPress dependencies.\n */\nconst {\n\tdata: {\n\t\tdispatch,\n\t\tselect,\n\t},\n\turl: {\n\t\taddQueryArgs,\n\t}\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { TYPES as types } from './action-types';\nimport { STORE_KEY } from './constants';\n\n/**\n * Returns an action to set the BP attachments Media Library settings.\n *\n * @param {Object} settings The settings to use.\n * @return {Object} Object for action.\n */\nexport function setSettings( settings ) {\n\treturn {\n\t\ttype: types.SET_SETTINGS,\n\t\tsettings,\n\t};\n}\n\n/**\n * Returns an action object used to fetch media from the API.\n *\n * @param {string} path Endpoint path.\n * @param {boolean} parse Should we parse the request.\n * @return {Object} Object for action.\n */\nexport function fetchFromAPI( path, parse ) {\n\treturn {\n\t\ttype: types.FETCH_FROM_API,\n\t\tpath,\n\t\tparse,\n\t};\n}\n\n/**\n * Returns an action object used to create media via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function createFromAPI( path, data ) {\n\treturn {\n\t\ttype: types.CREATE_FROM_API,\n\t\tpath,\n\t\tdata,\n\t};\n}\n\n/**\n * Returns an action object used to delete a media via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function deleteFromAPI( path, relativePath ) {\n\treturn {\n\t\ttype: types.DELETE_FROM_API,\n\t\tpath,\n\t\trelativePath,\n\t};\n}\n\n/**\n * Returns an action object used to switch between Grid & List mode.\n *\n * @param {Boolean} isGrid\n * @returns {Object} Object for action.\n */\nexport function switchDisplayMode( isGrid ) {\n\treturn {\n\t\ttype: types.SWITCH_DISPLAY_MODE,\n\t\tisGrid,\n\t};\n}\n\n/**\n * Returns an action object used to get the logged in user.\n *\n * @param {Object} user Logged In User object.\n * @return {Object} Object for action.\n */\nexport function getLoggedInUser( user ) {\n\treturn {\n\t\ttype: types.GET_LOGGED_IN_USER,\n\t\tuser,\n\t};\n}\n\n/**\n * Returns an action object used to get media.\n *\n * @param {Array} files The list of files.\n * @param {String} relativePath The relative path.\n * @param {Object} currentDirectory The current directory.\n * @return {Object} Object for action.\n */\nexport function getMedia( files, relativePath, currentDirectory ) {\n\treturn {\n\t\ttype: types.GET_MEDIA,\n\t\tfiles,\n\t\trelativePath,\n\t\tcurrentDirectory,\n\t};\n};\n\n/**\n * Returns an action object used to update the Upload/Directory Form state.\n *\n * @param {Object} params\n * @returns {Object} Object for action.\n */\nexport function updateFormState( params ) {\n\treturn {\n\t\ttype: types.UPDATE_FORM_STATE,\n\t\tparams,\n\t};\n}\n\n/**\n * Prepare a directory to be added to the Tree.\n *\n * @param {Object} directory The medium object.\n * @param {string} parent The parent ID.\n * @returns {Object} The item Tree.\n */\nconst setItemTree = ( directory, parent ) => {\n\tconst itemTree = {\n\t\tid: directory.id,\n\t\tslug: directory.name,\n\t\tname: directory.title,\n\t\tparent: parent,\n\t\tobject: directory.object ? directory.object : 'members',\n\t\treadonly: directory.readonly ? directory.readonly : false,\n\t\tvisibility: directory.visibility ? directory.visibility : 'public',\n\t\ttype: directory.media_type ? directory.media_type : 'folder',\n\t}\n\n\treturn itemTree;\n}\n\n/**\n * Init the directories Tree.\n *\n * @param {array} items The list of media.\n */\nexport function initTree( items ) {\n\tconst tree = select( STORE_KEY ).getTree();\n\tconst directories = filter( items, { 'mime_type': 'inode/directory' } );\n\tif ( ! tree.length ) {\n\t\tdirectories.forEach( ( item ) => {\n\t\t\tconst itemTree = setItemTree( item, 0 );\n\t\t\tdispatch( STORE_KEY ).addItemTree( itemTree );\n\t\t} );\n\t}\n}\n\n/**\n * Returns an action object used to add a directory item to the Items tree.\n *\n * @param {Object} item A media item.\n * @return {Object} Object for action.\n */\nexport function addItemTree( item ) {\n\treturn {\n\t\ttype: types.FILL_TREE,\n\t\titem,\n\t};\n};\n\n/**\n * Returns an action object used to remove a directory item from the Items tree.\n *\n * @param {string} itemId A media item ID.\n * @return {Object} Object for action.\n */\n export function removeItemTree( itemId ) {\n\treturn {\n\t\ttype: types.PURGE_TREE,\n\t\titemId,\n\t};\n};\n\n/**\n * Returns an action object used to switch between Selectable & Regular mode.\n *\n * @param {boolean} isSelectable True to switch to Selectable mode. False otherwise.\n * @returns {Object} Object for action.\n */\nexport function toggleSelectable( isSelectable ) {\n\treturn {\n\t\ttype: types.TOGGLE_SELECTABLE,\n\t\tisSelectable,\n\t};\n};\n\n/**\n * Returns an action object used to switch between Selectable & Regular mode.\n *\n * @param {array} ids The list of media ID.\n * @param {boolean} isSelected True if the media is selected. False otherwise.\n * @returns {Object} Object for action.\n */\nexport function toggleMediaSelection( ids, isSelected ) {\n\treturn {\n\t\ttype: types.TOGGLE_MEDIA_SELECTION,\n\t\tids,\n\t\tisSelected,\n\t};\n};\n\n/**\n * Returns an action object used to add a new file to the Media list.\n *\n * @param {object} file The uploaded medium.\n * @returns {Object} Object for action.\n */\nexport function addMedium( file ) {\n\treturn {\n\t\ttype: types.ADD_MEDIUM,\n\t\tfile,\n\t};\n};\n\n/**\n * Returns an action object used to add a new error.\n *\n * @param {object} error The uploaded file which errored.\n * @returns {Object} Object for action.\n */\nexport function addMediumError( error ) {\n\treturn {\n\t\ttype: types.ADD_ERROR,\n\t\terror,\n\t};\n};\n\n/**\n * Creates a Medium uploading a file.\n *\n * @param {Object} file The file object to upload.\n * @returns {Object} Object for action.\n */\nexport function * createMedium( file ) {\n\tlet uploading = true, upload;\n\tconst store = select( STORE_KEY );\n\tconst { object, item, status } = store.getDestinationData();\n\tconst relativePath = store.getRelativePath();\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\tformData.append( 'action', 'bp_attachments_media_upload' );\n\tformData.append( 'object', object );\n\tformData.append( 'object_item', item );\n\n\tif ( status ) {\n\t\tformData.append( 'status', status );\n\t}\n\n\tif ( trim( relativePath, '/' ) !== status + '/' + object + '/' + item ) {\n\t\tlet uploadRelativePath = relativePath;\n\n\t\t// Private uploads are stored out of the site's uploads dir.\n\t\tif ( 'private' === status ) {\n\t\t\tuploadRelativePath = relativePath.replace( '/private', '' );\n\t\t}\n\n\t\tformData.append( 'parent_dir', uploadRelativePath );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tupload = yield createFromAPI( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\n\t\treturn addMedium( upload );\n\t} catch ( error ) {\n\t\tupload = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t\tuploaded: false,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\n\t\treturn addMediumError( upload );\n\t}\n}\n\n/**\n * Creates a new directory, photo album, audio or video playluist.\n *\n * @todo to avoid too much code duplication, createDirectory & createMedium should probably be\n *       gathered into one function.\n *\n * @param {Object} directory The data to use create the directory\n * @returns {Object} Object for action.\n */\nexport function * createDirectory( directory ) {\n\tlet uploading = true, upload;\n\n\t// A directory is handled as a file having the inode/directory mime type.\n\tlet file = {\n\t\tname: directory.directoryName,\n\t\ttype: directory.directoryType,\n\t};\n\n\tconst store = select( STORE_KEY );\n\tconst { object, item, status } = store.getDestinationData();\n\tconst relativePath = store.getRelativePath();\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'directory_name', file.name );\n\tformData.append( 'directory_type', file.type );\n\tformData.append( 'action', 'bp_attachments_make_directory' );\n\tformData.append( 'object', object );\n\tformData.append( 'object_item', item );\n\n\tif ( status ) {\n\t\tformData.append( 'status', status );\n\t}\n\n\tif ( trim( relativePath, '/' ) !== status + '/' + object + '/' + item ) {\n\t\tlet createDirRelativePath = relativePath;\n\n\t\t// Private uploads are stored out of the site's uploads dir.\n\t\tif ( 'private' === status ) {\n\t\t\tcreateDirRelativePath = relativePath.replace( '/private', '' );\n\t\t}\n\n\t\tformData.append( 'parent_dir', createDirRelativePath );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tupload = yield createFromAPI( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\t\tupload.uploaded = true;\n\n\t\tconst currentDir = store.getCurrentDirectoryObject();\n\t\tconst itemTree = setItemTree( upload, currentDir.id );\n\n\t\t// Add the directory to the tree.\n\t\tyield addItemTree( itemTree );\n\n\t\treturn addMedium( upload );\n\t} catch ( error ) {\n\t\tupload = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t\tuploaded: false,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, file };\n\n\t\treturn addMediumError( upload );\n\t}\n}\n\n/**\n * Parses the request response and edit Media store.\n *\n * @param {Object} response The request response.\n * @param {String} relativePath The relative path of the medium.\n * @param {String} parent The parent directory.\n * @returns {void}\n */\nexport const parseResponseMedia = async ( response, relativePath, parent = '' ) => {\n\tconst items = await response.json().then( ( data ) => {\n\t\tdata.forEach( ( item ) => {\n\t\t\titem.parent = parent;\n\n\t\t\tif ( 'inode/directory' === item.mime_type ) {\n\t\t\t\tconst itemTree = setItemTree( item, parent );\n\t\t\t\tdispatch( STORE_KEY ).addItemTree( itemTree );\n\t\t\t}\n\t\t} );\n\n\t\treturn data;\n\t} );\n\n\t// Init the Tree when needed.\n\tif ( ! relativePath && ! parent ) {\n\t\tinitTree( items );\n\t}\n\n\tdispatch( STORE_KEY ).getMedia( items, relativePath, parent );\n}\n\n/**\n * Requests media according to specific arguments.\n *\n * @param {Object} args The Media request arguments.\n * @returns {void}\n */\nexport function * requestMedia( args = {} ) {\n\tconst path = '/buddypress/v1/attachments';\n\tlet relativePathHeader = '';\n\tlet parent = '';\n\n\tif ( ! args.context ) {\n\t\targs.context = select( STORE_KEY ).getRequestsContext();\n\t}\n\n\tif ( args.directory && args.path ) {\n\t\targs.directory = trimEnd( args.path, '/' ) + '/' + args.directory;\n\t}\n\n\tif ( args.parent ) {\n\t\tparent = args.parent;\n\t\tdelete args.parent;\n\t}\n\n\tdelete args.path;\n\n\tconst response = yield fetchFromAPI( addQueryArgs( path, args ), false );\n\n\tif ( hasIn( response, [ 'headers', 'get' ] ) ) {\n\t\t// If the request is fetched using the fetch api, the header can be\n\t\t// retrieved using the 'get' method.\n\t\trelativePathHeader = response.headers.get( 'X-BP-Attachments-Relative-Path' );\n\t} else {\n\t\t// If the request was preloaded server-side and is returned by the\n\t\t// preloading middleware, the header will be a simple property.\n\t\trelativePathHeader = get( response, [ 'headers', 'X-BP-Attachments-Relative-Path' ], '' );\n\t}\n\n\treturn parseResponseMedia( response, relativePathHeader, parent );\n}\n\n/**\n * Returns an action object used to remove a medium from the state.\n *\n * @param {integer} id The medium ID.\n * @returns {Object} Object for action.\n */\nexport function removeMedium( id ) {\n\treturn {\n\t\ttype: 'REMOVE_MEDIUM',\n\t\tid,\n\t}\n};\n\n/**\n * Deletes a Medium removing the file from the server's filesystem.\n *\n * @param {Object} file The file object to upload.\n * @returns {Object} Object for action.\n */\nexport function * deleteMedium( file ) {\n\tconst store = select( STORE_KEY );\n\tconst relativePath = store.getRelativePath();\n\tlet deleted;\n\n\ttry {\n\t\tdeleted = yield deleteFromAPI( '/buddypress/v1/attachments/' + file.id + '/', relativePath );\n\n\t\tif ( 'inode/directory' === deleted.previous.mime_type ) {\n\t\t\tyield removeItemTree( deleted.previous.id );\n\t\t}\n\n\t\treturn removeMedium( deleted.previous.id );\n\t} catch ( error ) {\n\t\tfile.error = error.message;\n\n\t\treturn addMediumError( file );\n\t}\n}\n\n/**\n * Returns an action object used to remove an error.\n *\n * @param {integer} errorID The error ID.\n * @returns {Object} Object for action.\n */\nexport function removeMediumError( errorID ) {\n\treturn {\n\t\ttype: types.REMOVE_ERROR,\n\t\terrorID,\n\t};\n}\n","/**\n * External dependencies.\n */\nconst {\n\tfilter,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport {\n\tfetchFromAPI,\n\tinitTree,\n\tgetLoggedInUser as getLoggedInUserAction,\n\tgetMedia as getMediaAction,\n} from './actions';\n\n/**\n * Returns the requests context.\n *\n * @access private\n * @returns {string} The requests context (view or edit).\n */\nconst _requestContext = () => {\n\tconst { isAdminScreen } = window.bpAttachmentsMediaLibrarySettings || {};\n\treturn isAdminScreen && true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Resolver for retrieving current user.\n */\nexport function* getLoggedInUser() {\n\tconst path = '/buddypress/v1/members/me?context=edit';\n\tconst user = yield fetchFromAPI( path, true );\n\tyield getLoggedInUserAction( user );\n};\n\n/**\n * Resolver for retrieving the media root directories.\n */\nexport function* getMedia() {\n\tconst path = '/buddypress/v1/attachments?context=' + _requestContext();\n\tconst files = yield fetchFromAPI( path, true );\n\n\t// Init the Directories tree.\n\tinitTree( files );\n\n\tyield getMediaAction( files, '' );\n}\n","/**\n * External dependencies.\n */\n const {\n\treject,\n} = lodash;\n\n/**\n * Internal dependencies\n */\nimport { TYPES as types } from './action-types';\n\n/**\n * Default state.\n */\nconst DEFAULT_STATE = {\n\tuser: {},\n\ttree: [],\n\tcurrentDirectory: '',\n\tfiles: [],\n\trelativePath: '',\n\tuploads: [],\n\terrors: [],\n\tuploading: false,\n\tended: false,\n\tisSelectable: false,\n\tisGrid: true,\n\tsettings: {},\n\tformState: {},\n};\n\n/**\n * Reducer for the BP Attachments Library.\n *\n * @param   {Object}  state   The current state in the store.\n * @param   {Object}  action  Action object.\n *\n * @return  {Object}          New or existing state.\n */\n const reducer = ( state = DEFAULT_STATE, action ) => {\n\tswitch ( action.type ) {\n\t\tcase types.SET_SETTINGS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsettings: action.settings,\n\t\t\t};\n\n\t\tcase types.GET_LOGGED_IN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user,\n\t\t\t};\n\n\t\tcase types.GET_MEDIA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: action.files,\n\t\t\t\trelativePath: action.relativePath,\n\t\t\t\tcurrentDirectory: action.currentDirectory,\n\t\t\t};\n\n\t\tcase types.FILL_TREE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: [\n\t\t\t\t\t...reject( state.tree, [ 'id', action.item.id ] ),\n\t\t\t\t\taction.item,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.PURGE_TREE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: reject( state.tree, [ 'id', action.itemId ] ),\n\t\t\t};\n\n\t\tcase types.UPDATE_FORM_STATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tformState: action.params,\n\t\t\t};\n\n\t\tcase types.ADD_MEDIUM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.file.id ] ),\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.UPLOAD_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploads: [\n\t\t\t\t\t...state.uploads,\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.ADD_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: [\n\t\t\t\t\t...state.errors,\n\t\t\t\t\taction.error,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.REMOVE_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: reject( state.errors, [ 'id', action.errorID ] ),\n\t\t\t};\n\n\t\tcase types.UPLOAD_END:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploads: reject( state.uploads, ( u ) => { return u.name === action.file.name; } ),\n\t\t\t\tended: true,\n\t\t\t};\n\n\t\tcase types.RESET_UPLOADS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: false,\n\t\t\t\tuploads: [],\n\t\t\t\terrors:[],\n\t\t\t\tended: false,\n\t\t\t};\n\n\t\tcase types.TOGGLE_SELECTABLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSelectable: action.isSelectable,\n\t\t\t};\n\n\t\tcase types.TOGGLE_MEDIA_SELECTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: state.files.map( file => {\n\t\t\t\t\tif ( ( 'all' === action.ids[0] && ! action.isSelected ) || ( -1 !== action.ids.indexOf( file.id ) ) ) {\n\t\t\t\t\t\tfile.selected = action.isSelected;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn file;\n\t\t\t\t} ),\n\t\t\t};\n\n\t\tcase types.SWITCH_DISPLAY_MODE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisGrid: action.isGrid,\n\t\t\t};\n\n\t\tcase types.REMOVE_MEDIUM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.id ] )\n\t\t\t\t],\n\t\t\t};\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tapiFetch,\n} = wp;\n\n/**\n * Default export for registering the controls with the store.\n *\n * @return {Object} An object with the controls to register with the store on\n *                  the controls property of the registration object.\n */\nexport const controls = {\n\tFETCH_FROM_API( { path, parse } ) {\n\t\treturn apiFetch( { path, parse } );\n\t},\n\tCREATE_FROM_API( { path, data } ) {\n\t\treturn apiFetch(\n\t\t\t{\n\t\t\t\tpath: path,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: data\n\t\t\t}\n\t\t);\n\t},\n\tDELETE_FROM_API( { path, relativePath } ) {\n\t\treturn apiFetch( { path: path, method: 'DELETE', data: {\n\t\t\trelative_path: relativePath\n\t\t} } );\n\t}\n};\n","/**\n * WordPress dependencies.\n */\n const {\n\tdata: {\n\t\tregisterStore,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { STORE_KEY } from './constants';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport reducer from './reducers';\nimport { controls } from './controls';\n\nregisterStore( STORE_KEY, {\n\treducer,\n\tactions,\n\tselectors,\n\tcontrols,\n\tresolvers,\n} );\n\nexport const BP_ATTACHMENTS_STORE_KEY = STORE_KEY;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tPopover,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Header element.\n */\nconst MediaLibraryHeader = ( { settings } ) => {\n\tconst { updateFormState } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst currentDirectoryObject = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getCurrentDirectoryObject();\n\t}, [] );\n\tconst [ isOpen, setOpen ] = useState( false );\n\tconst toggleClass = true === isOpen ? 'split-button is-open' : 'split-button';\n\tconst dashiconClass = true === isOpen ? 'dashicons dashicons-arrow-up-alt2' : 'dashicons dashicons-arrow-down-alt2';\n\tconst canUpload = true !== currentDirectoryObject.readonly;\n\tconst { allowedExtByMediaList } = settings;\n\n\tconst showUploadForm = ( e ) => {\n\t\te.preventDefault();\n\n\t\treturn updateFormState(\n\t\t\t{\n\t\t\t\tparentDirectory: currentDirectoryObject.id,\n\t\t\t\taction: 'upload',\n\t\t\t}\n\t\t);\n\t};\n\n\tconst showCreateDirForm = ( e, type ) => {\n\t\te.preventDefault();\n\n\t\treturn updateFormState(\n\t\t\t{\n\t\t\t\tparentDirectory: currentDirectoryObject.id,\n\t\t\t\taction: 'createDirectory',\n\t\t\t\tdirectoryType: type,\n\t\t\t}\n\t\t);\n\t};\n\n\tlet dirOptions = [];\n\tconst directoryTypes = [ 'album', 'audio_playlist', 'video_playlist' ];\n\n\tif ( ! currentDirectoryObject.type || -1 === directoryTypes.indexOf( currentDirectoryObject.type ) ) {\n\t\tdirOptions = [\n\t\t\t{\n\t\t\t\tid: 'folder',\n\t\t\t\ttext: __( 'Add new directory', 'bp-attachments' ),\n\t\t\t}\n\t\t];\n\n\t\tif ( allowedExtByMediaList && 'private' !== currentDirectoryObject.visibility ) {\n\t\t\tObject.keys( allowedExtByMediaList ).forEach( ( directoryType ) => {\n\t\t\t\tif ( 'album' === directoryType ) {\n\t\t\t\t\tdirOptions.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'album',\n\t\t\t\t\t\t\ttext: __( 'Add new photo album', 'bp-attachments' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else if ( 'audio_playlist' === directoryType ) {\n\t\t\t\t\tdirOptions.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'audio_playlist',\n\t\t\t\t\t\t\ttext: __( 'Add new audio playlist', 'bp-attachments' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else if ( 'video_playlist' === directoryType ) {\n\t\t\t\t\tdirOptions.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'video_playlist',\n\t\t\t\t\t\t\ttext: __( 'Add new video playlist', 'bp-attachments' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\tconst dirList = dirOptions.map( ( dirOption ) => {\n\t\treturn (\n\t\t\t<li key={ 'type-' + dirOption.id }>\n\t\t\t\t<a href=\"#new-bp-media-directory\" className=\"button-link directory-button split-button-option\" onClick={ ( e ) => showCreateDirForm( e, dirOption.id ) }>\n\t\t\t\t\t{ dirOption.text }\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t} );\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"wp-heading-inline\">\n\t\t\t\t{ __( 'Community Media Library', 'bp-attachments' ) }\n\t\t\t</h1>\n\t\t\t{ !! canUpload && (\n\t\t\t\t<div className={ toggleClass }>\n\t\t\t\t\t<div className=\"split-button-head\">\n\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button split-button-primary\" aria-live=\"polite\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t{ __( 'Add new', 'bp-attachments' ) }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<button type=\"button\" className=\"split-button-toggle\" aria-haspopup=\"true\" aria-expanded={ isOpen } onClick={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t<i className={ dashiconClass }></i>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'More actions', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t\t{ isOpen && (\n\t\t\t\t\t\t\t\t<Popover noArrow={ false } onFocusOutside={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t\t\t<ul className=\"split-button-body\">\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button-link media-button split-button-option\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ __( 'Upload media', 'bp-attachments' ) }\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t{ dirList }\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<hr className=\"wp-header-end\"></hr>\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaLibraryHeader;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tDropZone,\n\t\tFormFileUpload,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { bytesToSize } from '../utils/functions';\n\n/**\n * File Uploader element.\n */\nconst MediaLibraryUploader = ( { settings } ) => {\n\tconst { maxUploadFileSize, allowedExtTypes, allowedExtByMediaList } = settings;\n\tconst { updateFormState, createMedium } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst { formState, currentDirectoryObject } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY )\n\t\treturn {\n\t\t\tformState: store.getFormState(),\n\t\t\tcurrentDirectoryObject: store.getCurrentDirectoryObject(),\n\t\t}\n\t}, [] );\n\n\tconst resetFormState = () => {\n\t\tformState.action = '';\n\t\treturn updateFormState( formState );\n\t}\n\n\tconst closeForm = ( e ) => {\n\t\te.preventDefault();\n\t\tresetFormState();\n\t};\n\n\tconst uploadMedia = ( files ) => {\n\t\tlet media;\n\n\t\tif ( files.currentTarget && files.currentTarget.files ) {\n\t\t\tmedia = [ ...files.currentTarget.files ];\n\t\t} else {\n\t\t\tmedia = files;\n\t\t}\n\n\t\tmedia.forEach( ( medium ) => {\n\t\t\tcreateMedium( medium );\n\t\t} );\n\n\t\tresetFormState();\n\t};\n\n\tif ( ! formState.action || 'upload' !== formState.action ) {\n\t\treturn null;\n\t}\n\n\tlet allowedExts = allowedExtTypes;\n\tconst directoryTypes = [ 'album', 'audio_playlist', 'video_playlist' ];\n\n\tif ( currentDirectoryObject.type && -1 !== directoryTypes.indexOf( currentDirectoryObject.type ) ) {\n\t\tallowedExts = allowedExtByMediaList[ currentDirectoryObject.type ];\n\t}\n\n\treturn (\n\t\t<div className=\"uploader-container enabled\">\n\t\t\t<DropZone\n\t\t\t\tlabel={ __( 'Drop your files here.', 'bp-attachments' ) }\n\t\t\t\tonFilesDrop={ ( files ) => uploadMedia( files ) }\n\t\t\t\tclassName=\"uploader-inline\"\n\t\t\t/>\n\t\t\t<button className=\"close dashicons dashicons-no\" onClick={ ( e ) => closeForm( e ) }>\n\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Close the upload panel', 'bp-attachments' ) }</span>\n\t\t\t</button>\n\t\t\t<div className=\"dropzone-label\">\n\t\t\t\t<h2 className=\"upload-instructions drop-instructions\">{ __( 'Drop files to upload', 'bp-attachments' ) }</h2>\n\t\t\t\t<p className=\"upload-instructions drop-instructions\">{ __( 'or', 'bp-attachments' ) }</p>\n\t\t\t\t<FormFileUpload\n\t\t\t\t\tonChange={ ( files ) => uploadMedia( files ) }\n\t\t\t\t\tmultiple={ true }\n\t\t\t\t\taccept={ allowedExts }\n\t\t\t\t\tclassName=\"browser button button-hero\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Select Files', 'bp-attachments' ) }\n\t\t\t\t</FormFileUpload>\n\t\t\t</div>\n\t\t\t<div className=\"upload-restrictions\">\n\t\t\t\t<p>{ sprintf( __( 'Maximum upload file size: %s.', 'bp-attachments' ), bytesToSize( maxUploadFileSize ) ) }</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryUploader;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tButton,\n\t\tTextControl,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Directory Creator element.\n */\nconst MediaLibraryDirectoryCreator = () => {\n\tconst [ directoryName, setDirectoryName ] = useState( '' );\n\tconst { updateFormState, createDirectory } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst formState = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getFormState();\n\t}, [] );\n\n\tconst resetFormState = () => {\n\t\tformState.action = '';\n\t\tformState.directoryType = '';\n\t\treturn updateFormState( formState );\n\t}\n\n\tconst closeForm = ( e ) => {\n\t\te.preventDefault();\n\t\tresetFormState();\n\t};\n\n\tconst makeDirectory = ( e ) => {\n\t\te.preventDefault();\n\n\t\tconst directory = {\n\t\t\tdirectoryName: directoryName,\n\t\t\tdirectoryType: formState.directoryType,\n\t\t};\n\n\t\tcreateDirectory( directory );\n\t\tsetDirectoryName( '' );\n\t\tresetFormState();\n\t};\n\n\tif ( ! formState.action || 'createDirectory' !== formState.action ) {\n\t\treturn null;\n\t}\n\n\tlet title = __( 'Create a new directory', 'bp-attachments' );\n\tlet nameLabel = __( 'Type a name for your directory', 'bp-attachments'  );\n\tlet buttonLabel = __( 'Save directory', 'bp-attachments' );\n\n\tif ( 'album' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new photo album', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your photo album', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save photo album', 'bp-attachments' );\n\t} else if ( 'audio_playlist' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new audio playlist', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your audio playlist', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save audio playlist', 'bp-attachments' );\n\t} else if ( 'video_playlist' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new video playlist', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your video playlist', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save video playlist', 'bp-attachments' );\n\t}\n\n\treturn (\n\t\t<form id=\"bp-media-directory-form\" className=\"directory-creator-container enabled\">\n\t\t\t<button className=\"close dashicons dashicons-no\" onClick={ ( e ) => closeForm( e ) }>\n\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Close the Create directory form', 'bp-attachments' ) }</span>\n\t\t\t</button>\n\t\t\t<h2>{ title }</h2>\n\t\t\t<TextControl\n\t\t\t\tlabel={ nameLabel }\n\t\t\t\tvalue={ directoryName }\n\t\t\t\tonChange={ ( directoryName ) => setDirectoryName( directoryName ) }\n\t\t\t/>\n\t\t\t<Button variant=\"primary\" onClick={ ( e ) => makeDirectory( e ) }>\n\t\t\t\t{ buttonLabel }\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\n\nexport default MediaLibraryDirectoryCreator;\n","/**\n * External dependencies.\n */\nconst {\n\tfind,\n\treverse,\n} = lodash;\n\n/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tButton,\n\t\tTreeSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\thooks: {\n\t\tapplyFilters,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Toolbar element.\n */\nconst MediaLibraryToolbar = ( { gridDisplay, tree } ) => {\n\tconst {\n\t\tswitchDisplayMode,\n\t\trequestMedia,\n\t\ttoggleSelectable,\n\t\ttoggleMediaSelection,\n\t\tdeleteMedium,\n\t} = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\n\tconst {\n\t\tuser,\n\t\tcurrentDirectory,\n\t\tcurrentDirectoryObject,\n\t\tflatTree,\n\t\tisSelectable,\n\t\tselectedMedia,\n\t} = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY )\n\t\treturn {\n\t\t\tuser: store.getLoggedInUser(),\n\t\t\tcurrentDirectory: store.getCurrentDirectory(),\n\t\t\tcurrentDirectoryObject: store.getCurrentDirectoryObject(),\n\t\t\tflatTree: store.getFlatTree(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t\tselectedMedia: store.selectedMedia(),\n\t\t}\n\t}, [] );\n\tconst [ page, setPage ] = useState( currentDirectory );\n\tconst canSelect = true !== currentDirectoryObject.readonly;\n\tconst hasSelectedMedia = isSelectable && selectedMedia.length !== 0;\n\n\tif ( currentDirectory !== page ) {\n\t\tsetPage( currentDirectory );\n\t}\n\n\tconst switchMode = ( e, isGrid ) => {\n\t\te.preventDefault();\n\t\tswitchDisplayMode( isGrid );\n\t};\n\n\tconst changeDirectory = ( directory ) => {\n\t\tsetPage( directory );\n\n\t\tconst directoryItem = find( flatTree, { id: directory } );\n\t\tlet args = {};\n\n\t\tif ( directoryItem ) {\n\t\t\targs.directory = directoryItem.slug;\n\t\t\targs.parent = directoryItem.id;\n\n\t\t\tif ( directoryItem.parent && directoryItem.object ) {\n\t\t\t\tlet chunks = reverse( getDirectoryAncestors(\n\t\t\t\t\tflatTree,\n\t\t\t\t\tdirectoryItem.parent\n\t\t\t\t).map( ( parent ) => parent.slug ) );\n\n\t\t\t\tif ( 'members' === directoryItem.object ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * In a future release, when Groups will be supported. The root directories will be:\n\t\t\t\t\t * - My Groups Media,\n\t\t\t\t\t * - My Media.\n\t\t\t\t\t *\n\t\t\t\t\t * The \"My Media\" ID is 'member'. We need to remove this from chunks as files are stored in\n\t\t\t\t\t * `/uploads/buddypress/public/members/{userID}` or `../buddypress-private/members/{userID}`.\n\t\t\t\t\t */\n\t\t\t\t\tconst memberIndex = chunks.indexOf( 'member' );\n\t\t\t\t\tif ( -1 !== memberIndex ) {\n\t\t\t\t\t\tchunks.splice( memberIndex, 1 );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( chunks.length ) {\n\t\t\t\t\t\tchunks.splice( 1, 0, directoryItem.object, user.id );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Use this filter to customize the pathArray for other components (eg: groups).\n\t\t\t\t\tchunks = applyFilters(\n\t\t\t\t\t\t'buddypress.Attachments.toolbarTreeSelect.pathArray',\n\t\t\t\t\t\tchunks,\n\t\t\t\t\t\tdirectoryItem,\n\t\t\t\t\t\tuser.id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\targs.path = '/' + chunks.join( '/' );\n\t\t\t}\n\n\t\t\tif ( directoryItem.object ) {\n\t\t\t\targs.object = directoryItem.object;\n\t\t\t}\n\t\t}\n\n\t\treturn requestMedia( args );\n\t};\n\n\tconst onToggleSectable = ( event ) => {\n\t\tevent.preventDefault();\n\t\tconst toggle = ! isSelectable;\n\n\t\tif ( ! toggle ) {\n\t\t\ttoggleMediaSelection( ['all'], toggle );\n\t\t}\n\n\t\treturn toggleSelectable( toggle );\n\t};\n\n\tconst onDeleteSelected = ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tselectedMedia.forEach( medium => {\n\t\t\tdeleteMedium( medium );\n\t\t} );\n\n\t\treturn toggleSelectable( false );\n\t}\n\n\treturn (\n\t\t<div className=\"media-toolbar wp-filter\">\n\t\t\t<div className=\"media-toolbar-secondary\">\n\t\t\t\t{ ! isSelectable && (\n\t\t\t\t\t<div className=\"view-switch media-grid-view-switch\">\n\t\t\t\t\t\t<a href=\"#view-list\" onClick={ ( e ) => switchMode( e, false ) } className={ gridDisplay ? 'view-list' : 'view-list current' }>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display list', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"#view-grid\" onClick={ ( e ) => switchMode( e, true ) } className={ gridDisplay ? 'view-grid current' : 'view-grid' }>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display grid', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ canSelect && (\n\t\t\t\t\t<Button variant=\"secondary\" className=\"media-button select-mode-toggle-button\" onClick={ ( e ) => onToggleSectable( e ) }>\n\t\t\t\t\t\t{ ! isSelectable ? __( 'Select', 'bp-attachments' ) : __( 'Cancel Selection', 'bp-attachments' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\t{ canSelect && hasSelectedMedia && (\n\t\t\t\t\t<Button variant=\"primary\" className=\"media-button delete-selected-button\" onClick={ ( e ) => onDeleteSelected( e ) }>\n\t\t\t\t\t\t{ __( 'Delete selection', 'bp-attachments' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t{ !! tree.length && (\n\t\t\t\t<div className=\"media-toolbar-primary\">\n\t\t\t\t\t<TreeSelect\n\t\t\t\t\t\tnoOptionLabel={ __( 'Home', 'bp-attachments' ) }\n\t\t\t\t\t\tonChange={ ( directory ) => changeDirectory( directory ) }\n\t\t\t\t\t\tselectedId={ page }\n\t\t\t\t\t\ttree={ tree }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryToolbar;\n","/**\n * External dependencies\n */\nconst { template } = lodash;\n\nfunction setTemplate( tmpl ) {\n\tconst options = {\n\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\tvariable:    'data'\n\t};\n\n\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n}\n\nexport default setTemplate;\n","/**\n * WordPress dependencies\n */\n const {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\tcomponents: {\n\t\tModal,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport setTemplate from '../utils/set-template';\n\nconst MediaItem = ( props ) => {\n\tconst Template = setTemplate( 'bp-attachments-media-item' );\n\tconst { title, vignette, selected } = props;\n\tconst { toggleMediaSelection, requestMedia } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst [ isOpen, toggleModal ] = useState( false );\n\tconst [ isSelected, selectMedia ] = useState( selected );\n\tconst { getRelativePath, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\tgetRelativePath: store.getRelativePath(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t};\n\t}, [] );\n\n\tif ( ! isSelectable && ! selected && isSelected ) {\n\t\tselectMedia( false );\n\t}\n\n\tconst classes = isSelected ? 'media-item selected' : 'media-item';\n\tconst onMediaClick = () => {\n\t\tconst { mimeType, name, isSelectable, id, object } = props;\n\n\t\tif ( isSelectable ) {\n\t\t\tselectMedia( ! isSelected );\n\t\t\treturn toggleMediaSelection( [ id ], ! isSelected );\n\t\t}\n\n\t\tif ( 'inode/directory' === mimeType ) {\n\t\t\treturn requestMedia( { directory: name, path: getRelativePath, object: object, parent: id } );\n\t\t}\n\n\t\ttoggleModal( true );\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div\n\t\t\t\tclassName={ classes }\n\t\t\t\tdangerouslySetInnerHTML={ { __html: Template( props ) } }\n\t\t\t\trole=\"checkbox\"\n\t\t\t\tonClick={ () => onMediaClick() }\n\t\t\t/>\n\t\t\t{ isOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ sprintf( __( 'Details for: %s', 'bp-attachments' ), title ) }\n\t\t\t\t\tonRequestClose={ () => toggleModal( false ) }\n\t\t\t\t>\n\n\t\t\t\t\t{ vignette && (\n\t\t\t\t\t\t<img src={vignette} className=\"mediaDetails\" />\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ ! vignette && (\n\t\t\t\t\t\t<p>{ __( '@todo Fetch the Media properties.', 'bp-attachments' ) }</p>\n\t\t\t\t\t) }\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaItem;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tAnimate,\n\t\tDashicon,\n\t\tNotice,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Notices element.\n */\nconst MediaLibraryNotices = () => {\n\tconst { uploads, errors } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\tuploads: store.getUploads(),\n\t\t\terrors: store.getErrors(),\n\t\t};\n\t}, [] );\n\tconst { removeMediumError } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst onRemoveError = ( errorID ) => {\n\t\treturn removeMediumError( errorID );\n\t};\n\n\tlet errorNotices = [];\n\n\tif ( errors && errors.length ) {\n\t\terrorNotices = errors.map( ( error ) => {\n\t\t\treturn (\n\t\t\t\t<Notice\n\t\t\t\t\tkey={ 'error-' + error.id }\n\t\t\t\t\tstatus=\"error\"\n\t\t\t\t\tonRemove={ () => onRemoveError( error.id ) }\n\t\t\t\t\tisDismissible={ true }\n\t\t\t\t>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Dashicon icon=\"warning\" />\n\t\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t\t/* translators: 1: file name. 2: error message. */\n\t\t\t\t\t\t\t__( '« %1$s » wasn‘t added to the media library. %2$s', 'bp-attachments' ),\n\t\t\t\t\t\t\terror.name,\n\t\t\t\t\t\t\terror.error\n\t\t\t\t\t\t) }\n\t\t\t\t\t</p>\n\t\t\t\t</Notice>\n\t\t\t);\n\t\t} );\n\t}\n\n\tlet loadingNotice = null;\n\tconst numberUploads = uploads && uploads.length ? uploads.length : 0;\n\n\tif ( !! numberUploads ) {\n\t\t// Looks like WP CLI can't find _n() usage.\n\t\tlet uploadingMedia = __( 'Uploading the media, please wait.', 'bp-attachments' );\n\t\tif ( numberUploads > 1 ) {\n\t\t\t/* translators: %d: number of media being uploaded. */\n\t\t\tuploadingMedia = sprintf( __( 'Uploading %d media, please wait.', 'bp-attachments' ), numberUploads );\n\t\t}\n\n\t\tloadingNotice = (\n\t\t\t<div className=\"chargement-de-documents\">\n\t\t\t\t<Animate\n\t\t\t\t\ttype=\"loading\"\n\t\t\t\t>\n\t\t\t\t\t{ ( { className } ) => (\n\t\t\t\t\t\t<Notice\n\t\t\t\t\t\t\tstatus=\"warning\"\n\t\t\t\t\t\t\tisDismissible={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className={ className }>\n\t\t\t\t\t\t\t\t<Dashicon icon=\"update\" />\n\t\t\t\t\t\t\t\t{ uploadingMedia }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Notice>\n\t\t\t\t\t) }\n\t\t\t\t</Animate>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"bp-attachments-notices\">\n\t\t\t{ loadingNotice }\n\t\t\t{ errorNotices }\n\t\t</div>\n\t);\n}\n\nexport default MediaLibraryNotices;\n","/**\n * WordPress dependencies\n */\nconst {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport MediaItem from './item';\nimport MediaLibraryNotices from './notices';\n\n/**\n * Main element.\n */\nconst MediaLibraryMain = ( { gridDisplay, tree } ) => {\n\tconst { items, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\titems: store.getMedia(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t};\n\t}, [] );\n\n\tlet mediaItems = null;\n\tif ( items.length ) {\n\t\tmediaItems = items.map( ( item ) => {\n\t\t\treturn (\n\t\t\t\t<MediaItem\n\t\t\t\t\tkey={ 'media-item-' + item.id }\n\t\t\t\t\tid={ item.id }\n\t\t\t\t\tname={ item.name }\n\t\t\t\t\ttitle={ item.title }\n\t\t\t\t\tmediaType={ item.media_type }\n\t\t\t\t\tmimeType={ item.mime_type }\n\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\tvignette={ item.vignette }\n\t\t\t\t\torientation={ item.orientation }\n\t\t\t\t\tisSelected= { item.selected || false }\n\t\t\t\t\tobject= { item.object || 'members' }\n\t\t\t\t\tisSelectable = { isSelectable }\n\t\t\t\t\ttree = { tree }\n\t\t\t\t/>\n\t\t\t);\n\t\t} );\n\t}\n\n\treturn (\n\t\t<main className=\"bp-user-media\">\n\t\t\t<MediaLibraryNotices />\n\t\t\t<div className={ isSelectable ? 'media-items mode-select' : 'media-items' }>\n\t\t\t\t{ mediaItems }\n\t\t\t\t{ ! items.length && (\n\t\t\t\t\t<p className=\"no-media\">{ __( 'No community media items found.', 'bp-attachments' ) }</p>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default MediaLibraryMain;\n","/**\n * WordPress dependencies\n */\nconst {\n\tdomReady,\n\telement: {\n\t\tcreateElement,\n\t\trender,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from './store';\nimport MediaLibraryHeader from './elements/header';\nimport MediaLibraryUploader from './elements/uploader';\nimport MediaLibraryDirectoryCreator from './elements/directory-creator';\nimport MediaLibraryToolbar from './elements/toolbar';\nimport MediaLibraryMain from './elements/main';\n\nconst MediaLibrary = ( { settings } ) => {\n\tconst { isGrid, globalSettings, tree } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\t\treturn {\n\t\t\tisGrid: store.isGridDisplayMode(),\n\t\t\tglobalSettings: store.getSettings(),\n\t\t\ttree: store.getTree(),\n\t\t};\n\t}, [] );\n\n\tif ( ! Object.keys( globalSettings ).length ) {\n\t\tconst { setSettings } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\t\tsetSettings( settings );\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MediaLibraryHeader settings={ globalSettings } />\n\t\t\t<MediaLibraryUploader settings={ globalSettings } />\n\t\t\t<MediaLibraryDirectoryCreator />\n\t\t\t<MediaLibraryToolbar gridDisplay={ isGrid } tree={ tree } />\n\t\t\t<MediaLibraryMain gridDisplay={ isGrid } tree={ tree } />\n\t\t</Fragment>\n\t);\n};\n\ndomReady( function() {\n\tconst settings = window.bpAttachmentsMediaLibrarySettings || {};\n\trender( <MediaLibrary settings={ settings }/>, document.querySelector( '#bp-media-library' ) );\n} );\n"],"names":["STORE_KEY","i18n","__","wp","filter","lodash","getDirectoryAncestors","tree","parentId","parents","id","forEach","parent","grandParents","bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","toFixed","trim","groupBy","indexOf","find","defaultTo","getSettings","state","settings","getRequestsContext","isAdminScreen","isGridDisplayMode","isGrid","getLoggedInUser","user","getFormState","formState","isUploading","uploading","uploadEnded","ended","getUploads","uploads","getErrors","errors","getMedia","files","getCurrentDirectory","currentDirectory","getCurrentDirectoryObject","defaultValue","readonly","getTree","groupedTree","currentChildrenIds","map","child","length","childId","currentAncestors","ancestor","Object","keys","treeIndex","fillWithChildren","items","item","children","getFlatTree","isSelectable","selectedMedia","getRelativePath","relativePath","getDestinationData","object","destinationData","split","status","TYPES","SET_SETTINGS","GET_LOGGED_IN_USER","GET_MEDIA","ADD_MEDIUM","FILL_TREE","PURGE_TREE","REMOVE_MEDIUM","FETCH_FROM_API","CREATE_FROM_API","DELETE_FROM_API","UPLOAD_START","UPLOAD_END","RESET_UPLOADS","ADD_ERROR","REMOVE_ERROR","TOGGLE_SELECTABLE","TOGGLE_MEDIA_SELECTION","SWITCH_DISPLAY_MODE","UPDATE_FORM_STATE","uniqueId","hasIn","trimEnd","data","dispatch","select","url","addQueryArgs","setSettings","type","types","fetchFromAPI","path","parse","createFromAPI","deleteFromAPI","switchDisplayMode","updateFormState","params","setItemTree","directory","slug","name","title","visibility","media_type","initTree","directories","mime_type","itemTree","addItemTree","removeItemTree","itemId","toggleSelectable","toggleMediaSelection","ids","isSelected","addMedium","file","addMediumError","error","createMedium","upload","store","formData","FormData","append","uploadRelativePath","replace","message","uploaded","createDirectory","directoryName","directoryType","createDirRelativePath","currentDir","parseResponseMedia","async","response","arguments","undefined","json","then","requestMedia","args","relativePathHeader","context","headers","get","removeMedium","deleteMedium","deleted","previous","removeMediumError","errorID","getLoggedInUserAction","window","bpAttachmentsMediaLibrarySettings","_requestContext","getMediaAction","reject","DEFAULT_STATE","$101f7048d1a3a5c4$export$2e2bcd8739ae039","action","u","selected","apiFetch","controls","_ref","_ref2","method","body","_ref3","relative_path","registerStore","reducer","actions","selectors","resolvers","BP_ATTACHMENTS_STORE_KEY","components","Popover","useDispatch","useSelect","element","createElement","Fragment","useState","$fcd8ebc78e2f45bd$export$2e2bcd8739ae039","currentDirectoryObject","isOpen","setOpen","toggleClass","dashiconClass","canUpload","allowedExtByMediaList","showUploadForm","e","preventDefault","parentDirectory","dirOptions","text","push","dirList","dirOption","$fcd8ebc78e2f45bd$var$createElement","key","href","className","onClick","showCreateDirForm","$fcd8ebc78e2f45bd$var$Fragment","$fcd8ebc78e2f45bd$var$Popover","noArrow","onFocusOutside","DropZone","FormFileUpload","sprintf","$9677e9ae62a97894$export$2e2bcd8739ae039","maxUploadFileSize","allowedExtTypes","resetFormState","uploadMedia","media","currentTarget","medium","allowedExts","$9677e9ae62a97894$var$createElement","$9677e9ae62a97894$var$DropZone","label","onFilesDrop","closeForm","$9677e9ae62a97894$var$FormFileUpload","onChange","multiple","accept","Button","TextControl","$bdff20d4da09a7d7$export$2e2bcd8739ae039","setDirectoryName","nameLabel","buttonLabel","$bdff20d4da09a7d7$var$createElement","$bdff20d4da09a7d7$var$TextControl","value","$bdff20d4da09a7d7$var$Button","variant","makeDirectory","reverse","TreeSelect","hooks","applyFilters","$b3153ca487c736b9$export$2e2bcd8739ae039","gridDisplay","flatTree","page","setPage","canSelect","hasSelectedMedia","switchMode","$b3153ca487c736b9$var$createElement","$b3153ca487c736b9$var$Button","event","toggle","onToggleSectable","$b3153ca487c736b9$var$TreeSelect","noOptionLabel","directoryItem","chunks","memberIndex","splice","join","changeDirectory","selectedId","template","Modal","$25915412e7fc4248$export$2e2bcd8739ae039","props","Template","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","vignette","toggleModal","selectMedia","$25915412e7fc4248$var$createElement","$25915412e7fc4248$var$Fragment","dangerouslySetInnerHTML","__html","role","mimeType","onMediaClick","$25915412e7fc4248$var$Modal","onRequestClose","src","Animate","Dashicon","Notice","$bae870346126130f$export$2e2bcd8739ae039","errorNotices","$bae870346126130f$var$createElement","$bae870346126130f$var$Notice","onRemove","onRemoveError","isDismissible","$bae870346126130f$var$Dashicon","icon","loadingNotice","numberUploads","uploadingMedia","$bae870346126130f$var$Animate","$1e56901890e67653$export$2e2bcd8739ae039","mediaItems","$1e56901890e67653$var$createElement","mediaType","orientation","domReady","render","MediaLibrary","globalSettings","$85929bbc1a3f4ac8$var$createElement","$85929bbc1a3f4ac8$var$Fragment","$85929bbc1a3f4ac8$var$MediaLibrary"],"version":3,"file":"index.js.map"}