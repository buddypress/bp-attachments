{"mappings":"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","sources":["src/media-library/store/constants.js","src/media-library/utils/functions.js","src/media-library/store/selectors.js","src/media-library/store/action-types.js","src/media-library/store/actions.js","src/media-library/store/resolvers.js","src/media-library/store/reducers.js","src/media-library/store/controls.js","src/media-library/store/index.js","src/media-library/elements/header.js","src/media-library/elements/uploader.js","src/media-library/elements/toolbar.js","src/media-library/utils/set-template.js","src/media-library/elements/item.js","src/media-library/elements/main.js","src/media-library/index.js"],"sourcesContent":["/**\n * Identifier key for this store reducer.\n *\n * @type {string}\n */\n export const STORE_KEY = 'bp/attachments';\n","/**\n * WordPress dependencies\n */\nconst {\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * External dependencies\n */\nconst { filter } = lodash;\n\nexport const getDirectoryAncestors = ( tree, parentId ) => {\n\tlet parents = filter( tree, { id: parentId } );\n\n\tparents.forEach( ( parent ) => {\n\t\tconst grandParents = getDirectoryAncestors( tree, parent.parent );\n\t\tparents = [ ...parents, ...grandParents ];\n\t} );\n\n\treturn parents;\n}\n\nexport const bytesToSize = ( bytes ) => {\n\tconst sizes = [\n\t\t__( 'Bytes', 'bp-attachments' ),\n\t\t__( 'KB', 'bp-attachments' ),\n\t\t__( 'MB', 'bp-attachments' ),\n\t\t__( 'GB', 'bp-attachments' ),\n\t\t__( 'TB', 'bp-attachments' ),\n\t];\n\n\tif ( bytes === 0 ) {\n\t\treturn '0 ' + sizes[0];\n\t}\n\n\tconst i = parseInt( Math.floor( Math.log( bytes ) / Math.log( 1024 ) ), 10 );\n\n\tif ( i === 0 ) {\n\t\treturn `${bytes} ${sizes[i]}`;\n\t}\n\n\treturn `${ ( bytes / ( 1024 ** i ) ).toFixed( 1 ) } ${ sizes[ i ] }`;\n}\n","/**\n * External dependencies.\n */\nconst {\n\ttrim,\n\tgroupBy,\n\tfilter,\n\tindexOf,\n\tfind,\n\tdefaultTo,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Returns the Community Media Library settings.\n *\n * @param {Object} state\n * @returns {Object} The Community Media Library settings.\n */\nexport const getSettings = ( state ) => {\n\tconst { settings } = state;\n\treturn settings;\n}\n\n/**\n * Returns the requests context.\n *\n * @param {Object} state\n * @returns {string} The requests context (`edit` or `view`).\n */\nexport const getRequestsContext = ( state ) => {\n\tconst {\n\t\tsettings: {\n\t\t\tisAdminScreen,\n\t\t}\n\t} = state;\n\n\treturn true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const isGridDisplayMode = ( state ) => {\n\tconst { isGrid } = state;\n\treturn isGrid;\n}\n\n/**\n * Returns the logged in user Object.\n *\n * @param {Object} state The current state.\n * @return {Object} The logged in user Object.\n */\nexport const getLoggedInUser = ( state ) => {\n\tconst { user } = state;\n\treturn user;\n};\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const getFormState = ( state ) => {\n\tconst { formState } = state;\n\treturn formState;\n}\n\n/**\n * Returns whether an upload is being processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads is being processed. False otherwise.\n */\nexport const isUploading = ( state ) => {\n\tconst { uploading } = state;\n\treturn uploading;\n};\n\n/**\n * Returns whether an upload has been processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads has been processed. False otherwise.\n */\n export const uploadEnded = ( state ) => {\n\tconst { ended } = state;\n\treturn ended;\n};\n\n/**\n * Returns the list of uploaded file Objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of uploaded file Objects.\n */\nexport const getUploadedFiles = ( state ) => {\n\tconst { uploaded } = state;\n\treturn uploaded;\n};\n\n/**\n * Returns the list of errored file Objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of errored file Objects.\n */\nexport const getErroredFiles = ( state ) => {\n\tconst { errored } = state;\n\treturn errored;\n};\n\n/**\n * Returns the list community media objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of community media objects.\n */\nexport const getMedia = ( state ) => {\n\tconst { files } = state;\n\treturn files;\n};\n\n/**\n * Returns the current directory.\n *\n * @param {Object} state The current state.\n * @return {string} The current directory.\n */\nexport const getCurrentDirectory = ( state ) => {\n\tconst { currentDirectory } = state;\n\treturn currentDirectory || '';\n};\n\n/**\n * Returns the current directory object.\n *\n * @param {Object} state The current state.\n * @return {Object} The current directory object.\n */\n export const getCurrentDirectoryObject = ( state ) => {\n\tconst { currentDirectory, tree } = state;\n\tconst defaultValue = { readonly: true };\n\n\tif ( '' !== currentDirectory ) {\n\t\treturn defaultTo(\n\t\t\tfind( tree, { id: currentDirectory } ),\n\t\t\tdefaultValue\n\t\t);\n\t}\n\n\treturn defaultValue;\n};\n\n/**\n * Returns the directories Tree.\n *\n * @param {Object} state The current state.\n * @return {array} The directories Tree.\n */\n export const getTree = ( state ) => {\n\tconst { tree, currentDirectory } = state;\n\tconst groupedTree = groupBy( tree, 'parent' );\n\tconst currentChildrenIds = filter( tree, { 'parent': currentDirectory || 0 } ).map( ( child ) => child.id );\n\n\t// Makes sure to only list current directory children.\n\tif ( currentChildrenIds && currentChildrenIds.length ) {\n\t\tcurrentChildrenIds.forEach( ( childId ) => {\n\t\t\tif ( groupedTree[ childId ] ) {\n\t\t\t\tdelete groupedTree[ childId ];\n\t\t\t}\n\t\t} );\n\t}\n\n\t// Makes sure to avoid listing children of directories that are not an ancestor of the currentDirectory one.\n\tif ( currentDirectory ) {\n\t\tconst currentAncestors = getDirectoryAncestors(\n\t\t\ttree,\n\t\t\tcurrentDirectory\n\t\t).map( ( ancestor ) => ancestor.id );\n\n\t\tObject.keys( groupedTree ).forEach( ( treeIndex ) => {\n\t\t\tif ( 0 !== parseInt( treeIndex, 10 ) && -1 === indexOf( currentAncestors, treeIndex ) ) {\n\t\t\t\tdelete groupedTree[ treeIndex ];\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst fillWithChildren = ( items ) => {\n\t\treturn items.map( ( item ) => {\n\t\t\tconst children = groupedTree[ item.id ];\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tchildren: children && children.length ?\n\t\t\t\t\tfillWithChildren( children ) :\n\t\t\t\t\t[],\n\t\t\t};\n\t\t} );\n\t};\n\n\treturn fillWithChildren( groupedTree[0] || [] );\n};\n\n/**\n * Returns the directory flat list.\n *\n * @param {Object} state The current state.\n * @return {array} The directory flat list.\n */\n export const getFlatTree = ( state ) => {\n\tconst { tree } = state;\n\treturn tree || [];\n};\n\n/**\n * Returns whether a media/directory item is selectable.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if a media/directory item is selectable. False otherwise.\n */\nexport const isSelectable = ( state ) => {\n\tconst { isSelectable } = state;\n\treturn isSelectable;\n};\n\n/**\n * Returns the current relative path.\n *\n * @param {Object} state The current state.\n * @return {string} The current relative path.\n */\nexport const getRelativePath = ( state ) => {\n\tconst { relativePath } = state;\n\treturn relativePath;\n};\n\n/**\n * Returns the destination data for a medium.\n *\n * @param {Object} state The current state.\n * @return {Object} The destination data for a medium.\n */\nexport const getMediumDestinationData = ( state ) => {\n\tconst { relativePath } = state;\n\n\tif ( ! relativePath ) {\n\t\treturn {\n\t\t\tobject: 'members',\n\t\t}\n\t}\n\n\tconst destinationData = trim( relativePath, '/' ).split( '/' );\n\n\treturn {\n\t\tstatus: destinationData[0] ? destinationData[0] : 'private',\n\t\tobject: 'groups' === destinationData[1] ? 'groups' : 'members',\n\t\titem: destinationData[2] ? destinationData[2] : '',\n\t}\n};\n","export const TYPES = {\n\tSET_SETTINGS: 'SET_SETTINGS',\n\tGET_LOGGED_IN_USER: 'GET_LOGGED_IN_USER',\n\tGET_MEDIA: 'GET_MEDIA',\n\tADD_MEDIA: 'ADD_MEDIA',\n\tFILL_TREE: 'FILL_TREE',\n\tDESTROY_MEDIUM: 'DESTROY_MEDIUM',\n\tFETCH_FROM_API: 'FETCH_FROM_API',\n\tCREATE_FROM_API: 'CREATE_FROM_API',\n\tDELETE_FROM_API: 'DELETE_FROM_API',\n\tUPLOAD_START: 'UPLOAD_START',\n\tUPLOAD_END: 'UPLOAD_END',\n\tRESET_UPLOADS: 'RESET_UPLOADS',\n\tADD_ERROR: 'ADD_ERROR',\n\tTOGGLE_SELECTABLE: 'TOGGLE_SELECTABLE',\n\tTOGGLE_MEDIA_SELECTION: 'TOGGLE_MEDIA_SELECTION',\n\tSWITCH_DISPLAY_MODE: 'SWITCH_DISPLAY_MODE',\n\tUPDATE_FORM_STATE: 'UPDATE_FORM_STATE',\n};\n","/**\n * External dependencies.\n */\n const {\n\tuniqueId,\n\thasIn,\n\ttrim,\n\ttrimEnd,\n\tfilter,\n} = lodash;\n\n/**\n * WordPress dependencies.\n */\nconst {\n\tdata: {\n\t\tdispatch,\n\t\tselect,\n\t},\n\turl: {\n\t\taddQueryArgs,\n\t}\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { TYPES as types } from './action-types';\nimport { STORE_KEY } from './constants';\n\n/**\n * Returns an action to set the BP attachments Media Library settings.\n *\n * @param {Object} settings The settings to use.\n * @return {Object} Object for action.\n */\nexport function setSettings( settings ) {\n\treturn {\n\t\ttype: types.SET_SETTINGS,\n\t\tsettings,\n\t};\n}\n\n/**\n * Returns an action object used to fetch media from the API.\n *\n * @param {string} path Endpoint path.\n * @param {boolean} parse Should we parse the request.\n * @return {Object} Object for action.\n */\nexport function fetchFromAPI( path, parse ) {\n\treturn {\n\t\ttype: types.FETCH_FROM_API,\n\t\tpath,\n\t\tparse,\n\t};\n}\n\n/**\n * Returns an action object used to create a medium via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function createFromAPI( path, data ) {\n\treturn {\n\t\ttype: types.CREATE_FROM_API,\n\t\tpath,\n\t\tdata,\n\t};\n}\n\n/**\n * Returns an action object used to delete a medium via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function deleteFromAPI( path, relativePath ) {\n\treturn {\n\t\ttype: types.DELETE_FROM_API,\n\t\tpath,\n\t\trelativePath,\n\t};\n}\n\n/**\n * Returns an action object used to switch between Grid & Liste mode.\n *\n * @param {Boolean} isGrid\n * @returns {Object} Object for action.\n */\nexport function switchDisplayMode( isGrid ) {\n\treturn {\n\t\ttype: types.SWITCH_DISPLAY_MODE,\n\t\tisGrid,\n\t};\n}\n\n/**\n * Returns an action object used to get the logged in user.\n *\n * @param {Object} user Logged In User object.\n * @return {Object} Object for action.\n */\nexport function getLoggedInUser( user ) {\n\treturn {\n\t\ttype: types.GET_LOGGED_IN_USER,\n\t\tuser,\n\t};\n}\n\n/**\n * Returns an action object used to get media.\n *\n * @param {Array} files The list of files.\n * @param {String} relativePath The relative path.\n * @return {Object} Object for action.\n */\nexport function getMedia( files, relativePath, currentDirectory ) {\n\treturn {\n\t\ttype: 'GET_MEDIA',\n\t\tfiles,\n\t\trelativePath,\n\t\tcurrentDirectory,\n\t};\n};\n\n/**\n * Returns an action object used to update the Upload/Directory Form state.\n *\n * @param {Object} params\n * @returns {Object} Object for action.\n */\nexport function updateFormState( params ) {\n\treturn {\n\t\ttype: types.UPDATE_FORM_STATE,\n\t\tparams,\n\t};\n}\n\nexport function createMedium( path, formData ) {\n\treturn {\n\t\ttype: 'CREATE_FROM_API',\n\t\tpath,\n\t\tformData,\n\t};\n};\n\nexport function addMedia( file ) {\n\treturn {\n\t\ttype: 'ADD_MEDIA',\n\t\tfile,\n\t};\n};\n\n/**\n * Init the directories Tree.\n *\n * @param {array} items The list of media.\n */\nexport function initTree( items ) {\n\tconst tree = select( STORE_KEY ).getTree();\n\tconst directories = filter( items, { 'mime_type': 'inode/directory' } );\n\tif ( ! tree.length ) {\n\t\tdirectories.forEach( ( item ) => {\n\t\t\tdispatch( STORE_KEY ).addItemTree( {\n\t\t\t\tid: item.id,\n\t\t\t\tslug: item.name,\n\t\t\t\tname: item.title,\n\t\t\t\tparent: 0,\n\t\t\t\tobject: item.object ? item.object : 'members',\n\t\t\t\treadonly: item.readonly ? item.readonly : false,\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n/**\n * Returns an action object used to add a directory item to the Items tree.\n *\n * @param {Object} item A media item.\n * @return {Object} Object for action.\n */\nexport function addItemTree( item ) {\n\treturn {\n\t\ttype: 'FILL_TREE',\n\t\titem,\n\t};\n};\n\nexport function deleteMedium( path, relativePath ) {\n\treturn {\n\t\ttype: 'DELETE_FROM_API',\n\t\tpath,\n\t\trelativePath,\n\t};\n};\n\nexport function addMediaError( file ) {\n\treturn {\n\t\ttype: 'ADD_ERROR',\n\t\tfile,\n\t};\n};\n\nexport function toggleSelectable( isSelectable ) {\n\treturn {\n\t\ttype: 'TOGGLE_SELECTABLE',\n\t\tisSelectable,\n\t};\n};\n\nexport function toggleMediaSelection( id, isSelected ) {\n\treturn {\n\t\ttype: 'TOGGLE_MEDIA_SELECTION',\n\t\tid,\n\t\tisSelected,\n\t};\n};\n\nexport function * insertMedium( file ) {\n\tlet uploading = true, uploaded;\n\tconst currentState = select( STORE_KEY ).getState();\n\tconst { object, item, status } = getMediumDestinationData( currentState );\n\tconst parentDir = currentState.relativePath;\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\tformData.append( 'action', 'bp_attachments_media_upload' );\n\n\tif ( 'groups' === object ) {\n\t\tformData.append( 'object', object );\n\t\tformData.append( 'object_slug', item );\n\t} else {\n\t\tformData.append( 'object_id', item );\n\t}\n\n\tif ( status ) {\n\t\tformData.append( 'status', status );\n\t}\n\n\tif ( trim( parentDir, '/' ) !== status + '/' + object + '/' + item ) {\n\t\tformData.append( 'parent_dir', parentDir );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tuploaded = yield createMedium( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, uploaded };\n\t\tuploaded.uploaded = true;\n\n\t\treturn addMedia( uploaded );\n\t} catch ( error ) {\n\t\tuploaded = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, uploaded };\n\n\t\treturn addMediaError( uploaded );\n\t}\n}\n\nexport function * createDirectory( directory ) {\n\tlet uploading = true, uploaded, file = {\n\t\tname: directory.directoryName,\n\t\ttype: directory.directoryType,\n\t};\n\tconst currentState = select( STORE_KEY ).getState();\n\tconst { object, item, status } = getMediumDestinationData( currentState );\n\tconst parentDir = currentState.relativePath;\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'directory_name', file.name );\n\tformData.append( 'directory_type', file.type );\n\tformData.append( 'action', 'bp_attachments_make_directory' );\n\n\tif ( 'groups' === object ) {\n\t\tformData.append( 'object', object );\n\t\tformData.append( 'object_slug', item );\n\t} else {\n\t\tformData.append( 'object_id', item );\n\t}\n\n\tif ( status ) {\n\t\tformData.append( 'status', status );\n\t}\n\n\tif ( trim( parentDir, '/' ) !== status + '/' + object + '/' + item ) {\n\t\tformData.append( 'parent_dir', parentDir );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tuploaded = yield createMedium( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, uploaded };\n\t\tuploaded.uploaded = true;\n\n\t\treturn addMedia( uploaded );\n\t} catch ( error ) {\n\t\tuploaded = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, uploaded };\n\n\t\treturn addMediaError( uploaded );\n\t}\n}\n\nexport const parseResponseMedia = async ( response, relativePath, parent = '' ) => {\n\tconst items = await response.json().then( ( data ) => {\n\t\tdata.forEach( ( item ) => {\n\t\t\titem.parent = parent;\n\n\t\t\tif ( 'inode/directory' === item.mime_type ) {\n\t\t\t\tdispatch( STORE_KEY ).addItemTree( {\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tslug: item.name,\n\t\t\t\t\tname: item.title,\n\t\t\t\t\tparent: item.parent,\n\t\t\t\t\tobject: item.object ? item.object : 'members',\n\t\t\t\t\treadonly: item.readonly ? item.readonly : false,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn data;\n\t} );\n\n\t// Init the Tree when needed.\n\tif ( ! relativePath && ! parent ) {\n\t\tinitTree( items );\n\t}\n\n\tdispatch( STORE_KEY ).getMedia( items, relativePath, parent );\n}\n\nexport function * requestMedia( args = {} ) {\n\tconst path = '/buddypress/v1/attachments';\n\tlet relativePathHeader = '';\n\tlet parent = '';\n\n\tif ( ! args.context ) {\n\t\targs.context = select( STORE_KEY ).getRequestsContext();\n\t}\n\n\tif ( args.directory && args.path ) {\n\t\targs.directory = trimEnd( args.path, '/' ) + '/' + args.directory;\n\t}\n\n\tif ( args.parent ) {\n\t\tparent = args.parent;\n\t\tdelete args.parent;\n\t}\n\n\tdelete args.path;\n\n\tconst response = yield fetchFromAPI( addQueryArgs( path, args ), false );\n\n\tif ( hasIn( response, [ 'headers', 'get' ] ) ) {\n\t\t// If the request is fetched using the fetch api, the header can be\n\t\t// retrieved using the 'get' method.\n\t\trelativePathHeader = response.headers.get( 'X-BP-Attachments-Relative-Path' );\n\t} else {\n\t\t// If the request was preloaded server-side and is returned by the\n\t\t// preloading middleware, the header will be a simple property.\n\t\trelativePathHeader = get( response, [ 'headers', 'X-BP-Attachments-Relative-Path' ], '' );\n\t}\n\n\treturn parseResponseMedia( response, relativePathHeader, parent );\n}\n\nexport function destroyMedium( id ) {\n\treturn {\n\t\ttype: 'DESTROY_MEDIUM',\n\t\tid,\n\t}\n};\n\nexport function * removeMedium( medium ) {\n\tconst currentState = select( STORE_KEY ).getState();\n\tconst { relativePath } = currentState;\n\tlet deleted;\n\n\ttry {\n\t\tdeleted = yield deleteMedium( '/buddypress/v1/attachments/' + medium.id + '/', relativePath );\n\n\t\treturn destroyMedium( deleted.previous.id );\n\t} catch ( error ) {\n\t\tmedium.error = error.message;\n\n\t\treturn addMediaError( medium );\n\t}\n}\n","/**\n * External dependencies.\n */\nconst {\n\tfilter,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport {\n\tfetchFromAPI,\n\tinitTree,\n\tgetLoggedInUser as getLoggedInUserAction,\n\tgetMedia as getMediaAction,\n} from './actions';\n\n/**\n * Returns the requests context.\n *\n * @access private\n * @returns {string} The requests context (view or edit).\n */\nconst _requetsContext = () => {\n\tconst { isAdminScreen } = window.bpAttachmentsMediaLibrarySettings || {};\n\treturn isAdminScreen && true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Resolver for retrieving current user.\n */\nexport function* getLoggedInUser() {\n\tconst path = '/buddypress/v1/members/me?context=edit';\n\tconst user = yield fetchFromAPI( path, true );\n\tyield getLoggedInUserAction( user );\n};\n\n/**\n * Resolver for retrieving the media root directories.\n */\nexport function* getMedia() {\n\tconst path = '/buddypress/v1/attachments?context=' + _requetsContext();\n\tconst files = yield fetchFromAPI( path, true );\n\n\t// Init the Directories tree.\n\tinitTree( files );\n\n\tyield getMediaAction( files, '' );\n}\n","/**\n * External dependencies.\n */\n const {\n\treject,\n} = lodash;\n\n/**\n * Internal dependencies\n */\nimport { TYPES as types } from './action-types';\n\n/**\n * Default state.\n */\nconst DEFAULT_STATE = {\n\tuser: {},\n\ttree: [],\n\tcurrentDirectory: '',\n\tfiles: [],\n\trelativePath: '',\n\tuploaded: [],\n\terrored: [],\n\tuploading: false,\n\tended: false,\n\tisSelectable: false,\n\tisGrid: true,\n\tsettings: {},\n\tformState: {},\n};\n\n/**\n * Reducer for the BP Attachments Library.\n *\n * @param   {Object}  state   The current state in the store.\n * @param   {Object}  action  Action object.\n *\n * @return  {Object}          New or existing state.\n */\n const reducer = ( state = DEFAULT_STATE, action ) => {\n\tswitch ( action.type ) {\n\t\tcase types.SET_SETTINGS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsettings: action.settings,\n\t\t\t};\n\n\t\tcase types.GET_LOGGED_IN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user,\n\t\t\t};\n\n\t\tcase types.GET_MEDIA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: action.files,\n\t\t\t\trelativePath: action.relativePath,\n\t\t\t\tcurrentDirectory: action.currentDirectory,\n\t\t\t};\n\n\t\tcase types.FILL_TREE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: [\n\t\t\t\t\t...reject( state.tree, [ 'id', action.item.id ] ),\n\t\t\t\t\taction.item,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.UPDATE_FORM_STATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tformState: action.params,\n\t\t\t};\n\n\t\tcase types.ADD_MEDIA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.file.id ] ),\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.UPLOAD_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploaded: [\n\t\t\t\t\t...state.uploaded,\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.ADD_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrored: [\n\t\t\t\t\t...state.errored,\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.UPLOAD_END:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploaded: reject( state.uploaded, ( u ) => { return u.name === action.uploaded.name || u.name === action.uploaded.title; } ),\n\t\t\t\tended: true,\n\t\t\t};\n\n\t\tcase types.RESET_UPLOADS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: false,\n\t\t\t\tuploaded: [],\n\t\t\t\terrored:[],\n\t\t\t\tended: false,\n\t\t\t};\n\n\t\tcase types.TOGGLE_SELECTABLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSelectable: action.isSelectable,\n\t\t\t};\n\n\t\tcase types.TOGGLE_MEDIA_SELECTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: state.files.map( file => {\n\t\t\t\t\tif ( action.id === file.id ) {\n\t\t\t\t\t\tfile.selected = action.isSelected\n\t\t\t\t\t}\n\n\t\t\t\t\treturn file;\n\t\t\t\t} ),\n\t\t\t};\n\n\t\tcase types.SWITCH_DISPLAY_MODE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisGrid: action.isGrid,\n\t\t\t};\n\n\t\tcase types.DESTROY_MEDIUM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.id ] )\n\t\t\t\t],\n\t\t\t};\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tapiFetch,\n} = wp;\n\n/**\n * Default export for registering the controls with the store.\n *\n * @return {Object} An object with the controls to register with the store on\n *                  the controls property of the registration object.\n */\nexport const controls = {\n\tFETCH_FROM_API( { path, parse } ) {\n\t\treturn apiFetch( { path, parse } );\n\t},\n\tCREATE_FROM_API( { path, data } ) {\n\t\treturn apiFetch( { path, method: 'POST', data } );\n\t},\n\tDELETE_FROM_API( { path, relativePath } ) {\n\t\treturn apiFetch( { path: path, method: 'DELETE', data: {\n\t\t\trelative_path: relativePath\n\t\t} } );\n\t}\n};\n","/**\n * WordPress dependencies.\n */\n const {\n\tdata: {\n\t\tregisterStore,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { STORE_KEY } from './constants';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport reducer from './reducers';\nimport { controls } from './controls';\n\nregisterStore( STORE_KEY, {\n\treducer,\n\tactions,\n\tselectors,\n\tcontrols,\n\tresolvers,\n} );\n\nexport const BP_ATTACHMENTS_STORE_KEY = STORE_KEY;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tPopover,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Header element.\n */\nconst MediaLibraryHeader = ( { settings } ) => {\n\tconst { updateFormState } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst currentDirectoryObject = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getCurrentDirectoryObject();\n\t}, [] );\n\tconst [ isOpen, setOpen ] = useState( false );\n\tconst toggleClass = true === isOpen ? 'split-button is-open' : 'split-button';\n\tconst dashiconClass = true === isOpen ? 'dashicons dashicons-arrow-up-alt2' : 'dashicons dashicons-arrow-down-alt2';\n\tconst canUpload = true !== currentDirectoryObject.readonly;\n\tconst { allowedMediaTypes } = settings;\n\n\tconst showUploadForm = ( e ) => {\n\t\te.preventDefault();\n\n\t\treturn updateFormState(\n\t\t\t{\n\t\t\t\tparentDirectory: currentDirectoryObject.id,\n\t\t\t\taction: 'upload',\n\t\t\t}\n\t\t);\n\t};\n\n\tconst showCreateDirForm = ( e, type ) => {\n\t\te.preventDefault();\n\n\t\tconsole.log( type );\n\t};\n\n\tlet dirOptions = [\n\t\t{\n\t\t\tid: 'directory',\n\t\t\ttext: __( 'Add new directory', 'bp-attachments' ),\n\t\t}\n\t];\n\n\tif ( allowedMediaTypes ) {\n\t\tObject.keys( allowedMediaTypes ).forEach( ( directoryType ) => {\n\t\t\tif ( 'image' === directoryType ) {\n\t\t\t\tdirOptions.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'album',\n\t\t\t\t\t\ttext: __( 'Add new photo album', 'bp-attachments' ),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if ( 'audio' === directoryType ) {\n\t\t\t\tdirOptions.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'audioPlaylist',\n\t\t\t\t\t\ttext: __( 'Add new audio playlist', 'bp-attachments' ),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if ( 'video' === directoryType ) {\n\t\t\t\tdirOptions.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'videoPlaylist',\n\t\t\t\t\t\ttext: __( 'Add new video playlist', 'bp-attachments' ),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst dirList = dirOptions.map( ( dirOption ) => {\n\t\treturn (\n\t\t\t<li key={ 'type-' + dirOption.id }>\n\t\t\t\t<a href=\"#new-bp-media-directory\" className=\"button-link directory-button split-button-option\" onClick={ ( e ) => showCreateDirForm( e, dirOption.id ) }>\n\t\t\t\t\t{ dirOption.text }\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t} );\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"wp-heading-inline\">\n\t\t\t\t{ __( 'Community Media Library', 'bp-attachments' ) }\n\t\t\t</h1>\n\t\t\t{ !! canUpload && (\n\t\t\t\t<div className={ toggleClass }>\n\t\t\t\t\t<div className=\"split-button-head\">\n\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button split-button-primary\" aria-live=\"polite\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t{ __( 'Add new', 'bp-attachments' ) }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<button type=\"button\" className=\"split-button-toggle\" aria-haspopup=\"true\" aria-expanded={ isOpen } onClick={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t<i className={ dashiconClass }></i>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'More actions', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t\t{ isOpen && (\n\t\t\t\t\t\t\t\t<Popover noArrow={ false } onFocusOutside={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t\t\t<ul className=\"split-button-body\">\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button-link media-button split-button-option\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ __( 'Upload media', 'bp-attachments' ) }\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t{ dirList }\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<hr className=\"wp-header-end\"></hr>\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaLibraryHeader;\n","/**\n * WordPress dependencies\n */\n const {\n\tcomponents: {\n\t\tDropZone,\n\t\tFormFileUpload,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { bytesToSize } from '../utils/functions';\n\n/**\n * File Uploader element.\n */\nconst MediaLibraryUploader = ( { settings } ) => {\n\tconst { updateFormState } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst formState = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getFormState();\n\t}, [] );\n\n\tconst closeForm = ( e ) => {\n\t\te.preventDefault();\n\t\tformState.action = '';\n\t\treturn updateFormState( formState );\n\t};\n\n\tconst uploadMedia = ( e ) => {\n\t\te.preventDefault();\n\t};\n\n\tif ( ! formState.action || 'upload' !== formState.action ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"uploader-container enabled\">\n\t\t\t<DropZone\n\t\t\t\tlabel={ __( 'Drop your files here.', 'bp-attachments' ) }\n\t\t\t\tonFilesDrop={ ( e ) => uploadMedia( e ) }\n\t\t\t\tclassName=\"uploader-inline\"\n\t\t\t/>\n\t\t\t<button className=\"close dashicons dashicons-no\" onClick={ ( e ) => closeForm( e ) }>\n\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Close the upload panel', 'bp-attachments' ) }</span>\n\t\t\t</button>\n\t\t\t<div className=\"dropzone-label\">\n\t\t\t\t<h2 className=\"upload-instructions drop-instructions\">{ __( 'Drop files to upload', 'bp-attachments' ) }</h2>\n\t\t\t\t<p className=\"upload-instructions drop-instructions\">{ __( 'or', 'bp-attachments' ) }</p>\n\t\t\t\t<FormFileUpload\n\t\t\t\t\tonChange={ ( e ) => uploadMedia( e ) }\n\t\t\t\t\tmultiple={ true }\n\t\t\t\t\tclassName=\"browser button button-hero\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Select Files', 'bp-attachments' ) }\n\t\t\t\t</FormFileUpload>\n\t\t\t</div>\n\t\t\t<div className=\"upload-restrictions\">\n\t\t\t\t<p>{ sprintf( __( 'Maximum upload file size: %s.', 'bp-attachments' ), bytesToSize( settings.maxUploadFileSize ) ) }</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n };\n\n export default MediaLibraryUploader;\n","/**\n * External dependencies.\n */\nconst {\n\tfind,\n\treverse,\n} = lodash;\n\n/**\n * WordPress dependencies\n */\nconst {\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\tcomponents: {\n\t\tTreeSelect,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Toolbar element.\n */\nconst MediaLibraryToolbar = ( { gridDisplay, tree } ) => {\n\tconst { switchDisplayMode, requestMedia } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst switchMode = ( e, isGrid ) => {\n\t\te.preventDefault();\n\t\tswitchDisplayMode( isGrid );\n\t};\n\tconst { user, currentDirectory, flatTree } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY )\n\t\treturn {\n\t\t\tuser: store.getLoggedInUser(),\n\t\t\tcurrentDirectory: store.getCurrentDirectory(),\n\t\t\tflatTree: store.getFlatTree(),\n\t\t}\n\t}, [] );\n\n\tconst [ page, setPage ] = useState( currentDirectory );\n\tif ( currentDirectory !== page ) {\n\t\tsetPage( currentDirectory );\n\t}\n\n\tconst changeDirectory = ( directory ) => {\n\t\tsetPage( directory );\n\n\t\tconst directoryItem = find( flatTree, { id: directory } );\n\t\tlet args = {};\n\n\t\tif ( directoryItem ) {\n\t\t\targs.directory = directoryItem.slug;\n\t\t\targs.parent = directoryItem.id;\n\n\t\t\tif ( directoryItem.parent && directoryItem.object ) {\n\t\t\t\tlet chunks = reverse(\n\t\t\t\t\tgetDirectoryAncestors(\n\t\t\t\t\t\tflatTree,\n\t\t\t\t\t\tdirectoryItem.parent\n\t\t\t\t\t).map( ( parent ) => parent.slug )\n\t\t\t\t);\n\n\t\t\t\tif ( 'members' === directoryItem.object ) {\n\t\t\t\t\tchunks.splice( 1, 0, directoryItem.object, user.id );\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @todo handle Groups object.\n\t\t\t\t */\n\n\t\t\t\targs.path = '/' + chunks.join( '/' );\n\t\t\t}\n\n\t\t\tif ( directoryItem.object ) {\n\t\t\t\targs.object = directoryItem.object;\n\t\t\t}\n\t\t}\n\n\t\treturn requestMedia( args );\n\t}\n\n\treturn (\n\t\t<div className=\"media-toolbar wp-filter\">\n\t\t\t<div className=\"media-toolbar-secondary\">\n\t\t\t\t<div className=\"view-switch media-grid-view-switch\">\n\t\t\t\t\t<a href=\"#view-list\" onClick={ ( e ) => switchMode( e, false ) } className={ gridDisplay ? 'view-list' : 'view-list current' }>\n\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display list', 'bp-attachments' ) }</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href=\"#view-grid\" onClick={ ( e ) => switchMode( e, true ) } className={ gridDisplay ? 'view-grid current' : 'view-grid' }>\n\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display grid', 'bp-attachments' ) }</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ !! tree.length && (\n\t\t\t\t<div className=\"media-toolbar-primary\">\n\t\t\t\t\t<TreeSelect\n\t\t\t\t\t\tnoOptionLabel={ __( 'Home', 'bp-attachments' ) }\n\t\t\t\t\t\tonChange={ ( directory ) => changeDirectory( directory ) }\n\t\t\t\t\t\tselectedId={ page }\n\t\t\t\t\t\ttree={ tree }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryToolbar;\n","/**\n * External dependencies\n */\nconst { template } = lodash;\n\nfunction setTemplate( tmpl ) {\n\tconst options = {\n\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\tvariable:    'data'\n\t};\n\n\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n}\n\nexport default setTemplate;\n","/**\n * WordPress dependencies\n */\n const {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\tcomponents: {\n\t\tModal,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport setTemplate from '../utils/set-template';\n\nconst MediaItem = ( props ) => {\n\tconst Template = setTemplate( 'bp-attachments-media-item' );\n\tconst { title, vignette } = props;\n\tconst [ isOpen, toggleModal ] = useState( false );\n\tconst [ isSelected, selectMedia ] = useState( false );\n\tconst getRelativePath = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getRelativePath();\n\t}, [] );\n\tconst { toggleMediaSelection, requestMedia } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst classes = isSelected ? 'media-item selected' : 'media-item';\n\n\tconst onMediaClick = () => {\n\t\tconst { mimeType, name, isSelectable, id, object } = props;\n\n\t\tif ( isSelectable ) {\n\t\t\tselectMedia( ! isSelected );\n\t\t\treturn toggleMediaSelection( id, ! isSelected );\n\t\t}\n\n\t\tif ( 'inode/directory' === mimeType ) {\n\t\t\treturn requestMedia( { directory: name, path: getRelativePath, object: object, parent: id } );\n\t\t}\n\n\t\ttoggleModal( true );\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div\n\t\t\t\tclassName={ classes }\n\t\t\t\tdangerouslySetInnerHTML={ { __html: Template( props ) } }\n\t\t\t\trole=\"checkbox\"\n\t\t\t\tonClick={ () => onMediaClick() }\n\t\t\t/>\n\t\t\t{ isOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ sprintf( __( 'Details for: %s', 'bp-attachments' ), title ) }\n\t\t\t\t\tonRequestClose={ () => toggleModal( false ) }\n\t\t\t\t>\n\n\t\t\t\t\t{ vignette && (\n\t\t\t\t\t\t<img src={vignette} className=\"mediaDetails\" />\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ ! vignette && (\n\t\t\t\t\t\t<p>{ __( '@todo Fetch the Media properties.', 'bp-attachments' ) }</p>\n\t\t\t\t\t) }\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaItem;\n","/**\n * WordPress dependencies\n */\nconst {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport MediaItem from './item';\n\n/**\n * Main element.\n */\nconst MediaLibraryMain = ( { gridDisplay, tree } ) => {\n\tconst { items, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\titems: store.getMedia(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t};\n\t}, [] );\n\n\tlet mediaItems = null;\n\tif ( items.length ) {\n\t\tmediaItems = items.map( ( item ) => {\n\t\t\treturn (\n\t\t\t\t<MediaItem\n\t\t\t\t\tkey={ 'media-item-' + item.id }\n\t\t\t\t\tid={ item.id }\n\t\t\t\t\tname={ item.name }\n\t\t\t\t\ttitle={ item.title }\n\t\t\t\t\tmediaType={ item.media_type }\n\t\t\t\t\tmimeType={ item.mime_type }\n\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\tvignette={ item.vignette }\n\t\t\t\t\torientation={ item.orientation }\n\t\t\t\t\tisSelected= { item.selected || false }\n\t\t\t\t\tobject= { item.object || 'members' }\n\t\t\t\t\tisSelectable = { isSelectable }\n\t\t\t\t\ttree = { tree }\n\t\t\t\t/>\n\t\t\t);\n\t\t} );\n\t}\n\n\treturn (\n\t\t<div className={ isSelectable ? 'media-items mode-select' : 'media-items' }>\n\t\t\t{ mediaItems }\n\t\t\t{ ! items.length && (\n\t\t\t\t<p className=\"no-media\">{ __( 'No community media items found.', 'bp-attachments' ) }</p>\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryMain;\n","/**\n * WordPress dependencies\n */\nconst {\n\tdomReady,\n\telement: {\n\t\tcreateElement,\n\t\trender,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from './store';\nimport MediaLibraryHeader from './elements/header';\nimport MediaLibraryUploader from './elements/uploader';\nimport MediaLibraryToolbar from './elements/toolbar';\nimport MediaLibraryMain from './elements/main';\n\nconst MediaLibrary = ( { settings } ) => {\n\tconst { isGrid, globalSettings, tree } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\t\treturn {\n\t\t\tisGrid: store.isGridDisplayMode(),\n\t\t\tglobalSettings: store.getSettings(),\n\t\t\ttree: store.getTree(),\n\t\t};\n\t}, [] );\n\n\tif ( ! Object.keys( globalSettings ).length ) {\n\t\tconst { setSettings } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\t\tsetSettings( settings );\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MediaLibraryHeader settings={ globalSettings } />\n\t\t\t<MediaLibraryUploader settings={ globalSettings } />\n\t\t\t<MediaLibraryToolbar gridDisplay={ isGrid } tree={ tree } />\n\t\t\t<MediaLibraryMain gridDisplay={ isGrid } tree={ tree } />\n\t\t</Fragment>\n\t);\n};\n\ndomReady( function() {\n\tconst settings = window.bpAttachmentsMediaLibrarySettings || {};\n\trender( <MediaLibrary settings={ settings }/>, document.querySelector( '#bp-media-library' ) );\n} );\n"],"names":["STORE_KEY","i18n","__","wp","filter","lodash","getDirectoryAncestors","tree","parentId","parents","id","forEach","parent","grandParents","bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","toFixed","trim","groupBy","indexOf","find","defaultTo","getSettings","state","settings","getRequestsContext","isAdminScreen","isGridDisplayMode","isGrid","getLoggedInUser","user","getFormState","formState","isUploading","uploading","uploadEnded","ended","getUploadedFiles","uploaded","getErroredFiles","errored","getMedia","files","getCurrentDirectory","currentDirectory","getCurrentDirectoryObject","defaultValue","readonly","getTree","groupedTree","currentChildrenIds","map","child","length","childId","currentAncestors","ancestor","Object","keys","treeIndex","fillWithChildren","items","item","children","getFlatTree","isSelectable","getRelativePath","relativePath","getMediumDestinationData","object","destinationData","split","status","TYPES","SET_SETTINGS","GET_LOGGED_IN_USER","GET_MEDIA","ADD_MEDIA","FILL_TREE","DESTROY_MEDIUM","FETCH_FROM_API","CREATE_FROM_API","DELETE_FROM_API","UPLOAD_START","UPLOAD_END","RESET_UPLOADS","ADD_ERROR","TOGGLE_SELECTABLE","TOGGLE_MEDIA_SELECTION","SWITCH_DISPLAY_MODE","UPDATE_FORM_STATE","uniqueId","hasIn","trimEnd","data","dispatch","select","url","addQueryArgs","setSettings","type","types","fetchFromAPI","path","parse","createFromAPI","deleteFromAPI","switchDisplayMode","updateFormState","params","createMedium","formData","addMedia","file","initTree","directories","mime_type","addItemTree","slug","name","title","deleteMedium","addMediaError","toggleSelectable","toggleMediaSelection","isSelected","insertMedium","currentState","getState","parentDir","FormData","append","error","message","createDirectory","directory","directoryName","directoryType","parseResponseMedia","async","response","arguments","undefined","json","then","requestMedia","args","relativePathHeader","context","headers","get","destroyMedium","removeMedium","medium","deleted","previous","getLoggedInUserAction","window","bpAttachmentsMediaLibrarySettings","_requetsContext","getMediaAction","reject","DEFAULT_STATE","$101f7048d1a3a5c4$export$2e2bcd8739ae039","action","u","selected","apiFetch","controls","_ref","_ref2","method","_ref3","relative_path","registerStore","reducer","actions","selectors","resolvers","BP_ATTACHMENTS_STORE_KEY","components","Popover","useDispatch","useSelect","element","createElement","Fragment","useState","$fcd8ebc78e2f45bd$export$2e2bcd8739ae039","currentDirectoryObject","isOpen","setOpen","toggleClass","dashiconClass","canUpload","allowedMediaTypes","showUploadForm","e","preventDefault","parentDirectory","dirOptions","text","push","dirList","dirOption","$fcd8ebc78e2f45bd$var$createElement","key","href","className","onClick","console","showCreateDirForm","$fcd8ebc78e2f45bd$var$Fragment","$fcd8ebc78e2f45bd$var$Popover","noArrow","onFocusOutside","DropZone","FormFileUpload","sprintf","$9677e9ae62a97894$export$2e2bcd8739ae039","uploadMedia","$9677e9ae62a97894$var$createElement","$9677e9ae62a97894$var$DropZone","label","onFilesDrop","closeForm","$9677e9ae62a97894$var$FormFileUpload","onChange","multiple","maxUploadFileSize","reverse","TreeSelect","$b3153ca487c736b9$export$2e2bcd8739ae039","gridDisplay","switchMode","flatTree","store","page","setPage","$b3153ca487c736b9$var$createElement","$b3153ca487c736b9$var$TreeSelect","noOptionLabel","directoryItem","chunks","splice","join","changeDirectory","selectedId","template","Modal","$25915412e7fc4248$export$2e2bcd8739ae039","props","Template","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","vignette","toggleModal","selectMedia","$25915412e7fc4248$var$createElement","$25915412e7fc4248$var$Fragment","dangerouslySetInnerHTML","__html","role","mimeType","onMediaClick","$25915412e7fc4248$var$Modal","onRequestClose","src","$1e56901890e67653$export$2e2bcd8739ae039","mediaItems","$1e56901890e67653$var$createElement","mediaType","media_type","icon","orientation","domReady","render","MediaLibrary","globalSettings","$85929bbc1a3f4ac8$var$createElement","$85929bbc1a3f4ac8$var$Fragment","$85929bbc1a3f4ac8$var$MediaLibrary"],"version":3,"file":"index.js.map"}